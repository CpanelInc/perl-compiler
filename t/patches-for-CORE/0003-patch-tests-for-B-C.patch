From 22ee51e35ed2825bd7ff2671baac19a99c55c4a1 Mon Sep 17 00:00:00 2001
From: Nicolas Rochelemagne <rochelemagne@cpanel.net>
Date: Fri, 25 Sep 2015 11:32:48 -0500
Subject: [PATCH 3/3] patch tests for B::C

---
 t/CORE/TEST                        |   4 +-
 t/CORE/base/rs.t                   |   2 +-
 t/CORE/base/term.t                 |   6 +-
 t/CORE/cmd/mod.t                   |   2 +-
 t/CORE/comp/bproto.t               |   5 --
 t/CORE/comp/line_debug.t           |   2 +-
 t/CORE/comp/parser.t               |   5 +-
 t/CORE/comp/proto.t                |   3 +-
 t/CORE/comp/require.t              |   7 +-
 t/CORE/comp/use.t                  |   3 +-
 t/CORE/io/argv.t                   |   5 +-
 t/CORE/io/binmode.t                |   5 +-
 t/CORE/io/bom.t                    |   5 +-
 t/CORE/io/closepid.t               |   5 +-
 t/CORE/io/crlf.t                   |   3 +-
 t/CORE/io/crlf_through.t           |   6 +-
 t/CORE/io/data.t                   |   5 +-
 t/CORE/io/defout.t                 |   5 +-
 t/CORE/io/dup.t                    |   5 +-
 t/CORE/io/eintr.t                  |   5 +-
 t/CORE/io/eintr_print.t            |   5 +-
 t/CORE/io/errno.t                  |   2 +-
 t/CORE/io/errnosig.t               |   3 +-
 t/CORE/io/fflush.t                 |   5 +-
 t/CORE/io/fs.t                     |   5 +-
 t/CORE/io/inplace.t                |   2 +-
 t/CORE/io/iofile.t                 |   5 +-
 t/CORE/io/iprefix.t                |   3 +-
 t/CORE/io/layers.t                 |  26 +++----
 t/CORE/io/nargv.t                  |   5 +-
 t/CORE/io/open.t                   |  14 ++--
 t/CORE/io/openpid.t                |   5 +-
 t/CORE/io/perlio.t                 |   5 +-
 t/CORE/io/perlio_fail.t            |   6 +-
 t/CORE/io/perlio_leaks.t           |   5 +-
 t/CORE/io/perlio_open.t            |   5 +-
 t/CORE/io/pipe.t                   |  18 ++---
 t/CORE/io/print.t                  |   5 +-
 t/CORE/io/pvbm.t                   |   5 +-
 t/CORE/io/read.t                   |   5 +-
 t/CORE/io/say.t                    |   5 +-
 t/CORE/io/sem.t                    |   5 +-
 t/CORE/io/shm.t                    |   6 +-
 t/CORE/io/socket.t                 |   5 +-
 t/CORE/io/tell.t                   |  11 ++-
 t/CORE/io/through.t                |   5 +-
 t/CORE/io/utf8.t                   |   5 +-
 t/CORE/lib/1_compile.t             |   3 +-
 t/CORE/lib/common.pl               |   2 +-
 t/CORE/lib/commonsense.t           |   3 +-
 t/CORE/lib/compmod.pl              |   1 -
 t/CORE/lib/cygwin.t                |   3 +-
 t/CORE/lib/deprecate.t             |   2 +-
 t/CORE/lib/mypragma.t              |   2 +-
 t/CORE/lib/no_load.t               |   1 -
 t/CORE/lib/proxy_constant_subs.t   |   2 +-
 t/CORE/lib/universal.t             |   3 +-
 t/CORE/lib/warnings/doio           |   8 +-
 t/CORE/lib/warnings/pp_sys         |  28 +++----
 t/CORE/mro/basic.t                 |   5 +-
 t/CORE/mro/basic_01_c3.t           |   2 +-
 t/CORE/mro/basic_01_c3_utf8.t      |   2 +-
 t/CORE/mro/basic_01_dfs.t          |   2 +-
 t/CORE/mro/basic_01_dfs_utf8.t     |   2 +-
 t/CORE/mro/basic_02_c3.t           |   2 +-
 t/CORE/mro/basic_02_c3_utf8.t      |   2 +-
 t/CORE/mro/basic_02_dfs.t          |   2 +-
 t/CORE/mro/basic_02_dfs_utf8.t     |   2 +-
 t/CORE/mro/basic_03_c3.t           |   2 +-
 t/CORE/mro/basic_03_c3_utf8.t      |   2 +-
 t/CORE/mro/basic_03_dfs.t          |   2 +-
 t/CORE/mro/basic_03_dfs_utf8.t     |   2 +-
 t/CORE/mro/basic_04_c3.t           |   2 +-
 t/CORE/mro/basic_04_c3_utf8.t      |   2 +-
 t/CORE/mro/basic_04_dfs.t          |   2 +-
 t/CORE/mro/basic_04_dfs_utf8.t     |   2 +-
 t/CORE/mro/basic_05_c3.t           |   2 +-
 t/CORE/mro/basic_05_c3_utf8.t      |   2 +-
 t/CORE/mro/basic_05_dfs.t          |   2 +-
 t/CORE/mro/basic_05_dfs_utf8.t     |   2 +-
 t/CORE/mro/basic_utf8.t            |   2 +-
 t/CORE/mro/c3_with_overload.t      |   2 +-
 t/CORE/mro/c3_with_overload_utf8.t |   2 +-
 t/CORE/mro/complex_c3.t            |   2 +-
 t/CORE/mro/complex_c3_utf8.t       |   2 +-
 t/CORE/mro/complex_dfs.t           |   2 +-
 t/CORE/mro/complex_dfs_utf8.t      |   2 +-
 t/CORE/mro/dbic_c3.t               |   2 +-
 t/CORE/mro/dbic_c3_utf8.t          |   2 +-
 t/CORE/mro/dbic_dfs.t              |   2 +-
 t/CORE/mro/dbic_dfs_utf8.t         |   2 +-
 t/CORE/mro/inconsistent_c3.t       |   8 +-
 t/CORE/mro/inconsistent_c3_utf8.t  |   8 +-
 t/CORE/mro/isa_aliases.t           |   2 +-
 t/CORE/mro/isa_aliases_utf8.t      |   3 +-
 t/CORE/mro/isa_c3.t                |   6 +-
 t/CORE/mro/isa_c3_utf8.t           |   6 +-
 t/CORE/mro/isa_dfs.t               |   6 +-
 t/CORE/mro/isa_dfs_utf8.t          |   6 +-
 t/CORE/mro/isarev.t                |   8 +-
 t/CORE/mro/isarev_utf8.t           |   8 +-
 t/CORE/mro/method_caching.t        |   8 +-
 t/CORE/mro/method_caching_utf8.t   |   9 +--
 t/CORE/mro/next_NEXT.t             |   2 +-
 t/CORE/mro/next_NEXT_utf8.t        |   2 +-
 t/CORE/mro/next_edgecases.t        |   2 +-
 t/CORE/mro/next_edgecases_utf8.t   |   2 +-
 t/CORE/mro/next_goto.t             |   2 +-
 t/CORE/mro/next_goto_utf8.t        |   2 +-
 t/CORE/mro/next_inanon.t           |   2 +-
 t/CORE/mro/next_inanon_utf8.t      |   2 +-
 t/CORE/mro/next_ineval.t           |   2 +-
 t/CORE/mro/next_ineval_utf8.t      |   2 +-
 t/CORE/mro/next_method.t           |   2 +-
 t/CORE/mro/next_method_utf8.t      |   2 +-
 t/CORE/mro/next_skip.t             |   2 +-
 t/CORE/mro/next_skip_utf8.t        |   2 +-
 t/CORE/mro/overload_c3.t           |  10 +--
 t/CORE/mro/overload_c3_utf8.t      |   8 +-
 t/CORE/mro/overload_dfs.t          |   8 +-
 t/CORE/mro/package_aliases.t       |   8 +-
 t/CORE/mro/package_aliases_utf8.t  |  24 ++----
 t/CORE/mro/pkg_gen.t               |   3 +-
 t/CORE/mro/pkg_gen_utf8.t          |   3 +-
 t/CORE/mro/recursion_c3.t          |   8 +-
 t/CORE/mro/recursion_c3_utf8.t     |   9 +--
 t/CORE/mro/recursion_dfs.t         |   8 +-
 t/CORE/mro/recursion_dfs_utf8.t    |  10 +--
 t/CORE/mro/vulcan_c3.t             |   2 +-
 t/CORE/mro/vulcan_c3_utf8.t        |   2 +-
 t/CORE/mro/vulcan_dfs.t            |   2 +-
 t/CORE/mro/vulcan_dfs_utf8.t       |   2 +-
 t/CORE/op/64bitint.t               |   5 +-
 t/CORE/op/alarm.t                  |   5 +-
 t/CORE/op/anonsub.t                |   5 +-
 t/CORE/op/append.t                 |   5 +-
 t/CORE/op/args.t                   |   5 +-
 t/CORE/op/array.t                  |   5 +-
 t/CORE/op/array_base.t             |  29 +++++---
 t/CORE/op/assignwarn.t             |   5 +-
 t/CORE/op/attrhand.t               |   5 +-
 t/CORE/op/attrproto.t              |   5 +-
 t/CORE/op/attrs.t                  |   5 +-
 t/CORE/op/auto.t                   |   3 +-
 t/CORE/op/avhv.t                   |   5 +-
 t/CORE/op/bless.t                  |   5 +-
 t/CORE/op/blocks.t                 |   5 +-
 t/CORE/op/bop.t                    |   5 +-
 t/CORE/op/caller.t                 |  49 +++++++++----
 t/CORE/op/chars.t                  |   5 +-
 t/CORE/op/chdir.t                  |  20 +++--
 t/CORE/op/chop.t                   |   5 +-
 t/CORE/op/chr.t                    |   3 +-
 t/CORE/op/closure.t                |   8 +-
 t/CORE/op/concat2.t                |   5 +-
 t/CORE/op/cond.t                   |   5 +-
 t/CORE/op/context.t                |   3 +-
 t/CORE/op/coreamp.t                |   8 +-
 t/CORE/op/coresubs.t               |   8 +-
 t/CORE/op/cproto.t                 |   5 +-
 t/CORE/op/crypt.t                  |   6 +-
 t/CORE/op/current_sub.t            |  15 +---
 t/CORE/op/dbm.t                    |   5 +-
 t/CORE/op/defined.t                |   3 +-
 t/CORE/op/defins.t                 |   5 +-
 t/CORE/op/delete.t                 |   3 +-
 t/CORE/op/die.t                    |   5 +-
 t/CORE/op/die_except.t             |   2 +-
 t/CORE/op/die_exit.t               |   5 +-
 t/CORE/op/die_keeperr.t            |   5 +-
 t/CORE/op/die_unwind.t             |   2 +-
 t/CORE/op/do.t                     |   5 +-
 t/CORE/op/dor.t                    |   5 +-
 t/CORE/op/each.t                   |   5 +-
 t/CORE/op/each_array.t             |   5 +-
 t/CORE/op/eval.t                   |   4 +-
 t/CORE/op/evalbytes.t              |   5 +-
 t/CORE/op/exec.t                   |   5 +-
 t/CORE/op/exists_sub.t             |   5 +-
 t/CORE/op/exp.t                    |   5 +-
 t/CORE/op/fh.t                     |   5 +-
 t/CORE/op/filehandle.t             |   5 +-
 t/CORE/op/filetest.t               |   5 +-
 t/CORE/op/filetest_stack_ok.t      |   5 +-
 t/CORE/op/filetest_t.t             |   5 +-
 t/CORE/op/flip.t                   |   4 +-
 t/CORE/op/for.t                    |   2 +-
 t/CORE/op/fork.t                   |   5 +-
 t/CORE/op/fresh_perl_utf8.t        |   5 +-
 t/CORE/op/getppid.t                |  10 +--
 t/CORE/op/glob.t                   |   5 +-
 t/CORE/op/gmagic.t                 |   5 +-
 t/CORE/op/goto.t                   |   3 +-
 t/CORE/op/grent.t                  |   5 +-
 t/CORE/op/grep.t                   |   3 +-
 t/CORE/op/groups.t                 |   5 +-
 t/CORE/op/gv.t                     |   6 +-
 t/CORE/op/hash-rt85026.t           |   5 +-
 t/CORE/op/hash.t                   |   5 +-
 t/CORE/op/hashassign.t             |   5 +-
 t/CORE/op/hashwarn.t               |   5 +-
 t/CORE/op/heredoc.t                |   5 +-
 t/CORE/op/inc.t                    |   2 +-
 t/CORE/op/inccode-tie.t            |   2 +-
 t/CORE/op/inccode.t                |   7 +-
 t/CORE/op/incfilter.t              |  10 +--
 t/CORE/op/index.t                  |   5 +-
 t/CORE/op/int.t                    |   5 +-
 t/CORE/op/join.t                   |   5 +-
 t/CORE/op/kill0.t                  |   5 +-
 t/CORE/op/kvaslice.t               |   5 +-
 t/CORE/op/kvhslice.t               |   5 +-
 t/CORE/op/lc.t                     |   7 +-
 t/CORE/op/leaky-magic.t            |   5 +-
 t/CORE/op/length.t                 |   5 +-
 t/CORE/op/lex.t                    |   2 +-
 t/CORE/op/lex_assign.t             |   5 +-
 t/CORE/op/lexsub.t                 |   5 +-
 t/CORE/op/lfs.t                    |   5 +-
 t/CORE/op/list.t                   |   3 +-
 t/CORE/op/local.t                  |   5 +-
 t/CORE/op/localref.t               |   3 +-
 t/CORE/op/lock.t                   |   5 +-
 t/CORE/op/loopctl.t                |   3 +-
 t/CORE/op/lop.t                    |   5 +-
 t/CORE/op/magic-27839.t            |   4 +-
 t/CORE/op/magic.t                  |  15 ++--
 t/CORE/op/method.t                 |   7 +-
 t/CORE/op/mkdir.t                  |   5 +-
 t/CORE/op/my.t                     |   5 +-
 t/CORE/op/my_stash.t               |   5 +-
 t/CORE/op/mydef.t                  |  12 +--
 t/CORE/op/negate.t                 |   5 +-
 t/CORE/op/not.t                    |   5 +-
 t/CORE/op/numconvert.t             |   5 +-
 t/CORE/op/oct.t                    |   2 +-
 t/CORE/op/or.t                     |   5 +-
 t/CORE/op/ord.t                    |   3 +-
 t/CORE/op/overload_integer.t       |   5 +-
 t/CORE/op/override.t               | 145 +------------------------------------
 t/CORE/op/pack.t                   |   5 +-
 t/CORE/op/packagev.t               |   5 +-
 t/CORE/op/pos.t                    |   5 +-
 t/CORE/op/postfixderef.t           |   5 +-
 t/CORE/op/pow.t                    |   5 +-
 t/CORE/op/print.t                  |   2 +-
 t/CORE/op/protowarn.t              |   5 +-
 t/CORE/op/push.t                   |   5 +-
 t/CORE/op/pwent.t                  |   5 +-
 t/CORE/op/qr.t                     |   3 +-
 t/CORE/op/quotemeta.t              |   3 +-
 t/CORE/op/rand.t                   |   3 +-
 t/CORE/op/range.t                  |   5 +-
 t/CORE/op/read.t                   |  14 +---
 t/CORE/op/readdir.t                |  17 +----
 t/CORE/op/readline.t               |   5 +-
 t/CORE/op/recurse.t                |   5 +-
 t/CORE/op/ref.t                    |   5 +-
 t/CORE/op/repeat.t                 |   5 +-
 t/CORE/op/require_37033.t          |   4 +-
 t/CORE/op/require_errors.t         |   7 +-
 t/CORE/op/reset.t                  |   5 +-
 t/CORE/op/reverse.t                |   5 +-
 t/CORE/op/rt119311.t               |   5 +-
 t/CORE/op/runlevel.t               |   5 +-
 t/CORE/op/select.t                 |  10 +--
 t/CORE/op/setpgrpstack.t           |   5 +-
 t/CORE/op/sigdispatch.t            |   2 +-
 t/CORE/op/signatures.t             |   5 +-
 t/CORE/op/sigsystem.t              |   2 +-
 t/CORE/op/sleep.t                  |   3 +-
 t/CORE/op/smartkve.t               |   5 +-
 t/CORE/op/smartmatch.t             |   5 +-
 t/CORE/op/sort.t                   |   5 +-
 t/CORE/op/splice.t                 |   5 +-
 t/CORE/op/split.t                  |   5 +-
 t/CORE/op/split_unicode.t          |   7 +-
 t/CORE/op/sprintf.t                |   5 +-
 t/CORE/op/sprintf2.t               |   5 +-
 t/CORE/op/srand.t                  |   3 +-
 t/CORE/op/sselect.t                |   5 +-
 t/CORE/op/stash.t                  |   5 +-
 t/CORE/op/stat.t                   |  27 +++----
 t/CORE/op/state.t                  |   5 +-
 t/CORE/op/study.t                  |   5 +-
 t/CORE/op/studytied.t              |   5 +-
 t/CORE/op/sub.t                    |   5 +-
 t/CORE/op/sub_lval.t               |   5 +-
 t/CORE/op/substr.t                 |   5 +-
 t/CORE/op/svleak.t                 |   5 +-
 t/CORE/op/switch.t                 |   6 +-
 t/CORE/op/symbolcache.t            |  11 ++-
 t/CORE/op/sysio.t                  |   6 +-
 t/CORE/op/tie.t                    |   5 +-
 t/CORE/op/tie_fetch_count.t        |   9 +--
 t/CORE/op/tiearray.t               |   5 +-
 t/CORE/op/tiehandle.t              |   5 +-
 t/CORE/op/time.t                   |   5 +-
 t/CORE/op/time_loop.t              |   2 +-
 t/CORE/op/tr.t                     |   5 +-
 t/CORE/op/undef.t                  |   5 +-
 t/CORE/op/universal.t              |   5 +-
 t/CORE/op/unlink.t                 |   5 +-
 t/CORE/op/unshift.t                |   2 +-
 t/CORE/op/upgrade.t                |   5 +-
 t/CORE/op/utf8cache.t              |   5 +-
 t/CORE/op/utf8decode.t             |   5 +-
 t/CORE/op/utf8magic.t              |   5 +-
 t/CORE/op/utfhash.t                |   8 +-
 t/CORE/op/utftaint.t               |   5 +-
 t/CORE/op/vec.t                    |   3 +-
 t/CORE/op/ver.t                    |   3 +-
 t/CORE/op/waitpid.t                |   5 +-
 t/CORE/op/wantarray.t              |   5 +-
 t/CORE/op/warn.t                   |   6 +-
 t/CORE/op/while.t                  |  10 +--
 t/CORE/op/write.t                  |   5 +-
 t/CORE/op/yadayada.t               |   5 +-
 t/CORE/re/charset.t                |   6 +-
 t/CORE/re/fold_grind.t             |   8 +-
 t/CORE/re/no_utf8_pm.t             |   6 +-
 t/CORE/re/overload.t               |   6 +-
 t/CORE/re/pat.t                    |   6 +-
 t/CORE/re/pat_advanced.t           |   6 +-
 t/CORE/re/pat_psycho.t             |   6 +-
 t/CORE/re/pat_re_eval.t            |   6 +-
 t/CORE/re/pat_rt_report.t          |   6 +-
 t/CORE/re/pat_special_cc.t         |   6 +-
 t/CORE/re/pos.t                    |   4 +-
 t/CORE/re/qr-72922.t               |   5 +-
 t/CORE/re/qr.t                     |   6 +-
 t/CORE/re/qr_gc.t                  |   6 +-
 t/CORE/re/qrstack.t                |   6 +-
 t/CORE/re/recompile.t              |   6 +-
 t/CORE/re/reg_60508.t              |   6 +-
 t/CORE/re/reg_email.t              |   6 +-
 t/CORE/re/reg_eval.t               |   2 +-
 t/CORE/re/reg_eval_scope.t         |   6 +-
 t/CORE/re/reg_fold.t               |   6 +-
 t/CORE/re/reg_mesg.t               |   6 +-
 t/CORE/re/reg_namedcapture.t       |   4 +-
 t/CORE/re/reg_nc_tie.t             |   6 +-
 t/CORE/re/reg_pmod.t               |   4 +-
 t/CORE/re/reg_posixcc.t            |   4 +-
 t/CORE/re/regex_sets.t             |   6 +-
 t/CORE/re/regex_sets_compat.t      |   2 +-
 t/CORE/re/regexp.t                 |   6 +-
 t/CORE/re/regexp_noamp.t           |   2 +-
 t/CORE/re/regexp_notrie.t          |   2 +-
 t/CORE/re/regexp_qr.t              |   2 +-
 t/CORE/re/regexp_qr_embed.t        |   2 +-
 t/CORE/re/regexp_trielist.t        |   2 +-
 t/CORE/re/regexp_unicode_prop.t    |   2 +-
 t/CORE/re/rt122747.t               |   5 +-
 t/CORE/re/rxcode.t                 |   6 +-
 t/CORE/re/subst.t                  |   4 +-
 t/CORE/re/substT.t                 |   7 +-
 t/CORE/re/subst_amp.t              |   6 +-
 t/CORE/re/subst_wamp.t             |   2 +-
 t/CORE/re/uniprops.t               |   3 +-
 t/CORE/uni/attrs.t                 |   6 +-
 t/CORE/uni/bless.t                 |   6 +-
 t/CORE/uni/cache.t                 |   4 +-
 t/CORE/uni/caller.t                |   6 +-
 t/CORE/uni/case.pl                 |   2 +-
 t/CORE/uni/chomp.t                 |   2 +-
 t/CORE/uni/chr.t                   |   2 +-
 t/CORE/uni/class.t                 |   4 +-
 t/CORE/uni/eval.t                  |   2 +-
 t/CORE/uni/fold.t                  |   8 +-
 t/CORE/uni/goto.t                  |   2 +-
 t/CORE/uni/greek.t                 |   2 +-
 t/CORE/uni/gv.t                    |   6 +-
 t/CORE/uni/labels.t                |   6 +-
 t/CORE/uni/latin2.t                |   2 +-
 t/CORE/uni/lex_utf8.t              |   4 +-
 t/CORE/uni/lower.t                 |   5 +-
 t/CORE/uni/method.t                |   4 +-
 t/CORE/uni/opcroak.t               |   6 +-
 t/CORE/uni/overload.t              |   4 +-
 t/CORE/uni/package.t               |   2 +-
 t/CORE/uni/parser.t                |   2 +-
 t/CORE/uni/readline.t              |   4 +-
 t/CORE/uni/select.t                |   6 +-
 t/CORE/uni/sprintf.t               |   4 +-
 t/CORE/uni/stash.t                 |   4 +-
 t/CORE/uni/tie.t                   |   2 +-
 t/CORE/uni/title.t                 |   6 +-
 t/CORE/uni/tr_7jis.t               |   2 +-
 t/CORE/uni/tr_eucjp.t              |   2 +-
 t/CORE/uni/tr_sjis.t               |   2 +-
 t/CORE/uni/tr_utf8.t               |   2 +-
 t/CORE/uni/universal.t             |   6 +-
 t/CORE/uni/upper.t                 |   4 +-
 t/CORE/uni/variables.t             |   2 +-
 t/CORE/uni/write.t                 |   2 +-
 396 files changed, 828 insertions(+), 1317 deletions(-)

diff --git a/t/CORE/TEST b/t/CORE/TEST
index 96eb6a4..5b27cb1 100755
--- a/t/CORE/TEST
+++ b/t/CORE/TEST
@@ -132,9 +132,7 @@ our $show_elapsed_time = $ENV{HARNESS_TIMER} || 0;
 }
 
 chdir 't' if -f 't/TEST';
-if (-f 'TEST' && -f 'harness' && -d '../lib') {
-    @INC = '../lib';
-}
+unshift @INC, 't/CORE/lib';
 
 die "You need to run \"make test\" first to set things up.\n"
   unless -e 'perl' or -e 'perl.exe' or -e 'perl.pm';
diff --git a/t/CORE/base/rs.t b/t/CORE/base/rs.t
index 416696e..57082c4 100644
--- a/t/CORE/base/rs.t
+++ b/t/CORE/base/rs.t
@@ -120,7 +120,7 @@ $/ = "\n";
  # If we do not include the lib directories, we may end up picking up a
  # binary-incompatible previously-installed version. The eval won’t help in
  # intercepting a SIGTRAP.
- local @INC = ("../lib", "lib", @INC);
+ local @INC = ("t/CORE/lib", @INC);
  if (not eval q/use PerlIO::scalar; use PerlIO::via::scalar; 1/) {
   # In-memory files necessitate PerlIO::via::scalar, thus a perl with
   # perlio and dynaloading enabled. miniperl won't be able to run this
diff --git a/t/CORE/base/term.t b/t/CORE/base/term.t
index 7a16ffd..53108ca 100644
--- a/t/CORE/base/term.t
+++ b/t/CORE/base/term.t
@@ -1,9 +1,5 @@
 #!./perl
 
-BEGIN {
-    chdir 't' if -d 't';
-}
-
 print "1..7\n";
 
 # check "" interpretation
@@ -48,5 +44,5 @@ else {
     die "/dev/null IS NOT A CHARACTER SPECIAL FILE!!!!\n" unless -c '/dev/null';
 }
 
-open(try, "harness") || (die "Can't open harness.");
+open( try, "t/CORE/TEST" ) || ( die "Can't open t/CORE/TEST." );
 if (<try> ne '') {print "ok 7\n";} else {print "not ok 7\n";}
diff --git a/t/CORE/cmd/mod.t b/t/CORE/cmd/mod.t
index 07617f5..70849d5 100644
--- a/t/CORE/cmd/mod.t
+++ b/t/CORE/cmd/mod.t
@@ -32,7 +32,7 @@ if (join(' ',@y) eq '0 2 4 6 8 10 12 14 16 18 20') {
 	print "not ok 7 @y\n";
 }
 
-open(foo,'./TEST') || open(foo,'TEST') || open(foo,'t/TEST');
+open(foo,'./t/CORE/TEST');
 $x = 0;
 $x++ while <foo>;
 print $x > 50 && $x < 1000 ? "ok 8\n" : "not ok 8\n";
diff --git a/t/CORE/comp/bproto.t b/t/CORE/comp/bproto.t
index 8d11b91..b1a7c2e 100644
--- a/t/CORE/comp/bproto.t
+++ b/t/CORE/comp/bproto.t
@@ -3,11 +3,6 @@
 # check if builtins behave as prototyped
 #
 
-BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-}
-
 print "1..16\n";
 
 my $i = 1;
diff --git a/t/CORE/comp/line_debug.t b/t/CORE/comp/line_debug.t
index 8361194..1b9dd8a 100644
--- a/t/CORE/comp/line_debug.t
+++ b/t/CORE/comp/line_debug.t
@@ -1,6 +1,6 @@
 #!./perl
 
-chdir 't' if -d 't';
+chdir 't/CORE';
 
 sub ok {
     my($test,$ok) = @_;
diff --git a/t/CORE/comp/parser.t b/t/CORE/comp/parser.t
index 584a473..e3513dd 100644
--- a/t/CORE/comp/parser.t
+++ b/t/CORE/comp/parser.t
@@ -3,10 +3,7 @@
 # Checks if the parser behaves correctly in edge cases
 # (including weird syntax errors)
 
-BEGIN {
-    @INC = qw(. ../lib);
-    chdir 't';
-}
+chdir 't/CORE';
 
 print "1..169\n";
 
diff --git a/t/CORE/comp/proto.t b/t/CORE/comp/proto.t
index 47ebf74..abe8ea7 100644
--- a/t/CORE/comp/proto.t
+++ b/t/CORE/comp/proto.t
@@ -10,8 +10,7 @@
 #
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
+    push @INC, "t/CORE/lib";
 }
 
 # We need this, as in places we're testing the interaction of prototypes with
diff --git a/t/CORE/comp/require.t b/t/CORE/comp/require.t
index 4eafce4..822e404 100644
--- a/t/CORE/comp/require.t
+++ b/t/CORE/comp/require.t
@@ -1,10 +1,7 @@
 #!./perl
 
-BEGIN {
-    chdir 't' if -d 't';
-    @INC = '.';
-    push @INC, '../lib';
-}
+chdir 't/CORE';
+unshift @INC, '.', 't/CORE/lib';
 
 sub do_require {
     %INC = ();
diff --git a/t/CORE/comp/use.t b/t/CORE/comp/use.t
index 12409cf..e900abd 100644
--- a/t/CORE/comp/use.t
+++ b/t/CORE/comp/use.t
@@ -1,8 +1,7 @@
 #!./perl
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = ('../lib', 'lib');
+    unshift @INC, 't/CORE/lib';
     $INC{"feature.pm"} = 1; # so we don't attempt to load feature.pm
 }
 
diff --git a/t/CORE/io/argv.t b/t/CORE/io/argv.t
index a1febaf..edde8e5 100644
--- a/t/CORE/io/argv.t
+++ b/t/CORE/io/argv.t
@@ -1,11 +1,10 @@
 #!./perl
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
+    push @INC, "t/CORE/lib";
 }
 
-BEGIN { require "./test.pl"; }
+BEGIN { require 'test.pl'; }
 
 plan(tests => 24);
 
diff --git a/t/CORE/io/binmode.t b/t/CORE/io/binmode.t
index 473261e..bc808b7 100644
--- a/t/CORE/io/binmode.t
+++ b/t/CORE/io/binmode.t
@@ -1,9 +1,8 @@
 #!./perl -w
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = qw(. ../lib);
-    require './test.pl';
+    push @INC, qw{t/CORE/lib};
+    require 'test.pl';
     eval 'use Errno';
     die $@ if $@ and !is_miniperl();
 }
diff --git a/t/CORE/io/bom.t b/t/CORE/io/bom.t
index dd1be65..d1df5c2 100644
--- a/t/CORE/io/bom.t
+++ b/t/CORE/io/bom.t
@@ -1,11 +1,10 @@
 #!./perl
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
+    push @INC, "t/CORE/lib";
 }
 
-BEGIN { require "./test.pl"; }
+BEGIN { require 'test.pl'; }
 
 plan(tests => 1);
 
diff --git a/t/CORE/io/closepid.t b/t/CORE/io/closepid.t
index a90db68..7caf8f0 100644
--- a/t/CORE/io/closepid.t
+++ b/t/CORE/io/closepid.t
@@ -1,9 +1,8 @@
 #!./perl
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
+    push @INC, "t/CORE/lib";
+    require 'test.pl';
 }
 
 if ($^O eq 'dos') {
diff --git a/t/CORE/io/crlf.t b/t/CORE/io/crlf.t
index f26ea0d..01457f5 100644
--- a/t/CORE/io/crlf.t
+++ b/t/CORE/io/crlf.t
@@ -1,8 +1,7 @@
 #!./perl -w
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = qw(. ../lib);
+    push @INC, qw{t/CORE/lib};
     require "test.pl";
     skip_all_without_perlio();
 }
diff --git a/t/CORE/io/crlf_through.t b/t/CORE/io/crlf_through.t
index c080995..caf6fad 100644
--- a/t/CORE/io/crlf_through.t
+++ b/t/CORE/io/crlf_through.t
@@ -1,10 +1,6 @@
 #!./perl
 
-BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-}
-
+chdir 't/CORE';
 no warnings 'once';
 $main::use_crlf = 1;
 do './io/through.t' or die "no kid script";
diff --git a/t/CORE/io/data.t b/t/CORE/io/data.t
index abcdebc..e9a515e 100644
--- a/t/CORE/io/data.t
+++ b/t/CORE/io/data.t
@@ -3,9 +3,8 @@
 # tests for DATA filehandle operations
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
+    push @INC, "t/CORE/lib";
+    require 'test.pl';
 }
 
 $|=1;
diff --git a/t/CORE/io/defout.t b/t/CORE/io/defout.t
index 2cb7b9f..a8ae788 100644
--- a/t/CORE/io/defout.t
+++ b/t/CORE/io/defout.t
@@ -7,9 +7,8 @@
 # it probably needs expanding at some point to cover other stuff.
 
 BEGIN {
-    chdir 't';
-    @INC = '../lib';
-    require './test.pl';
+    unshift @INC, 't/CORE', "t/CORE/lib";
+    require 'test.pl';
 }
 
 plan tests => 16;
diff --git a/t/CORE/io/dup.t b/t/CORE/io/dup.t
index 1328aeb..62e057c 100644
--- a/t/CORE/io/dup.t
+++ b/t/CORE/io/dup.t
@@ -1,9 +1,8 @@
 #!./perl
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = qw(. ../lib);
-    require "./test.pl";
+    push @INC, qw{t/CORE/lib};
+    require 'test.pl';
 }
 
 use Config;
diff --git a/t/CORE/io/eintr.t b/t/CORE/io/eintr.t
index 32f109d..7a36146 100644
--- a/t/CORE/io/eintr.t
+++ b/t/CORE/io/eintr.t
@@ -7,15 +7,14 @@
 # principally, don't segfault).
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
+    push @INC, "t/CORE/lib";
 }
 
 use warnings;
 use strict;
 use Config;
 
-require './test.pl';
+require 'test.pl';
 
 my $piped;
 eval {
diff --git a/t/CORE/io/eintr_print.t b/t/CORE/io/eintr_print.t
index 1a0d84d..254dd6e 100644
--- a/t/CORE/io/eintr_print.t
+++ b/t/CORE/io/eintr_print.t
@@ -5,9 +5,8 @@
 # also fails under 5.8.x
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
+    push @INC, "t/CORE/lib";
+    require 'test.pl';
     skip_all_if_miniperl("No XS under miniperl");
 }
 
diff --git a/t/CORE/io/errno.t b/t/CORE/io/errno.t
index e9a6c09..948ae6b 100644
--- a/t/CORE/io/errno.t
+++ b/t/CORE/io/errno.t
@@ -7,7 +7,7 @@
 use strict;
 use Config;
 
-require './test.pl';
+require 't/CORE/test.pl';
 
 plan( tests => 16 );
 
diff --git a/t/CORE/io/errnosig.t b/t/CORE/io/errnosig.t
index 8effcf1..e7570d8 100644
--- a/t/CORE/io/errnosig.t
+++ b/t/CORE/io/errnosig.t
@@ -1,8 +1,7 @@
 #!./perl
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = qw(. ../lib);
+    push @INC, qw{t/CORE/lib};
 }
 
 require Config; import Config;
diff --git a/t/CORE/io/fflush.t b/t/CORE/io/fflush.t
index 0bbfa54..09a57d6 100644
--- a/t/CORE/io/fflush.t
+++ b/t/CORE/io/fflush.t
@@ -1,9 +1,8 @@
 #!./perl
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
+    push @INC, "t/CORE/lib";
+    require 'test.pl';
 }
 
 # Script to test auto flush on fork/exec/system/qx.  The idea is to
diff --git a/t/CORE/io/fs.t b/t/CORE/io/fs.t
index 0d3f435..fe434f5 100644
--- a/t/CORE/io/fs.t
+++ b/t/CORE/io/fs.t
@@ -1,9 +1,8 @@
 #!./perl
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require "./test.pl";
+    push @INC, "t/CORE/lib";
+    require 'test.pl';
 }
 
 use Config;
diff --git a/t/CORE/io/inplace.t b/t/CORE/io/inplace.t
index 5cb56b9..181b98d 100644
--- a/t/CORE/io/inplace.t
+++ b/t/CORE/io/inplace.t
@@ -1,6 +1,6 @@
 #!./perl
 use strict;
-require './test.pl';
+require 't/CORE/test.pl';
 
 $^I = $^O eq 'VMS' ? '_bak' : '.bak';
 
diff --git a/t/CORE/io/iofile.t b/t/CORE/io/iofile.t
index f2ac66f..75e5577 100644
--- a/t/CORE/io/iofile.t
+++ b/t/CORE/io/iofile.t
@@ -1,9 +1,8 @@
 #!./perl
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
+    push @INC, "t/CORE/lib";
+    require 'test.pl';
     skip_all_if_miniperl("miniperl can't load IO::File");
 }
 
diff --git a/t/CORE/io/iprefix.t b/t/CORE/io/iprefix.t
index 9e09ce0..d694aaa 100644
--- a/t/CORE/io/iprefix.t
+++ b/t/CORE/io/iprefix.t
@@ -1,6 +1,7 @@
 #!./perl
 use strict;
-require './test.pl';
+
+require 't/CORE/test.pl';
 
 $^I = 'bak.*';
 
diff --git a/t/CORE/io/layers.t b/t/CORE/io/layers.t
index 86d171c..d6dbb65 100644
--- a/t/CORE/io/layers.t
+++ b/t/CORE/io/layers.t
@@ -3,20 +3,20 @@
 my $PERLIO;
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
-    skip_all_without_perlio();
-    # FIXME - more of these could be tested without Encode or full perl
-    skip_all_without_dynamic_extension('Encode');
-
-    # Makes testing easier.
-    $ENV{PERLIO} = 'stdio' if exists $ENV{PERLIO} && $ENV{PERLIO} eq '';
-    skip_all("PERLIO='$ENV{PERLIO}' unknown")
-	if exists $ENV{PERLIO} && $ENV{PERLIO} !~ /^(stdio|perlio|mmap)$/;
-    $PERLIO = exists $ENV{PERLIO} ? $ENV{PERLIO} : "(undef)";
+    unshift @INC, 't/CORE', "t/CORE/lib";
+    require 'test.pl';
 }
 
+skip_all_without_perlio();
+# FIXME - more of these could be tested without Encode or full perl
+skip_all_without_dynamic_extension('Encode');
+
+# Makes testing easier.
+$ENV{PERLIO} = 'stdio' if exists $ENV{PERLIO} && $ENV{PERLIO} eq '';
+skip_all("PERLIO='$ENV{PERLIO}' unknown")
+if exists $ENV{PERLIO} && $ENV{PERLIO} !~ /^(stdio|perlio|mmap)$/;
+$PERLIO = exists $ENV{PERLIO} ? $ENV{PERLIO} : "(undef)";
+
 use Config;
 
 my $DOSISH    = $^O =~ /^(?:MSWin32|os2|dos|NetWare)$/ ? 1 : 0;
@@ -248,6 +248,6 @@ EOT
     is $f, 1, '1 fetch on tied string';
 
     # No distinction between nums and strings
-    open "12", "<:crlf", "test.pl" or die "$0 cannot open test.pl: $!";
+    open "12", "<:crlf", "t/CORE/test.pl" or die "$0 cannot open test.pl: $!";
     ok PerlIO::get_layers(12), 'str/num arguments are treated identically';
 }
diff --git a/t/CORE/io/nargv.t b/t/CORE/io/nargv.t
index 41417cd..5c2113c 100644
--- a/t/CORE/io/nargv.t
+++ b/t/CORE/io/nargv.t
@@ -1,9 +1,8 @@
 #!./perl
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require "./test.pl";
+    push @INC, "t/CORE/lib";
+    require 'test.pl';
 }
 
 print "1..5\n";
diff --git a/t/CORE/io/open.t b/t/CORE/io/open.t
index 3e6efb4..fbe7b3f 100644
--- a/t/CORE/io/open.t
+++ b/t/CORE/io/open.t
@@ -1,9 +1,7 @@
 #!./perl
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
+    require 't/CORE/test.pl';
 }
 
 $|  = 1;
@@ -265,21 +263,21 @@ SKIP: {
 	return $line;
     }
 
-    open($fh0[0], "TEST");
+    open($fh0[0], "t/CORE/test.pl");
     gimme($fh0[0]);
     like($@, qr/<\$fh0\[...\]> line 1\./, "autoviv fh package aelem");
 
-    open($fh1{k}, "TEST");
+    open($fh1{k}, "t/CORE/test.pl");
     gimme($fh1{k});
     like($@, qr/<\$fh1\{...}> line 1\./, "autoviv fh package helem");
 
     my @fh2;
-    open($fh2[0], "TEST");
+    open($fh2[0], "t/CORE/test.pl");
     gimme($fh2[0]);
     like($@, qr/<\$fh2\[...\]> line 1\./, "autoviv fh lexical aelem");
 
     my %fh3;
-    open($fh3{k}, "TEST");
+    open($fh3{k}, "t/CORE/test.pl");
     gimme($fh3{k});
     like($@, qr/<\$fh3\{...}> line 1\./, "autoviv fh lexical helem");
 
@@ -387,7 +385,7 @@ SKIP: {
     ok( $INC{'IO/File.pm'}, "IO::File now loaded" );
 }
 
-sub _117941 { package _117941; open my $a, "TEST" }
+sub _117941 { package _117941; open my $a, "t/CORE/test.pl" }
 delete $::{"_117941::"};
 _117941();
 pass("no crash when open autovivifies glob in freed package");
diff --git a/t/CORE/io/openpid.t b/t/CORE/io/openpid.t
index 946fa5e..63bf1ae 100644
--- a/t/CORE/io/openpid.t
+++ b/t/CORE/io/openpid.t
@@ -8,9 +8,8 @@
 #####################################################################
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
+    push @INC, "t/CORE/lib";
+    require 'test.pl';
 }
 
 if ($^O eq 'dos') {
diff --git a/t/CORE/io/perlio.t b/t/CORE/io/perlio.t
index 3987a79..39830b1 100644
--- a/t/CORE/io/perlio.t
+++ b/t/CORE/io/perlio.t
@@ -1,8 +1,7 @@
 BEGIN {
-	chdir 't' if -d 't';
-	@INC = '../lib';
+	push @INC, "t/CORE/lib";
 	require Config; import Config;
-	require './test.pl';
+	require 'test.pl';
 	skip_all_without_perlio();
 }
 
diff --git a/t/CORE/io/perlio_fail.t b/t/CORE/io/perlio_fail.t
index 6bc9b17..688c10b 100644
--- a/t/CORE/io/perlio_fail.t
+++ b/t/CORE/io/perlio_fail.t
@@ -1,12 +1,10 @@
 #!./perl
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require "../t/test.pl";
+    require "t/CORE/test.pl";
     skip_all_without_perlio();
-    plan (15);
 }
+plan (15);
 
 use warnings 'layer';
 my $warn;
diff --git a/t/CORE/io/perlio_leaks.t b/t/CORE/io/perlio_leaks.t
index a7cdf28..a51a6ba 100644
--- a/t/CORE/io/perlio_leaks.t
+++ b/t/CORE/io/perlio_leaks.t
@@ -2,9 +2,8 @@
 # ioleaks.t
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
+    push @INC, "t/CORE/lib";
+    require 'test.pl';
 }
 
 use strict;
diff --git a/t/CORE/io/perlio_open.t b/t/CORE/io/perlio_open.t
index 702c76c..25c85bf 100644
--- a/t/CORE/io/perlio_open.t
+++ b/t/CORE/io/perlio_open.t
@@ -1,9 +1,8 @@
 #!./perl
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
+    push @INC, "t/CORE/lib";
+    require 'test.pl';
     skip_all_without_perlio();
     skip_all_without_dynamic_extension('Fcntl'); # how did you get this far?
 }
diff --git a/t/CORE/io/pipe.t b/t/CORE/io/pipe.t
index fdd8b99..d62db7a 100644
--- a/t/CORE/io/pipe.t
+++ b/t/CORE/io/pipe.t
@@ -1,17 +1,15 @@
 #!./perl
 
+use Config;
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require Config; import Config;
-    require './test.pl';
+    require 't/CORE/test.pl';
+}
 
-    if (!$Config{'d_fork'}) {
-        skip_all("fork required to pipe");
-    }
-    else {
-        plan(tests => 24);
-    }
+if (!$Config{'d_fork'}) {
+    skip_all("fork required to pipe");
+}
+else {
+    plan(tests => 24);
 }
 
 my $Perl = which_perl();
diff --git a/t/CORE/io/print.t b/t/CORE/io/print.t
index 4336090..7732a2f 100644
--- a/t/CORE/io/print.t
+++ b/t/CORE/io/print.t
@@ -1,9 +1,8 @@
 #!./perl
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
+    push @INC, "t/CORE/lib";
+    require 'test.pl';
     eval 'use Errno';
     die $@ if $@ and !is_miniperl();
 }
diff --git a/t/CORE/io/pvbm.t b/t/CORE/io/pvbm.t
index 19f9733..0fe5e74 100644
--- a/t/CORE/io/pvbm.t
+++ b/t/CORE/io/pvbm.t
@@ -4,9 +4,8 @@
 # filehandles. Most of these will segfault perl if they fail.
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = qw(. ../lib);
-    require "./test.pl";
+    push @INC, qw{t/CORE/lib};
+    require 'test.pl';
 }
 
 BEGIN { $| = 1 }
diff --git a/t/CORE/io/read.t b/t/CORE/io/read.t
index 8cc1640..feda5e5 100644
--- a/t/CORE/io/read.t
+++ b/t/CORE/io/read.t
@@ -1,9 +1,8 @@
 #!./perl
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
+    push @INC, "t/CORE/lib";
+    require 'test.pl';
     eval 'use Errno';
     die $@ if $@ and !is_miniperl();
 }
diff --git a/t/CORE/io/say.t b/t/CORE/io/say.t
index 70f83a7..35caf76 100644
--- a/t/CORE/io/say.t
+++ b/t/CORE/io/say.t
@@ -1,9 +1,8 @@
 #!./perl
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
+    push @INC, "t/CORE/lib";
+    require 'test.pl';
     eval 'use Errno';
     die $@ if $@ and !is_miniperl();
 }
diff --git a/t/CORE/io/sem.t b/t/CORE/io/sem.t
index 0e309eb..f9c4b32 100644
--- a/t/CORE/io/sem.t
+++ b/t/CORE/io/sem.t
@@ -1,10 +1,9 @@
 #!perl
 
 BEGIN {
-  chdir 't' if -d 't';
-  @INC = '../lib' if -d '../lib' && -d '../ext';
+  push @INC, 't/CORE/lib';
 
-  require "./test.pl";
+  require 'test.pl';
   require Config; import Config;
 
   if ($ENV{'PERL_CORE'} && $Config{'extensions'} !~ m[\bIPC/SysV\b]) {
diff --git a/t/CORE/io/shm.t b/t/CORE/io/shm.t
index 01e2172..d675e61 100644
--- a/t/CORE/io/shm.t
+++ b/t/CORE/io/shm.t
@@ -16,11 +16,9 @@
 
 BEGIN {
   if ($ENV{'PERL_CORE'}) {
-    chdir 't' if -d 't';
-    @INC = '../lib' if -d '../lib' && -d '../ext';
   }
-
-  require "./test.pl";
+  push @INC, 't/CORE/lib';
+  require 'test.pl';
   require Config; import Config;
 
   if ($ENV{'PERL_CORE'} && $Config{'extensions'} !~ m[\bIPC/SysV\b]) {
diff --git a/t/CORE/io/socket.t b/t/CORE/io/socket.t
index b723e3c..5e2c952 100644
--- a/t/CORE/io/socket.t
+++ b/t/CORE/io/socket.t
@@ -3,10 +3,9 @@
 # sanity tests for socket functions
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib' if -d '../lib' && -d '../ext';
+    push @INC, 't/CORE/lib';
 
-    require "./test.pl";
+    require 'test.pl';
     require Config; import Config;
 
     skip_all_if_miniperl();
diff --git a/t/CORE/io/tell.t b/t/CORE/io/tell.t
index f9226b0..e0ae069 100644
--- a/t/CORE/io/tell.t
+++ b/t/CORE/io/tell.t
@@ -1,9 +1,8 @@
 #!./perl
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
+    unshift @INC, 't/CORE', "t/CORE/lib";
+    require 'test.pl';
 }
 
 print "1..35\n";
@@ -14,7 +13,7 @@ $Is_Dosish = ($^O eq 'MSWin32' or $^O eq 'NetWare' or $^O eq 'dos' or
               $^O eq 'os2' or $^O eq 'cygwin' or
               $^O =~ /^uwin/);
 
-open($TST, 'harness') || (die "Can't open harness");
+open($TST, 't/CORE/TEST') || (die "Can't open t/CORE/TEST");
 binmode $TST if $Is_Dosish;
 if (eof(TST)) { print "not ok 1\n"; } else { print "ok 1\n"; }
 
@@ -54,7 +53,7 @@ unless (eof) { print "not ok 13\n"; } else { print "ok 13\n"; }
 if ($. == 0) { print "not ok 14\n"; } else { print "ok 14\n"; }
 
 $curline = $.;
-open(OTHER, 'harness') || (die "Can't open harness: $!");
+open(OTHER, 't/CORE/TEST') || (die "Can't open t/CORE/TEST: $!");
 binmode OTHER if (($^O eq 'MSWin32') || ($^O eq 'NetWare'));
 
 {
@@ -172,7 +171,7 @@ else {
 
 close $tst;
 
-open FH, "test.pl";
+open FH, "t/CORE/TEST";
 $fh = *FH; # coercible glob
 $not = "not " x! (tell $fh == 0);
 print "${not}ok 29 - tell on coercible glob\n";
diff --git a/t/CORE/io/through.t b/t/CORE/io/through.t
index 315de90..9df6dd7 100644
--- a/t/CORE/io/through.t
+++ b/t/CORE/io/through.t
@@ -1,9 +1,8 @@
 #!./perl
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
+    push @INC, "t/CORE/lib";
+    require 'test.pl';
     skip_all("VMS too picky about line endings for record-oriented pipes")
 	if $^O eq 'VMS';
 }
diff --git a/t/CORE/io/utf8.t b/t/CORE/io/utf8.t
index acce07e..8885df7 100644
--- a/t/CORE/io/utf8.t
+++ b/t/CORE/io/utf8.t
@@ -1,9 +1,8 @@
 #!./perl
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
+    push @INC, "t/CORE/lib";
+    require 'test.pl';
     skip_all_without_perlio();
 }
 
diff --git a/t/CORE/lib/1_compile.t b/t/CORE/lib/1_compile.t
index 2802ae2..dc2a8fd 100644
--- a/t/CORE/lib/1_compile.t
+++ b/t/CORE/lib/1_compile.t
@@ -5,9 +5,8 @@
 # of their own.
 
 BEGIN {
-    chdir 't';
     @INC = '../lib';
-    require './test.pl';
+    require 'test.pl';
 }
 
 use warnings;
diff --git a/t/CORE/lib/common.pl b/t/CORE/lib/common.pl
index 4ab00b1..2306567 100644
--- a/t/CORE/lib/common.pl
+++ b/t/CORE/lib/common.pl
@@ -6,7 +6,7 @@
 # to call cur_test() to find out how many this executed
 
 BEGIN {
-    require './test.pl';
+    require 'test.pl';
 }
 
 use Config;
diff --git a/t/CORE/lib/commonsense.t b/t/CORE/lib/commonsense.t
index 9f0f13f..652833b 100644
--- a/t/CORE/lib/commonsense.t
+++ b/t/CORE/lib/commonsense.t
@@ -1,9 +1,8 @@
 #!./perl
 
 BEGIN {
-    chdir 't' if -d 't';
     @INC = '../lib';
-    require './test.pl';
+    require 'test.pl';
 }
 
 plan( tests => 1);
diff --git a/t/CORE/lib/compmod.pl b/t/CORE/lib/compmod.pl
index fa032f1..9427353 100644
--- a/t/CORE/lib/compmod.pl
+++ b/t/CORE/lib/compmod.pl
@@ -1,7 +1,6 @@
 #!./perl
 
 BEGIN {
-    chdir 't';
     @INC = '../lib';
 }
 
diff --git a/t/CORE/lib/cygwin.t b/t/CORE/lib/cygwin.t
index 9033d3f..c450832 100644
--- a/t/CORE/lib/cygwin.t
+++ b/t/CORE/lib/cygwin.t
@@ -1,9 +1,8 @@
 #!perl
 
 BEGIN {
-    chdir 't' if -d 't';
     @INC = ('../lib');
-    require './test.pl';
+    require 'test.pl';
     skip_all('cygwin specific test') unless $^O eq 'cygwin';
 }
 
diff --git a/t/CORE/lib/deprecate.t b/t/CORE/lib/deprecate.t
index 9e59469..b4119db 100644
--- a/t/CORE/lib/deprecate.t
+++ b/t/CORE/lib/deprecate.t
@@ -2,7 +2,7 @@
 use strict;
 
 BEGIN {
-    require './test.pl';
+    require 'test.pl';
 }
 use File::Copy ();
 use File::Path ();
diff --git a/t/CORE/lib/mypragma.t b/t/CORE/lib/mypragma.t
index 0464897..5540eb8 100644
--- a/t/CORE/lib/mypragma.t
+++ b/t/CORE/lib/mypragma.t
@@ -5,7 +5,7 @@ use warnings;
 
 BEGIN {
     unshift @INC, 'lib';
-    require './test.pl';
+    require 'test.pl';
     plan(tests => 14);
 }
 
diff --git a/t/CORE/lib/no_load.t b/t/CORE/lib/no_load.t
index 39f0dc6..8b6887e 100644
--- a/t/CORE/lib/no_load.t
+++ b/t/CORE/lib/no_load.t
@@ -4,7 +4,6 @@
 #
 
 BEGIN {
-    chdir 't' if -d 't';
     @INC = qw(. ../lib);
 }
 
diff --git a/t/CORE/lib/proxy_constant_subs.t b/t/CORE/lib/proxy_constant_subs.t
index 9e73006..a554e80 100644
--- a/t/CORE/lib/proxy_constant_subs.t
+++ b/t/CORE/lib/proxy_constant_subs.t
@@ -1,6 +1,6 @@
 my @symbols;
 BEGIN {
-    require './test.pl';
+    require 'test.pl';
     skip_all_without_dynamic_extension($_) foreach qw(B Fcntl);
     # S_IFMT is a real subroutine, and acts as control
     # SEEK_SET is a proxy constant subroutine.
diff --git a/t/CORE/lib/universal.t b/t/CORE/lib/universal.t
index 19f8f28..17b3337 100644
--- a/t/CORE/lib/universal.t
+++ b/t/CORE/lib/universal.t
@@ -3,9 +3,8 @@
 # Test the Internal::* functions and other tibits in universal.c
 
 BEGIN {
-    chdir 't' if -d 't';
     @INC = '../lib';
-    require './test.pl';
+    require 'test.pl';
     plan( tests => 13 );
 }
 
diff --git a/t/CORE/lib/warnings/doio b/t/CORE/lib/warnings/doio
index 63250e1..e2dfe20 100644
--- a/t/CORE/lib/warnings/doio
+++ b/t/CORE/lib/warnings/doio
@@ -290,9 +290,9 @@ EOM
 }
 use warnings 'io' ;
 close STDOUT;
-open FH1, "../harness"; close FH1;
+open FH1, "t/CORE/TEST"; close FH1;
 no warnings 'io' ;
-open FH2, "../harness"; close FH2;
+open FH2, "t/CORE/TEST"; close FH2;
 EXPECT
 Filehandle STDOUT reopened as FH1 only for input at - line 14.
 ########
@@ -311,9 +311,9 @@ EOM
 }
 use warnings 'io' ;
 close STDOUT;
-open ᶠᚻ1, "../harness"; close ᶠᚻ1;
+open ᶠᚻ1, "t/CORE/TEST"; close ᶠᚻ1;
 no warnings 'io' ;
-open ᶠᚻ2, "../harness"; close ᶠᚻ2;
+open ᶠᚻ2, "t/CORE/TEST"; close ᶠᚻ2;
 EXPECT
 Filehandle STDOUT reopened as ᶠᚻ1 only for input at - line 16.
 ########
diff --git a/t/CORE/lib/warnings/pp_sys b/t/CORE/lib/warnings/pp_sys
index 6999327..44333f4 100644
--- a/t/CORE/lib/warnings/pp_sys
+++ b/t/CORE/lib/warnings/pp_sys
@@ -650,7 +650,7 @@ binmode() on unopened filehandle at - line 4.
 ########
 # pp_sys.c [pp_lstat]
 use warnings 'io';
-open FH, "../harness" or die "# $!";
+open FH, "t/CORE/TEST" or die "# $!";
 lstat FH;
 lstat *FH;
 lstat \*FH;
@@ -674,7 +674,7 @@ lstat() on filehandle at - line 9.
 use warnings 'io';
 use utf8;
 use open qw( :utf8 :std );
-open ᶠḨ, "../harness" or die "# $!";
+open ᶠḨ, "t/CORE/TEST" or die "# $!";
 lstat ᶠḨ;
 open my $ｆᚺ, $0 or die "# $!";
 lstat $ｆᚺ;
@@ -754,11 +754,11 @@ chdir() on closed filehandle $fh at - line 23.
 use warnings;
 opendir FOO, ".";
 opendir my $foo, ".";
-open FOO, "../harness";
-open $foo, "../harness";
+open FOO, "t/CORE/TEST";
+open $foo, "t/CORE/TEST";
 no warnings qw(io deprecated);
-open FOO, "../harness";
-open $foo, "../harness";
+open FOO, "t/CORE/TEST";
+open $foo, "t/CORE/TEST";
 EXPECT
 Opening dirhandle FOO also as a file at - line 5.
 Opening dirhandle $foo also as a file at - line 6.
@@ -770,19 +770,19 @@ use open qw( :utf8 :std );
 use warnings;
 opendir ＦＯＯ, ".";
 opendir $ｆｏｏ, ".";
-open ＦＯＯ, "../harness";
-open $ｆｏｏ, "../harness";
+open ＦＯＯ, "t/CORE/TEST";
+open $ｆｏｏ, "t/CORE/TEST";
 no warnings qw(io deprecated);
-open ＦＯＯ, "../harness";
-open $ｆｏｏ, "../harness";
+open ＦＯＯ, "t/CORE/TEST";
+open $ｆｏｏ, "t/CORE/TEST";
 EXPECT
 Opening dirhandle ＦＯＯ also as a file at - line 8.
 Opening dirhandle $ｆｏｏ also as a file at - line 9.
 ########
 # pp_sys.c [pp_open_dir]
 use warnings;
-open FOO, "../harness";
-open my $foo, "../harness";
+open FOO, "t/CORE/TEST";
+open my $foo, "t/CORE/TEST";
 opendir FOO, ".";
 opendir $foo, ".";
 no warnings qw(io deprecated);
@@ -798,8 +798,8 @@ use utf8;
 use open qw( :utf8 :std );
 use warnings;
 use warnings;
-open ＦＯＯ, "../harness";
-open $ｆｏｏ, "../harness";
+open ＦＯＯ, "t/CORE/TEST";
+open $ｆｏｏ, "t/CORE/TEST";
 opendir ＦＯＯ, ".";
 opendir $ｆｏｏ, ".";
 no warnings qw(io deprecated);
diff --git a/t/CORE/mro/basic.t b/t/CORE/mro/basic.t
index 5625b51..f72bcb7 100644
--- a/t/CORE/mro/basic.t
+++ b/t/CORE/mro/basic.t
@@ -4,9 +4,8 @@ use strict;
 use warnings;
 
 BEGIN {
-    chdir 't';
-    @INC = '../lib';
-    require q(./test.pl);
+    push @INC, "t/CORE/lib";
+    require 't/CORE/test.pl';
 }
 plan(tests => 61);
 
diff --git a/t/CORE/mro/basic_01_c3.t b/t/CORE/mro/basic_01_c3.t
index bf32dd3..e6ce8c1 100644
--- a/t/CORE/mro/basic_01_c3.t
+++ b/t/CORE/mro/basic_01_c3.t
@@ -3,7 +3,7 @@
 use strict;
 use warnings;
 
-require q(./test.pl); plan(tests => 4);
+require 't/CORE/test.pl'; plan(tests => 4);
 
 =pod
 
diff --git a/t/CORE/mro/basic_01_c3_utf8.t b/t/CORE/mro/basic_01_c3_utf8.t
index 952125b..b061057 100644
--- a/t/CORE/mro/basic_01_c3_utf8.t
+++ b/t/CORE/mro/basic_01_c3_utf8.t
@@ -5,7 +5,7 @@ use warnings;
 use utf8;
 use open qw( :utf8 :std );
 
-require q(./test.pl); plan(tests => 4);
+require 't/CORE/test.pl'; plan(tests => 4);
 
 =pod
 
diff --git a/t/CORE/mro/basic_01_dfs.t b/t/CORE/mro/basic_01_dfs.t
index c4ea2be..29ae8c7 100644
--- a/t/CORE/mro/basic_01_dfs.t
+++ b/t/CORE/mro/basic_01_dfs.t
@@ -3,7 +3,7 @@
 use strict;
 use warnings;
 
-require q(./test.pl); plan(tests => 4);
+require 't/CORE/test.pl'; plan(tests => 4);
 
 =pod
 
diff --git a/t/CORE/mro/basic_01_dfs_utf8.t b/t/CORE/mro/basic_01_dfs_utf8.t
index b122aba..c1d7ee1 100644
--- a/t/CORE/mro/basic_01_dfs_utf8.t
+++ b/t/CORE/mro/basic_01_dfs_utf8.t
@@ -5,7 +5,7 @@ use warnings;
 use utf8;
 use open qw( :utf8 :std );
 
-require q(./test.pl); plan(tests => 4);
+require 't/CORE/test.pl'; plan(tests => 4);
 
 =pod
 
diff --git a/t/CORE/mro/basic_02_c3.t b/t/CORE/mro/basic_02_c3.t
index b2c3ce4..aa66942 100644
--- a/t/CORE/mro/basic_02_c3.t
+++ b/t/CORE/mro/basic_02_c3.t
@@ -3,7 +3,7 @@
 use strict;
 use warnings;
 
-require q(./test.pl); plan(tests => 10);
+require 't/CORE/test.pl'; plan(tests => 10);
 
 =pod
 
diff --git a/t/CORE/mro/basic_02_c3_utf8.t b/t/CORE/mro/basic_02_c3_utf8.t
index 1f66e3b..92a49dd 100644
--- a/t/CORE/mro/basic_02_c3_utf8.t
+++ b/t/CORE/mro/basic_02_c3_utf8.t
@@ -5,7 +5,7 @@ use warnings;
 use utf8;
 use open qw( :utf8 :std );
 
-require q(./test.pl); plan(tests => 10);
+require 't/CORE/test.pl'; plan(tests => 10);
 
 =pod
 
diff --git a/t/CORE/mro/basic_02_dfs.t b/t/CORE/mro/basic_02_dfs.t
index a4bad46..739d735 100644
--- a/t/CORE/mro/basic_02_dfs.t
+++ b/t/CORE/mro/basic_02_dfs.t
@@ -3,7 +3,7 @@
 use strict;
 use warnings;
 
-require q(./test.pl); plan(tests => 10);
+require 't/CORE/test.pl'; plan(tests => 10);
 
 =pod
 
diff --git a/t/CORE/mro/basic_02_dfs_utf8.t b/t/CORE/mro/basic_02_dfs_utf8.t
index 77d7d71..5cc569e 100644
--- a/t/CORE/mro/basic_02_dfs_utf8.t
+++ b/t/CORE/mro/basic_02_dfs_utf8.t
@@ -5,7 +5,7 @@ use warnings;
 use utf8;
 use open qw( :utf8 :std );
 
-require q(./test.pl); plan(tests => 10);
+require 't/CORE/test.pl'; plan(tests => 10);
 
 =pod
 
diff --git a/t/CORE/mro/basic_03_c3.t b/t/CORE/mro/basic_03_c3.t
index f6606f6..fa27f51 100644
--- a/t/CORE/mro/basic_03_c3.t
+++ b/t/CORE/mro/basic_03_c3.t
@@ -3,7 +3,7 @@
 use strict;
 use warnings;
 
-require q(./test.pl); plan(tests => 4);
+require 't/CORE/test.pl'; plan(tests => 4);
 
 =pod
 
diff --git a/t/CORE/mro/basic_03_c3_utf8.t b/t/CORE/mro/basic_03_c3_utf8.t
index 7e417a2..72d1d86 100644
--- a/t/CORE/mro/basic_03_c3_utf8.t
+++ b/t/CORE/mro/basic_03_c3_utf8.t
@@ -5,7 +5,7 @@ use warnings;
 use utf8;
 use open qw( :utf8 :std );
 
-require q(./test.pl); plan(tests => 4);
+require 't/CORE/test.pl'; plan(tests => 4);
 
 =pod
 
diff --git a/t/CORE/mro/basic_03_dfs.t b/t/CORE/mro/basic_03_dfs.t
index 5794d8f..cfe8419 100644
--- a/t/CORE/mro/basic_03_dfs.t
+++ b/t/CORE/mro/basic_03_dfs.t
@@ -3,7 +3,7 @@
 use strict;
 use warnings;
 
-require q(./test.pl); plan(tests => 4);
+require 't/CORE/test.pl'; plan(tests => 4);
 
 =pod
 
diff --git a/t/CORE/mro/basic_03_dfs_utf8.t b/t/CORE/mro/basic_03_dfs_utf8.t
index 69e57be..20e2f73 100644
--- a/t/CORE/mro/basic_03_dfs_utf8.t
+++ b/t/CORE/mro/basic_03_dfs_utf8.t
@@ -5,7 +5,7 @@ use warnings;
 use utf8;
 use open qw( :utf8 :std );
 
-require q(./test.pl); plan(tests => 4);
+require 't/CORE/test.pl'; plan(tests => 4);
 
 =pod
 
diff --git a/t/CORE/mro/basic_04_c3.t b/t/CORE/mro/basic_04_c3.t
index dbfc883..ed9fc06 100644
--- a/t/CORE/mro/basic_04_c3.t
+++ b/t/CORE/mro/basic_04_c3.t
@@ -3,7 +3,7 @@
 use strict;
 use warnings;
 
-require q(./test.pl); plan(tests => 1);
+require 't/CORE/test.pl'; plan(tests => 1);
 
 =pod 
 
diff --git a/t/CORE/mro/basic_04_c3_utf8.t b/t/CORE/mro/basic_04_c3_utf8.t
index 3665ca6..f126440 100644
--- a/t/CORE/mro/basic_04_c3_utf8.t
+++ b/t/CORE/mro/basic_04_c3_utf8.t
@@ -5,7 +5,7 @@ use warnings;
 use utf8;
 use open qw( :utf8 :std );
 
-require q(./test.pl); plan(tests => 1);
+require 't/CORE/test.pl'; plan(tests => 1);
 
 =pod 
 
diff --git a/t/CORE/mro/basic_04_dfs.t b/t/CORE/mro/basic_04_dfs.t
index e49f4f4..05ef80a 100644
--- a/t/CORE/mro/basic_04_dfs.t
+++ b/t/CORE/mro/basic_04_dfs.t
@@ -3,7 +3,7 @@
 use strict;
 use warnings;
 
-require q(./test.pl); plan(tests => 1);
+require 't/CORE/test.pl'; plan(tests => 1);
 
 =pod 
 
diff --git a/t/CORE/mro/basic_04_dfs_utf8.t b/t/CORE/mro/basic_04_dfs_utf8.t
index 69dc8ef..a6e96d3 100644
--- a/t/CORE/mro/basic_04_dfs_utf8.t
+++ b/t/CORE/mro/basic_04_dfs_utf8.t
@@ -5,7 +5,7 @@ use warnings;
 use utf8;
 use open qw( :utf8 :std );
 
-require q(./test.pl); plan(tests => 1);
+require 't/CORE/test.pl'; plan(tests => 1);
 
 =pod 
 
diff --git a/t/CORE/mro/basic_05_c3.t b/t/CORE/mro/basic_05_c3.t
index 1558585..50af173 100644
--- a/t/CORE/mro/basic_05_c3.t
+++ b/t/CORE/mro/basic_05_c3.t
@@ -3,7 +3,7 @@
 use strict;
 use warnings;
 
-require q(./test.pl); plan(tests => 2);
+require 't/CORE/test.pl'; plan(tests => 2);
 
 =pod
 
diff --git a/t/CORE/mro/basic_05_c3_utf8.t b/t/CORE/mro/basic_05_c3_utf8.t
index a295c96..2a23736 100644
--- a/t/CORE/mro/basic_05_c3_utf8.t
+++ b/t/CORE/mro/basic_05_c3_utf8.t
@@ -5,7 +5,7 @@ use warnings;
 use utf8;
 use open qw( :utf8 :std );
 
-require q(./test.pl); plan(tests => 2);
+require 't/CORE/test.pl'; plan(tests => 2);
 
 =pod
 
diff --git a/t/CORE/mro/basic_05_dfs.t b/t/CORE/mro/basic_05_dfs.t
index 0fee5c5..6d07c63 100644
--- a/t/CORE/mro/basic_05_dfs.t
+++ b/t/CORE/mro/basic_05_dfs.t
@@ -3,7 +3,7 @@
 use strict;
 use warnings;
 
-require q(./test.pl); plan(tests => 2);
+require 't/CORE/test.pl'; plan(tests => 2);
 
 =pod
 
diff --git a/t/CORE/mro/basic_05_dfs_utf8.t b/t/CORE/mro/basic_05_dfs_utf8.t
index 452d1db..4bb1301 100644
--- a/t/CORE/mro/basic_05_dfs_utf8.t
+++ b/t/CORE/mro/basic_05_dfs_utf8.t
@@ -6,7 +6,7 @@ use warnings;
 use utf8;
 use open qw( :utf8 :std );
 
-require q(./test.pl); plan(tests => 2);
+require 't/CORE/test.pl'; plan(tests => 2);
 
 =pod
 
diff --git a/t/CORE/mro/basic_utf8.t b/t/CORE/mro/basic_utf8.t
index d0dff50..e66de0a 100644
--- a/t/CORE/mro/basic_utf8.t
+++ b/t/CORE/mro/basic_utf8.t
@@ -5,7 +5,7 @@ use open qw( :utf8 :std );
 use strict;
 use warnings;
 
-BEGIN { require q(./test.pl); } plan(tests => 53);
+BEGIN { require 't/CORE/test.pl'; } plan(tests => 53);
 
 require mro;
 
diff --git a/t/CORE/mro/c3_with_overload.t b/t/CORE/mro/c3_with_overload.t
index a75c31a..6009e1d 100644
--- a/t/CORE/mro/c3_with_overload.t
+++ b/t/CORE/mro/c3_with_overload.t
@@ -3,7 +3,7 @@
 use strict;
 use warnings;
 
-require q(./test.pl); plan(tests => 7);
+require 't/CORE/test.pl'; plan(tests => 7);
 
 {
     package BaseTest;
diff --git a/t/CORE/mro/c3_with_overload_utf8.t b/t/CORE/mro/c3_with_overload_utf8.t
index a75c31a..6009e1d 100644
--- a/t/CORE/mro/c3_with_overload_utf8.t
+++ b/t/CORE/mro/c3_with_overload_utf8.t
@@ -3,7 +3,7 @@
 use strict;
 use warnings;
 
-require q(./test.pl); plan(tests => 7);
+require 't/CORE/test.pl'; plan(tests => 7);
 
 {
     package BaseTest;
diff --git a/t/CORE/mro/complex_c3.t b/t/CORE/mro/complex_c3.t
index 9d8e18e..bc3e8c2 100644
--- a/t/CORE/mro/complex_c3.t
+++ b/t/CORE/mro/complex_c3.t
@@ -3,7 +3,7 @@
 use strict;
 use warnings;
 
-require q(./test.pl); plan(tests => 12);
+require 't/CORE/test.pl'; plan(tests => 12);
 
 =pod
 
diff --git a/t/CORE/mro/complex_c3_utf8.t b/t/CORE/mro/complex_c3_utf8.t
index b7ffca5..5e29ef8 100644
--- a/t/CORE/mro/complex_c3_utf8.t
+++ b/t/CORE/mro/complex_c3_utf8.t
@@ -5,7 +5,7 @@ use warnings;
 use utf8;
 use open qw( :utf8 :std );
 
-require q(./test.pl); plan(tests => 12);
+require 't/CORE/test.pl'; plan(tests => 12);
 
 =pod
 
diff --git a/t/CORE/mro/complex_dfs.t b/t/CORE/mro/complex_dfs.t
index 905ac2d..ed76f9b 100644
--- a/t/CORE/mro/complex_dfs.t
+++ b/t/CORE/mro/complex_dfs.t
@@ -3,7 +3,7 @@
 use strict;
 use warnings;
 
-require q(./test.pl); plan(tests => 11);
+require 't/CORE/test.pl'; plan(tests => 11);
 
 =pod
 
diff --git a/t/CORE/mro/complex_dfs_utf8.t b/t/CORE/mro/complex_dfs_utf8.t
index 723af14..aeeb118 100644
--- a/t/CORE/mro/complex_dfs_utf8.t
+++ b/t/CORE/mro/complex_dfs_utf8.t
@@ -5,7 +5,7 @@ use warnings;
 use utf8;
 use open qw( :utf8 :std );
 
-require q(./test.pl); plan(tests => 11);
+require 't/CORE/test.pl'; plan(tests => 11);
 
 =pod
 
diff --git a/t/CORE/mro/dbic_c3.t b/t/CORE/mro/dbic_c3.t
index 51d8784..2d31f83 100644
--- a/t/CORE/mro/dbic_c3.t
+++ b/t/CORE/mro/dbic_c3.t
@@ -3,7 +3,7 @@
 use strict;
 use warnings;
 
-require q(./test.pl); plan(tests => 1);
+require 't/CORE/test.pl'; plan(tests => 1);
 
 =pod
 
diff --git a/t/CORE/mro/dbic_c3_utf8.t b/t/CORE/mro/dbic_c3_utf8.t
index 0dbf32e..57c7b7f 100644
--- a/t/CORE/mro/dbic_c3_utf8.t
+++ b/t/CORE/mro/dbic_c3_utf8.t
@@ -5,7 +5,7 @@ use warnings;
 use utf8;
 use open qw( :utf8 :std );
 
-require q(./test.pl); plan(tests => 1);
+require 't/CORE/test.pl'; plan(tests => 1);
 
 =pod
 
diff --git a/t/CORE/mro/dbic_dfs.t b/t/CORE/mro/dbic_dfs.t
index 6d5ff7d..9401a32 100644
--- a/t/CORE/mro/dbic_dfs.t
+++ b/t/CORE/mro/dbic_dfs.t
@@ -3,7 +3,7 @@
 use strict;
 use warnings;
 
-require q(./test.pl); plan(tests => 1);
+require 't/CORE/test.pl'; plan(tests => 1);
 
 =pod
 
diff --git a/t/CORE/mro/dbic_dfs_utf8.t b/t/CORE/mro/dbic_dfs_utf8.t
index cd11815..0820178 100644
--- a/t/CORE/mro/dbic_dfs_utf8.t
+++ b/t/CORE/mro/dbic_dfs_utf8.t
@@ -5,7 +5,7 @@ use warnings;
 use utf8;
 use open qw( :utf8 :std );
 
-require q(./test.pl); plan(tests => 1);
+require 't/CORE/test.pl'; plan(tests => 1);
 
 =pod
 
diff --git a/t/CORE/mro/inconsistent_c3.t b/t/CORE/mro/inconsistent_c3.t
index ae01e9f..3f4e15c 100644
--- a/t/CORE/mro/inconsistent_c3.t
+++ b/t/CORE/mro/inconsistent_c3.t
@@ -2,14 +2,8 @@
 
 use strict;
 use warnings;
-BEGIN {
-    unless (-d 'blib') {
-        chdir 't' if -d 't';
-        @INC = '../lib';
-    }
-}
 
-require q(./test.pl); plan(tests => 1);
+require 't/CORE/test.pl'; plan(tests => 1);
 
 require mro;
 
diff --git a/t/CORE/mro/inconsistent_c3_utf8.t b/t/CORE/mro/inconsistent_c3_utf8.t
index a8ba958..d6a0be8 100644
--- a/t/CORE/mro/inconsistent_c3_utf8.t
+++ b/t/CORE/mro/inconsistent_c3_utf8.t
@@ -2,17 +2,11 @@
 
 use strict;
 use warnings;
-BEGIN {
-    unless (-d 'blib') {
-        chdir 't' if -d 't';
-        @INC = '../lib';
-    }
-}
 
 use utf8;
 use open qw( :utf8 :std );
 
-require q(./test.pl); plan(tests => 1);
+require 't/CORE/test.pl'; plan(tests => 1);
 
 require mro;
 
diff --git a/t/CORE/mro/isa_aliases.t b/t/CORE/mro/isa_aliases.t
index 2073e5e..c5daeb3 100644
--- a/t/CORE/mro/isa_aliases.t
+++ b/t/CORE/mro/isa_aliases.t
@@ -1,6 +1,6 @@
 #!./perl
 
-BEGIN { chdir 't'; @INC = '../lib'; require './test.pl' }
+BEGIN { require 't/CORE/test.pl' }
 
 plan 13;
 
diff --git a/t/CORE/mro/isa_aliases_utf8.t b/t/CORE/mro/isa_aliases_utf8.t
index ef715a2..7287c25 100644
--- a/t/CORE/mro/isa_aliases_utf8.t
+++ b/t/CORE/mro/isa_aliases_utf8.t
@@ -1,7 +1,6 @@
 #!./perl
 
-BEGIN { chdir 't'; @INC = '../lib'; require './test.pl' }
-
+BEGIN { require 't/CORE/test.pl'; }
 use utf8;
 use open qw( :utf8 :std );
 
diff --git a/t/CORE/mro/isa_c3.t b/t/CORE/mro/isa_c3.t
index 20ae5f0..ad19465 100644
--- a/t/CORE/mro/isa_c3.t
+++ b/t/CORE/mro/isa_c3.t
@@ -1,10 +1,6 @@
 #!perl -w
 
-BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require "./test.pl";
-}
+BEGIN { require 't/CORE/test.pl' }
 
 use strict;
 
diff --git a/t/CORE/mro/isa_c3_utf8.t b/t/CORE/mro/isa_c3_utf8.t
index 3e2e7a9..70ae64a 100644
--- a/t/CORE/mro/isa_c3_utf8.t
+++ b/t/CORE/mro/isa_c3_utf8.t
@@ -1,10 +1,6 @@
 #!perl -w
 
-BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require "./test.pl";
-}
+BEGIN { require 't/CORE/test.pl' }
 
 use strict;
 use utf8;
diff --git a/t/CORE/mro/isa_dfs.t b/t/CORE/mro/isa_dfs.t
index 77c122e..f81bc32 100644
--- a/t/CORE/mro/isa_dfs.t
+++ b/t/CORE/mro/isa_dfs.t
@@ -1,10 +1,6 @@
 #!perl -w
 
-BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require "./test.pl";
-}
+BEGIN { require 't/CORE/test.pl' }
 
 use strict;
 
diff --git a/t/CORE/mro/isa_dfs_utf8.t b/t/CORE/mro/isa_dfs_utf8.t
index 1c95eaa..bb3b4dd 100644
--- a/t/CORE/mro/isa_dfs_utf8.t
+++ b/t/CORE/mro/isa_dfs_utf8.t
@@ -1,10 +1,6 @@
 #!perl -w
 
-BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require "./test.pl";
-}
+BEGIN { require 't/CORE/test.pl' }
 
 use strict;
 use utf8;
diff --git a/t/CORE/mro/isarev.t b/t/CORE/mro/isarev.t
index 3bd543d..c3e662c 100644
--- a/t/CORE/mro/isarev.t
+++ b/t/CORE/mro/isarev.t
@@ -1,12 +1,6 @@
 #!./perl
 
-BEGIN {
-    unless (-d 'blib') {
-        chdir 't' if -d 't';
-        @INC = '../lib';
-    }
-    require q(./test.pl);
-}
+BEGIN { require 't/CORE/test.pl' }
 
 use strict;
 use warnings;
diff --git a/t/CORE/mro/isarev_utf8.t b/t/CORE/mro/isarev_utf8.t
index dff3058..a1e4d71 100644
--- a/t/CORE/mro/isarev_utf8.t
+++ b/t/CORE/mro/isarev_utf8.t
@@ -1,12 +1,6 @@
 #!./perl
 
-BEGIN {
-    unless (-d 'blib') {
-        chdir 't' if -d 't';
-        @INC = '../lib';
-    }
-    require q(./test.pl);
-}
+BEGIN { require 't/CORE/test.pl' }
 
 use strict;
 use warnings;
diff --git a/t/CORE/mro/method_caching.t b/t/CORE/mro/method_caching.t
index 3f21b1b..6c7f074 100644
--- a/t/CORE/mro/method_caching.t
+++ b/t/CORE/mro/method_caching.t
@@ -6,13 +6,7 @@ use warnings;
 no warnings 'redefine'; # we do a lot of this
 no warnings 'prototype'; # we do a lot of this
 
-BEGIN {
-    unless (-d 'blib') {
-        chdir 't' if -d 't';
-        @INC = '../lib';
-    }
-    require './test.pl';
-}
+BEGIN { require 't/CORE/test.pl' }
 
 {
     package MCTest::Base;
diff --git a/t/CORE/mro/method_caching_utf8.t b/t/CORE/mro/method_caching_utf8.t
index b0a451d..b628db6 100644
--- a/t/CORE/mro/method_caching_utf8.t
+++ b/t/CORE/mro/method_caching_utf8.t
@@ -7,14 +7,7 @@ use warnings;
 no warnings 'redefine'; # we do a lot of this
 no warnings 'prototype'; # we do a lot of this
 
-BEGIN {
-    unless (-d 'blib') {
-        chdir 't' if -d 't';
-        @INC = '../lib';
-    }
-}
-
-require './test.pl';
+require 't/CORE/test.pl';
 
 {
     package MC텟ᵀ::Bࡎᶓ;
diff --git a/t/CORE/mro/next_NEXT.t b/t/CORE/mro/next_NEXT.t
index e8d85fc..8df4678 100644
--- a/t/CORE/mro/next_NEXT.t
+++ b/t/CORE/mro/next_NEXT.t
@@ -4,7 +4,7 @@ use strict;
 use warnings;
 use NEXT;
 
-require './test.pl';
+BEGIN { require 't/CORE/test.pl' }
 plan(tests => 4);
 
 {
diff --git a/t/CORE/mro/next_NEXT_utf8.t b/t/CORE/mro/next_NEXT_utf8.t
index 5961a95..131d471 100644
--- a/t/CORE/mro/next_NEXT_utf8.t
+++ b/t/CORE/mro/next_NEXT_utf8.t
@@ -6,7 +6,7 @@ use NEXT;
 use utf8;
 use open qw( :utf8 :std );
 
-require './test.pl';
+BEGIN { require 't/CORE/test.pl'}
 plan(tests => 4);
 
 {
diff --git a/t/CORE/mro/next_edgecases.t b/t/CORE/mro/next_edgecases.t
index e177d70..0ce24a5 100644
--- a/t/CORE/mro/next_edgecases.t
+++ b/t/CORE/mro/next_edgecases.t
@@ -3,7 +3,7 @@
 use strict;
 use warnings;
 
-BEGIN { chdir 't'; require q(./test.pl); @INC = qw "../lib lib" }
+require 't/CORE/test.pl';
 
 plan(tests => 12);
 
diff --git a/t/CORE/mro/next_edgecases_utf8.t b/t/CORE/mro/next_edgecases_utf8.t
index ba6ff8b..127235e 100644
--- a/t/CORE/mro/next_edgecases_utf8.t
+++ b/t/CORE/mro/next_edgecases_utf8.t
@@ -3,7 +3,7 @@
 use strict;
 use warnings;
 
-BEGIN { chdir 't'; require q(./test.pl); @INC = qw "../lib lib" }
+require 't/CORE/test.pl';
 
 use utf8;
 use open qw( :utf8 :std );
diff --git a/t/CORE/mro/next_goto.t b/t/CORE/mro/next_goto.t
index b7a33ec..a671677 100644
--- a/t/CORE/mro/next_goto.t
+++ b/t/CORE/mro/next_goto.t
@@ -3,7 +3,7 @@
 use strict;
 use warnings;
 
-require q(./test.pl); plan(tests => 4);
+require 't/CORE/test.pl'; plan(tests => 4);
 
 use mro;
 
diff --git a/t/CORE/mro/next_goto_utf8.t b/t/CORE/mro/next_goto_utf8.t
index 3fc66f2..e21d0b1 100644
--- a/t/CORE/mro/next_goto_utf8.t
+++ b/t/CORE/mro/next_goto_utf8.t
@@ -4,7 +4,7 @@ use strict;
 use warnings;
 use utf8;
 use open qw( :utf8 :std );
-require q(./test.pl); plan(tests => 4);
+require 't/CORE/test.pl'; plan(tests => 4);
 
 use mro;
 
diff --git a/t/CORE/mro/next_inanon.t b/t/CORE/mro/next_inanon.t
index b6f0451..c967e78 100644
--- a/t/CORE/mro/next_inanon.t
+++ b/t/CORE/mro/next_inanon.t
@@ -3,7 +3,7 @@
 use strict;
 use warnings;
 
-require q(./test.pl); plan(tests => 2);
+require 't/CORE/test.pl'; plan(tests => 2);
 
 =pod
 
diff --git a/t/CORE/mro/next_inanon_utf8.t b/t/CORE/mro/next_inanon_utf8.t
index d1dd6e4..fc7fde7 100644
--- a/t/CORE/mro/next_inanon_utf8.t
+++ b/t/CORE/mro/next_inanon_utf8.t
@@ -4,7 +4,7 @@ use strict;
 use warnings;
 use utf8;
 use open qw( :utf8 :std );
-require q(./test.pl); plan(tests => 2);
+require 't/CORE/test.pl'; plan(tests => 2);
 
 =pod
 
diff --git a/t/CORE/mro/next_ineval.t b/t/CORE/mro/next_ineval.t
index f8c13a6..523a890 100644
--- a/t/CORE/mro/next_ineval.t
+++ b/t/CORE/mro/next_ineval.t
@@ -3,7 +3,7 @@
 use strict;
 use warnings;
 
-require q(./test.pl); plan(tests => 1);
+require 't/CORE/test.pl'; plan(tests => 1);
 
 =pod
 
diff --git a/t/CORE/mro/next_ineval_utf8.t b/t/CORE/mro/next_ineval_utf8.t
index cd44f6c..9072583 100644
--- a/t/CORE/mro/next_ineval_utf8.t
+++ b/t/CORE/mro/next_ineval_utf8.t
@@ -5,7 +5,7 @@ use warnings;
 use utf8;
 use open qw( :utf8 :std );
 
-require q(./test.pl); plan(tests => 1);
+require 't/CORE/test.pl'; plan(tests => 1);
 
 =pod
 
diff --git a/t/CORE/mro/next_method.t b/t/CORE/mro/next_method.t
index b737917..a4c575a 100644
--- a/t/CORE/mro/next_method.t
+++ b/t/CORE/mro/next_method.t
@@ -3,7 +3,7 @@
 use strict;
 use warnings;
 
-require q(./test.pl); plan(tests => 5);
+require 't/CORE/test.pl'; plan(tests => 5);
 
 =pod
 
diff --git a/t/CORE/mro/next_method_utf8.t b/t/CORE/mro/next_method_utf8.t
index aa0b630..ddc9541 100644
--- a/t/CORE/mro/next_method_utf8.t
+++ b/t/CORE/mro/next_method_utf8.t
@@ -5,7 +5,7 @@ use warnings;
 use utf8;
 use open qw( :utf8 :std );
 
-require q(./test.pl); plan(tests => 5);
+require 't/CORE/test.pl'; plan(tests => 5);
 
 =pod
 
diff --git a/t/CORE/mro/next_skip.t b/t/CORE/mro/next_skip.t
index 1614855..a0ac4eb 100644
--- a/t/CORE/mro/next_skip.t
+++ b/t/CORE/mro/next_skip.t
@@ -3,7 +3,7 @@
 use strict;
 use warnings;
 
-require q(./test.pl); plan(tests => 10);
+require 't/CORE/test.pl'; plan(tests => 10);
 
 =pod
 
diff --git a/t/CORE/mro/next_skip_utf8.t b/t/CORE/mro/next_skip_utf8.t
index 64e7745..41b008c 100644
--- a/t/CORE/mro/next_skip_utf8.t
+++ b/t/CORE/mro/next_skip_utf8.t
@@ -3,7 +3,7 @@
 use strict;
 use warnings;
 
-require q(./test.pl); plan(tests => 10);
+require 't/CORE/test.pl'; plan(tests => 10);
 
 use utf8;
 use open qw( :utf8 :std );
diff --git a/t/CORE/mro/overload_c3.t b/t/CORE/mro/overload_c3.t
index db2b1ec..408e0c9 100644
--- a/t/CORE/mro/overload_c3.t
+++ b/t/CORE/mro/overload_c3.t
@@ -2,14 +2,8 @@
 
 use strict;
 use warnings;
-BEGIN {
-    unless (-d 'blib') {
-        chdir 't' if -d 't';
-        @INC = '../lib';
-    }
-}
-
-require q(./test.pl); plan(tests => 7);
+require 't/CORE/test.pl';
+plan(tests => 7);
 
 {
     package BaseTest;
diff --git a/t/CORE/mro/overload_c3_utf8.t b/t/CORE/mro/overload_c3_utf8.t
index bcb9f70..6b2d985 100644
--- a/t/CORE/mro/overload_c3_utf8.t
+++ b/t/CORE/mro/overload_c3_utf8.t
@@ -2,17 +2,11 @@
 
 use strict;
 use warnings;
-BEGIN {
-    unless (-d 'blib') {
-        chdir 't' if -d 't';
-        @INC = '../lib';
-    }
-}
 
 use utf8;
 use open qw( :utf8 :std );
 
-require q(./test.pl); plan(tests => 7);
+require 't/CORE/test.pl'; plan(tests => 7);
 
 {
     package 밧e텟ʇ;
diff --git a/t/CORE/mro/overload_dfs.t b/t/CORE/mro/overload_dfs.t
index 5943c85..1351094 100644
--- a/t/CORE/mro/overload_dfs.t
+++ b/t/CORE/mro/overload_dfs.t
@@ -2,14 +2,8 @@
 
 use strict;
 use warnings;
-BEGIN {
-    unless (-d 'blib') {
-        chdir 't' if -d 't';
-        @INC = '../lib';
-    }
-}
 
-require q(./test.pl); plan(tests => 7);
+require 't/CORE/test.pl'; plan(tests => 7);
 
 {
     package BaseTest;
diff --git a/t/CORE/mro/package_aliases.t b/t/CORE/mro/package_aliases.t
index 6998a89..d5b7990 100644
--- a/t/CORE/mro/package_aliases.t
+++ b/t/CORE/mro/package_aliases.t
@@ -1,12 +1,6 @@
 #!./perl
 
-BEGIN {
-    unless (-d 'blib') {
-        chdir 't' if -d 't';
-        @INC = '../lib';
-    }
-    require q(./test.pl);
-}
+BEGIN { require 't/CORE/test.pl' }
 
 use strict;
 use warnings;
diff --git a/t/CORE/mro/package_aliases_utf8.t b/t/CORE/mro/package_aliases_utf8.t
index 09db6b7..ed28c5a 100644
--- a/t/CORE/mro/package_aliases_utf8.t
+++ b/t/CORE/mro/package_aliases_utf8.t
@@ -1,13 +1,6 @@
 #!./perl
 
-BEGIN {
-    $ENV{PERL_UNICODE} = 0;
-    unless (-d 'blib') {
-        chdir 't' if -d 't';
-        @INC = '../lib';
-    }
-    require q(./test.pl);
-}
+BEGIN { require 't/CORE/test.pl' }
 
 use strict;
 use warnings;
@@ -57,8 +50,7 @@ for(
 my $prog =    q~
      BEGIN {
          unless (-d 'blib') {
-             chdir 't' if -d 't';
-             @INC = '../lib';
+             push @INC, "t/CORE/lib";
          }
      }
      use utf8;
@@ -119,8 +111,7 @@ for(
  my $prog = q~
      BEGIN {
          unless (-d 'blib') {
-             chdir 't' if -d 't';
-             @INC = '../lib';
+             push @INC, "t/CORE/lib";
          }
      }
      use utf8;
@@ -184,8 +175,7 @@ for(
   my $prog =     q~
      BEGIN {
          unless (-d 'blib') {
-             chdir 't' if -d 't';
-             @INC = '../lib';
+             push @INC, "t/CORE/lib";
          }
      }
       use utf8;
@@ -220,8 +210,7 @@ for(
   $prog =     q~
       BEGIN {
          unless (-d 'blib') {
-             chdir 't' if -d 't';
-             @INC = '../lib';
+             push @INC, "t/CORE/lib";
          }
       }
       use utf8;
@@ -304,8 +293,7 @@ no warnings; # temporary; there seems to be a scoping bug, as this does not
 my $prog =    q~#!perl -w
      BEGIN {
          unless (-d 'blib') {
-             chdir 't' if -d 't';
-             @INC = '../lib';
+             push @INC, "t/CORE/lib";
          }
      }
      use utf8;
diff --git a/t/CORE/mro/pkg_gen.t b/t/CORE/mro/pkg_gen.t
index e236ea9..f431bc1 100644
--- a/t/CORE/mro/pkg_gen.t
+++ b/t/CORE/mro/pkg_gen.t
@@ -3,8 +3,7 @@
 use strict;
 use warnings;
 
-chdir 't' if -d 't';
-require q(./test.pl); plan(tests => 7);
+require 't/CORE/test.pl'; plan(tests => 7);
 
 require mro;
 
diff --git a/t/CORE/mro/pkg_gen_utf8.t b/t/CORE/mro/pkg_gen_utf8.t
index c572c5b..aefb1b9 100644
--- a/t/CORE/mro/pkg_gen_utf8.t
+++ b/t/CORE/mro/pkg_gen_utf8.t
@@ -5,8 +5,7 @@ use warnings;
 use utf8;
 use open qw( :utf8 :std );
 
-chdir 't' if -d 't';
-require q(./test.pl); plan(tests => 7);
+require 't/CORE/test.pl'; plan(tests => 7);
 
 require mro;
 
diff --git a/t/CORE/mro/recursion_c3.t b/t/CORE/mro/recursion_c3.t
index cd1db33..96bb836 100644
--- a/t/CORE/mro/recursion_c3.t
+++ b/t/CORE/mro/recursion_c3.t
@@ -2,14 +2,8 @@
 
 use strict;
 use warnings;
-BEGIN {
-    unless (-d 'blib') {
-        chdir 't' if -d 't';
-        @INC = '../lib';
-    }
-}
 
-require './test.pl';
+BEGIN { require 't/CORE/test.pl' }
 
 plan(skip_all => "Your system has no SIGALRM") if !exists $SIG{ALRM};
 plan(tests => 8);
diff --git a/t/CORE/mro/recursion_c3_utf8.t b/t/CORE/mro/recursion_c3_utf8.t
index 3abc136..c5c57be 100644
--- a/t/CORE/mro/recursion_c3_utf8.t
+++ b/t/CORE/mro/recursion_c3_utf8.t
@@ -2,16 +2,11 @@
 
 use strict;
 use warnings;
-BEGIN {
-    unless (-d 'blib') {
-        chdir 't' if -d 't';
-        @INC = '../lib';
-    }
-}
+
 use utf8;
 use open qw( :utf8 :std );
 
-require './test.pl';
+BEGIN { require 't/CORE/test.pl' }
 
 plan(skip_all => "Your system has no SIGALRM") if !exists $SIG{ALRM};
 plan(tests => 8);
diff --git a/t/CORE/mro/recursion_dfs.t b/t/CORE/mro/recursion_dfs.t
index ddb4d31..a950944 100644
--- a/t/CORE/mro/recursion_dfs.t
+++ b/t/CORE/mro/recursion_dfs.t
@@ -2,14 +2,8 @@
 
 use strict;
 use warnings;
-BEGIN {
-    unless (-d 'blib') {
-        chdir 't' if -d 't';
-        @INC = '../lib';
-    }
-}
 
-require './test.pl';
+require 't/CORE/test.pl';
 
 plan(skip_all => "Your system has no SIGALRM") if !exists $SIG{ALRM};
 plan(tests => 8);
diff --git a/t/CORE/mro/recursion_dfs_utf8.t b/t/CORE/mro/recursion_dfs_utf8.t
index 6b428e1..e0206a4 100644
--- a/t/CORE/mro/recursion_dfs_utf8.t
+++ b/t/CORE/mro/recursion_dfs_utf8.t
@@ -2,17 +2,11 @@
 
 use strict;
 use warnings;
-BEGIN {
-    unless (-d 'blib') {
-        chdir 't' if -d 't';
-        @INC = '../lib';
-    }
-}
+require 't/CORE/test.pl';
+
 use utf8;
 use open qw( :utf8 :std );
 
-require './test.pl';
-
 plan(skip_all => "Your system has no SIGALRM") if !exists $SIG{ALRM};
 plan(tests => 8);
 
diff --git a/t/CORE/mro/vulcan_c3.t b/t/CORE/mro/vulcan_c3.t
index 1858095..b082d3b 100644
--- a/t/CORE/mro/vulcan_c3.t
+++ b/t/CORE/mro/vulcan_c3.t
@@ -3,7 +3,7 @@
 use strict;
 use warnings;
 
-require q(./test.pl); plan(tests => 1);
+require 't/CORE/test.pl'; plan(tests => 1);
 
 =pod
 
diff --git a/t/CORE/mro/vulcan_c3_utf8.t b/t/CORE/mro/vulcan_c3_utf8.t
index 68eb12a..66edfb1 100644
--- a/t/CORE/mro/vulcan_c3_utf8.t
+++ b/t/CORE/mro/vulcan_c3_utf8.t
@@ -4,7 +4,7 @@ use strict;
 use warnings;
 use utf8;
 use open qw( :utf8 :std );
-require q(./test.pl); plan(tests => 1);
+require 't/CORE/test.pl'; plan(tests => 1);
 
 =pod
 
diff --git a/t/CORE/mro/vulcan_dfs.t b/t/CORE/mro/vulcan_dfs.t
index eb3e128..a2f5378 100644
--- a/t/CORE/mro/vulcan_dfs.t
+++ b/t/CORE/mro/vulcan_dfs.t
@@ -3,7 +3,7 @@
 use strict;
 use warnings;
 
-require q(./test.pl); plan(tests => 1);
+require 't/CORE/test.pl'; plan(tests => 1);
 
 =pod
 
diff --git a/t/CORE/mro/vulcan_dfs_utf8.t b/t/CORE/mro/vulcan_dfs_utf8.t
index 92ab9dd..6b4a6c6 100644
--- a/t/CORE/mro/vulcan_dfs_utf8.t
+++ b/t/CORE/mro/vulcan_dfs_utf8.t
@@ -4,7 +4,7 @@ use strict;
 use warnings;
 use utf8;
 use open qw( :utf8 :std );
-require q(./test.pl); plan(tests => 1);
+require 't/CORE/test.pl'; plan(tests => 1);
 
 
 =pod
diff --git a/t/CORE/op/64bitint.t b/t/CORE/op/64bitint.t
index 168d597..0d0b79c 100644
--- a/t/CORE/op/64bitint.t
+++ b/t/CORE/op/64bitint.t
@@ -1,9 +1,8 @@
 #!./perl
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
+    push @INC, "t/CORE/lib";
+    require 't/CORE/test.pl';
     eval { my $q = pack "q", 0 };
     skip_all('no 64-bit types') if $@;
 }
diff --git a/t/CORE/op/alarm.t b/t/CORE/op/alarm.t
index 82691c5..7c1e3e1 100644
--- a/t/CORE/op/alarm.t
+++ b/t/CORE/op/alarm.t
@@ -1,9 +1,8 @@
 #!./perl 
 
 BEGIN {
-    chdir 't';
-    @INC = '../lib';
-    require './test.pl';
+    push @INC, "t/CORE/lib";
+    require 't/CORE/test.pl';
 }
 
 BEGIN {
diff --git a/t/CORE/op/anonsub.t b/t/CORE/op/anonsub.t
index 6b8745f..c0cf823 100644
--- a/t/CORE/op/anonsub.t
+++ b/t/CORE/op/anonsub.t
@@ -1,8 +1,7 @@
 #!./perl -w
 
-chdir 't' if -d 't';
-@INC = '../lib';
-require './test.pl';
+push @INC, "t/CORE/lib";
+require 't/CORE/test.pl';
 use strict;
 
 $|=1;
diff --git a/t/CORE/op/append.t b/t/CORE/op/append.t
index 44847b5..d0bcac2 100644
--- a/t/CORE/op/append.t
+++ b/t/CORE/op/append.t
@@ -1,9 +1,8 @@
 #!./perl
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
+    push @INC, "t/CORE/lib";
+    require 't/CORE/test.pl';
 }
 
 ##Literal test count since evals below can fail
diff --git a/t/CORE/op/args.t b/t/CORE/op/args.t
index bfa015e..4640b41 100644
--- a/t/CORE/op/args.t
+++ b/t/CORE/op/args.t
@@ -1,11 +1,10 @@
 #!./perl
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
+    push @INC, "t/CORE/lib";
 }
 
-require './test.pl';
+require 't/CORE/test.pl';
 plan( tests => 23 );
 
 # test various operations on @_
diff --git a/t/CORE/op/array.t b/t/CORE/op/array.t
index 7486808..d47a32b 100644
--- a/t/CORE/op/array.t
+++ b/t/CORE/op/array.t
@@ -1,9 +1,8 @@
 #!./perl
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = ('.', '../lib');
-    require 'test.pl';
+    unshift @INC, 't/CORE/lib';
+    require 't/CORE/test.pl';
 }
 
 plan (171);
diff --git a/t/CORE/op/array_base.t b/t/CORE/op/array_base.t
index a276240..4f24ba8 100644
--- a/t/CORE/op/array_base.t
+++ b/t/CORE/op/array_base.t
@@ -1,22 +1,27 @@
 #!perl -w
 use strict;
 
-BEGIN {
- require './test.pl';
+my %tests_in_begin_block;
 
- plan (tests => my $tests = 11);
-
- # Run these at BEGIN time, before arybase loads
+BEGIN { 
  use v5.15;
- is(eval('$[ = 1; 123'), undef);
- like($@, qr/\AAssigning non-zero to \$\[ is no longer possible/);
+ # Run these at BEGIN time, before arybase loads
+ $tests_in_begin_block{'eval'} = eval('$[ = 1; 123');
+ $tests_in_begin_block{'error'} = $@;
+}
+
+require 't/CORE/test.pl';
+
+plan (tests => my $tests = 11);
+
+is($tests_in_begin_block{'eval'}, undef);
+like($tests_in_begin_block{'error'}, qr/\AAssigning non-zero to \$\[ is no longer possible/);
 
  if (is_miniperl()) {
    # skip the rest
    SKIP: { skip ("no arybase.xs on miniperl", $tests-2) }
    exit;
  }
-}
 
 no warnings 'deprecated';
 
@@ -24,17 +29,17 @@ is(eval('$['), 0);
 is(eval('$[ = 0; 123'), 123);
 is(eval('$[ = 1; 123'), 123);
 $[ = 1;
-ok $INC{'arybase.pm'};
+ok($INC{'arybase.pm'}, "arybase is in INC");
 
 use v5.15;
 is(eval('$[ = 1; 123'), undef);
 like($@, qr/\AAssigning non-zero to \$\[ is no longer possible/);
-is $[, 0, '$[ is 0 under 5.16';
+is($[, 0, '$[ is 0 under 5.16');
 $_ = "hello";
 /l/g;
 my $pos = \pos;
-is $$pos, 3;
+is($$pos, 3);
 $$pos = 1;
-is $$pos, 1;
+is($$pos, 1);
 
 1;
diff --git a/t/CORE/op/assignwarn.t b/t/CORE/op/assignwarn.t
index ac1ad77..f803ef8 100644
--- a/t/CORE/op/assignwarn.t
+++ b/t/CORE/op/assignwarn.t
@@ -8,9 +8,8 @@
 # Now almost completely rewritten.
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
+    push @INC, "t/CORE/lib";
+    require 't/CORE/test.pl';
 }
 
 use strict;
diff --git a/t/CORE/op/attrhand.t b/t/CORE/op/attrhand.t
index 996d572..7ebc17c 100644
--- a/t/CORE/op/attrhand.t
+++ b/t/CORE/op/attrhand.t
@@ -1,9 +1,8 @@
 #!/usr/bin/perl -w
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
+    push @INC, "t/CORE/lib";
+    require 't/CORE/test.pl';
     skip_all_if_miniperl("miniperl can't load attributes");
 }
 
diff --git a/t/CORE/op/attrproto.t b/t/CORE/op/attrproto.t
index 13ce107..36a72d1 100644
--- a/t/CORE/op/attrproto.t
+++ b/t/CORE/op/attrproto.t
@@ -4,9 +4,8 @@
 
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
+    push @INC, "t/CORE/lib";
+    require 't/CORE/test.pl';
     skip_all_if_miniperl("miniperl can't load attributes");
 }
 use warnings;
diff --git a/t/CORE/op/attrs.t b/t/CORE/op/attrs.t
index ec6768e..74fac2f 100644
--- a/t/CORE/op/attrs.t
+++ b/t/CORE/op/attrs.t
@@ -3,9 +3,8 @@
 # Regression tests for attributes.pm and the C< : attrs> syntax.
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
+    push @INC, "t/CORE/lib";
+    require 't/CORE/test.pl';
     skip_all_if_miniperl("miniperl can't load attributes");
 }
 
diff --git a/t/CORE/op/auto.t b/t/CORE/op/auto.t
index 00f7caa..d06626e 100644
--- a/t/CORE/op/auto.t
+++ b/t/CORE/op/auto.t
@@ -1,8 +1,7 @@
 #!./perl
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = qw(. ../lib);
+    push @INC, qw{t/CORE/lib};
     require "test.pl";
 }
 
diff --git a/t/CORE/op/avhv.t b/t/CORE/op/avhv.t
index d301fad..b935eee 100644
--- a/t/CORE/op/avhv.t
+++ b/t/CORE/op/avhv.t
@@ -4,8 +4,7 @@
 # they were properly removed in 5.9.
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
+    push @INC, "t/CORE/lib";
 }
 
 require Tie::Array;
@@ -20,7 +19,7 @@ sub STORESIZE { $#{$_[0]} = $_[1]+1 }
 
 package main;
 
-require './test.pl';
+require 't/CORE/test.pl';
 plan(tests => 40);
 
 # Helper function to check the typical error message.
diff --git a/t/CORE/op/bless.t b/t/CORE/op/bless.t
index 69217fd..8f9e68d 100644
--- a/t/CORE/op/bless.t
+++ b/t/CORE/op/bless.t
@@ -1,9 +1,8 @@
 #!./perl
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
+    push @INC, "t/CORE/lib";
+    require 't/CORE/test.pl';
 }
 
 plan (114);
diff --git a/t/CORE/op/blocks.t b/t/CORE/op/blocks.t
index fb15eee..57371c8 100644
--- a/t/CORE/op/blocks.t
+++ b/t/CORE/op/blocks.t
@@ -1,9 +1,8 @@
 #!./perl
 
 BEGIN {
-    chdir 't';
-    @INC = '../lib';
-    require './test.pl';
+    push @INC, "t/CORE/lib";
+    require 't/CORE/test.pl';
 }
 
 plan tests => 7;
diff --git a/t/CORE/op/bop.t b/t/CORE/op/bop.t
index fa08e98..dd6144d 100644
--- a/t/CORE/op/bop.t
+++ b/t/CORE/op/bop.t
@@ -5,9 +5,8 @@
 #
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require "./test.pl";
+    push @INC, "t/CORE/lib";
+    require 't/CORE/test.pl';
     require Config;
 }
 
diff --git a/t/CORE/op/caller.t b/t/CORE/op/caller.t
index 54a6bac..e07b40b 100644
--- a/t/CORE/op/caller.t
+++ b/t/CORE/op/caller.t
@@ -2,15 +2,22 @@
 # Tests for caller()
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
-    plan( tests => 95 );
+    require 't/CORE/test.pl';
 }
 
-my @c;
+chdir 't/CORE';
+my @tests;
+plan( tests => 95 );
+
+print "# Tests with caller(0)\n";
+
+foreach my $t ( @tests ) {
+    my $s = \&{'main::'.$t->{type}};
+    $s->( @{$t->{args}}, $t->{txt} );    
+}
+print "# end of BEGIN tests\n";
 
-BEGIN { print "# Tests with caller(0)\n"; }
+my @c;
 
 @c = caller(0);
 ok( (!@c), "caller(0) in main program" );
@@ -36,8 +43,8 @@ ok( $c[4], "hasargs true with deleted sub" );
 
 BEGIN {
  require strict;
- is +(caller 0)[1], __FILE__,
-  "[perl #68712] filenames after require in a BEGIN block"
+ push @tests, { type => 'is', args => [ +(caller 0)[1], __FILE__ ], 
+    txt => "[perl #68712] filenames after require in a BEGIN block" };
 }
 
 print "# Tests with caller(1)\n";
@@ -97,6 +104,10 @@ sub testwarn {
     check_bits( (caller(0))[9], $w, "warnings match caller ($id)");
 }
 
+sub get_caller_0_9 {
+    return (caller(0))[9];
+}
+
 {
     no warnings;
     # Build the warnings mask dynamically
@@ -111,20 +122,30 @@ sub testwarn {
 
     # The repetition number must be set to the value of $BYTES in
     # lib/warnings.pm
-    BEGIN { check_bits( ${^WARNING_BITS}, "\0" x 15, 'all bits off via "no warnings"' ) }
+    BEGIN { 
+        push @tests, { type => 'check_bits', args => [ ${^WARNING_BITS}, "\0" x 15 ], 
+            txt => 'all bits off via "no warnings"' };
+    }
     testwarn("\0" x 15, 'no bits');
 
     use warnings;
-    BEGIN { check_bits( ${^WARNING_BITS}, $default,
-			'default bits on via "use warnings"' ); }
-    BEGIN { testwarn($default, 'all'); }
+    BEGIN { 
+        push @tests, { type => 'check_bits', args => [ ${^WARNING_BITS}, $default ], 
+            txt => 'default bits on via "use warnings"' };
+    }
+    BEGIN { 
+        push @tests, { type => 'check_bits', args => [ get_caller_0_9(), $default ] };        
+        #testwarn($default, 'all'); 
+    }
     # run-time :
     # the warning mask has been extended by warnings::register
     testwarn($registered, 'ahead of w::r');
 
     use warnings::register;
-    BEGIN { check_bits( ${^WARNING_BITS}, $registered,
-			'warning bits on via "use warnings::register"' ) }
+    BEGIN { 
+        push @tests, { type => 'check_bits', args => [ ${^WARNING_BITS}, $registered ], 
+            txt => 'warning bits on via "use warnings::register"' };
+    }
     testwarn($registered, 'following w::r');
 }
 
diff --git a/t/CORE/op/chars.t b/t/CORE/op/chars.t
index 3fa9b8f..776b1d6 100644
--- a/t/CORE/op/chars.t
+++ b/t/CORE/op/chars.t
@@ -1,9 +1,8 @@
 #!./perl
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
+    push @INC, "t/CORE/lib";
+    require 't/CORE/test.pl';
 }
 
 plan tests => 34;
diff --git a/t/CORE/op/chdir.t b/t/CORE/op/chdir.t
index 2c6535b..b3c987c 100644
--- a/t/CORE/op/chdir.t
+++ b/t/CORE/op/chdir.t
@@ -1,19 +1,25 @@
 #!./perl -w
 
+my $zero;
+
 BEGIN {
     # We're not going to chdir() into 't' because we don't know if
     # chdir() works!  Instead, we'll hedge our bets and put both
     # possibilities into @INC.
-    @INC = qw(t . lib ../lib);
-    require "test.pl";
+    require "t/CORE/test.pl";
     # Really want to know if chdir is working, as the build process will all go
     # wrong if it is not.
     if (is_miniperl() && !eval {require File::Spec::Functions; 1}) {
 	push @INC, qw(dist/Cwd/lib dist/Cwd ../dist/Cwd/lib ../dist/Cwd);
     }
-    plan(tests => 48);
+    # freeze $0 for compilation
+    $zero = $0;
 }
 
+chdir 't/CORE';
+
+plan(tests => 48);
+
 use Config;
 
 my $IsVMS   = $^O eq 'VMS';
@@ -52,7 +58,7 @@ my $Cwd = abs_path;
 # Let's get to a known position
 SKIP: {
     my ($vol,$dir) = splitpath(abs_path,1);
-    my $test_dir = 't';
+    my $test_dir = 'CORE';
     my $compare_dir = (splitdir($dir))[-1];
 
     # VMS is case insensitive but will preserve case in EFS mode.
@@ -158,8 +164,8 @@ sub check_env {
         ok( chdir(undef),           "chdir(undef) w/ only \$ENV{$key} set" );
         is( abs_path, $ENV{$key},   '  abs_path() agrees' );
         is( $warning,  <<WARNING,   '  got uninit & deprecation warning' );
-Use of uninitialized value in chdir at $0 line 64.
-Use of chdir('') or chdir(undef) as chdir() is deprecated at $0 line 64.
+Use of uninitialized value in chdir at $zero line 64.
+Use of chdir('') or chdir(undef) as chdir() is deprecated at $zero line 64.
 WARNING
 
         chdir($Cwd);
@@ -170,7 +176,7 @@ WARNING
         ok( chdir(''),              "chdir('') w/ only \$ENV{$key} set" );
         is( abs_path, $ENV{$key},   '  abs_path() agrees' );
         is( $warning,  <<WARNING,   '  got deprecation warning' );
-Use of chdir('') or chdir(undef) as chdir() is deprecated at $0 line 76.
+Use of chdir('') or chdir(undef) as chdir() is deprecated at $zero line 76.
 WARNING
 
         chdir($Cwd);
diff --git a/t/CORE/op/chop.t b/t/CORE/op/chop.t
index 3f2247f..aab0f69 100644
--- a/t/CORE/op/chop.t
+++ b/t/CORE/op/chop.t
@@ -1,9 +1,8 @@
 #!./perl
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
+    push @INC, "t/CORE/lib";
+    require 't/CORE/test.pl';
 }
 
 plan tests => 143;
diff --git a/t/CORE/op/chr.t b/t/CORE/op/chr.t
index 57b4ade..4e38d7d 100644
--- a/t/CORE/op/chr.t
+++ b/t/CORE/op/chr.t
@@ -1,8 +1,7 @@
 #!./perl
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = qw(. ../lib); # ../lib needed for test.deparse
+    push @INC, qw{t/CORE/lib}; # ../lib needed for test.deparse
     require "test.pl";
 }
 
diff --git a/t/CORE/op/closure.t b/t/CORE/op/closure.t
index 82e65c5..8b8e753 100644
--- a/t/CORE/op/closure.t
+++ b/t/CORE/op/closure.t
@@ -7,9 +7,7 @@
 #   Run with -debug for debugging output.
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
+    require 't/CORE/test.pl';
 }
 
 use Config;
@@ -241,7 +239,7 @@ END_MARK_TWO
     print "not ok: got unexpected warning \$msg\\n";
 } }
 
-require './test.pl';
+require 't/CORE/test.pl';
 curr_test($test);
 
 # some of the variables which the closure will access
@@ -731,7 +729,7 @@ BEGIN {
 
 # [perl #113812] Closure prototypes with no CvOUTSIDE (crash caused by the
 #                fix for #89544)
-do "./op/closure_test.pl" or die $@||$!;
+do "./t/CORE/op/closure_test.pl" or die $@||$!;
 is $closure_test::s2->()(), '10 cubes',
   'cloning closure proto with no CvOUTSIDE';
 
diff --git a/t/CORE/op/concat2.t b/t/CORE/op/concat2.t
index 9dfcc5b..23ad167 100644
--- a/t/CORE/op/concat2.t
+++ b/t/CORE/op/concat2.t
@@ -6,9 +6,8 @@
 # its ok() function.
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
+    push @INC, "t/CORE/lib";
+    require 't/CORE/test.pl';
 }
 
 plan 3;
diff --git a/t/CORE/op/cond.t b/t/CORE/op/cond.t
index acf0704..c4264f5 100644
--- a/t/CORE/op/cond.t
+++ b/t/CORE/op/cond.t
@@ -1,9 +1,8 @@
 #!./perl
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
+    push @INC, "t/CORE/lib";
+    require 't/CORE/test.pl';
 }
 
 is( 1 ? 1 : 0, 1, 'compile time, true' );
diff --git a/t/CORE/op/context.t b/t/CORE/op/context.t
index 8753d1e..6600f65 100644
--- a/t/CORE/op/context.t
+++ b/t/CORE/op/context.t
@@ -1,8 +1,7 @@
 #!./perl
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = qw(. ../lib);
+    push @INC, qw{t/CORE/lib};
 }
 
 require "test.pl";
diff --git a/t/CORE/op/coreamp.t b/t/CORE/op/coreamp.t
index addc4bb..7a28d82 100644
--- a/t/CORE/op/coreamp.t
+++ b/t/CORE/op/coreamp.t
@@ -8,12 +8,12 @@
 # Other tests for CORE subs are in coresubs.t
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = qw(. ../lib);
-    require "test.pl";
+    require "t/CORE/test.pl";
     $^P |= 0x100;
 }
 
+chdir 't/CORE';
+
 no warnings 'experimental::smartmatch';
 
 sub lis($$;$) {
@@ -988,7 +988,7 @@ like $@, qr'^Undefined format "STDOUT" called',
   require File::Spec::Functions;
   my $keywords_file =
    File::Spec::Functions::catfile(
-      File::Spec::Functions::updir,'regen','keywords.pl'
+      'lib','keywords.pl'
    );
   open my $kh, $keywords_file
     or die "$0 cannot open $keywords_file: $!";
diff --git a/t/CORE/op/coresubs.t b/t/CORE/op/coresubs.t
index 2e93c71..c134880 100644
--- a/t/CORE/op/coresubs.t
+++ b/t/CORE/op/coresubs.t
@@ -5,9 +5,8 @@
 # file, too.
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = qw(. ../lib);
-    require "test.pl";
+    push @INC, qw{t/CORE/lib};
+    require "t/CORE/test.pl";
     skip_all_without_dynamic_extension('B');
     $^P |= 0x100;
 }
@@ -42,7 +41,8 @@ my %desc = (
 );
 
 use File::Spec::Functions;
-my $keywords_file = catfile(updir,'regen','keywords.pl');
+chdir 't/CORE/op';
+my $keywords_file = catfile(updir,'lib','keywords.pl');
 open my $kh, $keywords_file
    or die "$0 cannot open $keywords_file: $!";
 while(<$kh>) {
diff --git a/t/CORE/op/cproto.t b/t/CORE/op/cproto.t
index 85b86db..77708b8 100644
--- a/t/CORE/op/cproto.t
+++ b/t/CORE/op/cproto.t
@@ -2,11 +2,10 @@
 # Tests to ensure that we don't unexpectedly change prototypes of builtins
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
+    push @INC, "t/CORE/lib";
 }
 
-BEGIN { require './test.pl'; }
+BEGIN { require 't/CORE/test.pl'; }
 plan tests => 254;
 
 while (<DATA>) {
diff --git a/t/CORE/op/crypt.t b/t/CORE/op/crypt.t
index 27c878f..9d80175 100644
--- a/t/CORE/op/crypt.t
+++ b/t/CORE/op/crypt.t
@@ -1,14 +1,14 @@
 #!./perl -w
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = qw(. ../lib);
+    push @INC, qw{t/CORE/lib};
 }
 
 BEGIN {
     use Config;
 
     require "test.pl";
+}
 
     if( !$Config{d_crypt} ) {
         skip_all("crypt unimplemented");
@@ -16,7 +16,7 @@ BEGIN {
     else {
         plan(tests => 4);
     }
-}
+
 
 # Can't assume too much about the string returned by crypt(),
 # and about how many bytes of the encrypted (really, hashed)
diff --git a/t/CORE/op/current_sub.t b/t/CORE/op/current_sub.t
index 8c82d11..920e51f 100644
--- a/t/CORE/op/current_sub.t
+++ b/t/CORE/op/current_sub.t
@@ -1,11 +1,9 @@
 #!./perl
 
 BEGIN {
-    chdir 't';
-    @INC = qw(../lib);
-    require './test.pl';
-    plan (tests => 17);
+    require 't/CORE/test.pl';
 }
+plan (tests => 15);
 
 is __SUB__, "__SUB__", '__SUB__ is a bareword outside of use feature';
 
@@ -37,15 +35,6 @@ is $subsubs[0]()(0), 1, '__SUB__ inside closure (1)';
 is $subsubs[1]()(0), 2, '__SUB__ inside closure (2)';
 is $subsubs[2]()(0), 3, '__SUB__ inside closure (3)';
 
-BEGIN {
-    return "begin 1" if @_;
-    is CORE::__SUB__->(0), "begin 1", 'in BEGIN block'
-}
-BEGIN {
-    return "begin 2" if @_;
-    is &CORE::__SUB__->(0), "begin 2", 'in BEGIN block via & (unoptimised)'
-}
-
 sub bar;
 sub bar {
     () = sort {
diff --git a/t/CORE/op/dbm.t b/t/CORE/op/dbm.t
index 9e81f59..4ad165a 100644
--- a/t/CORE/op/dbm.t
+++ b/t/CORE/op/dbm.t
@@ -1,9 +1,8 @@
 #!./perl
 
 BEGIN {
-    chdir 't';
-    @INC = '../lib';
-    require './test.pl';
+    push @INC, "t/CORE/lib";
+    require 't/CORE/test.pl';
 
     eval { require AnyDBM_File }; # not all places have dbm* functions
     skip_all("No dbm functions") if $@;
diff --git a/t/CORE/op/defined.t b/t/CORE/op/defined.t
index 7129e47..dee1063 100644
--- a/t/CORE/op/defined.t
+++ b/t/CORE/op/defined.t
@@ -1,7 +1,6 @@
 #!perl
 BEGIN {
-    chdir 't';
-    require './test.pl';
+    require 't/CORE/test.pl';
 }
 
 plan 5;
diff --git a/t/CORE/op/defins.t b/t/CORE/op/defins.t
index 54d3150..4802a2e 100644
--- a/t/CORE/op/defins.t
+++ b/t/CORE/op/defins.t
@@ -5,11 +5,10 @@
 #
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = qw(. ../lib);
+    push @INC, qw{t/CORE/lib};
     $SIG{__WARN__} = sub { $warns++; warn $_[0] };
 }
-require 'test.pl';
+require 't/CORE/test.pl';
 plan( tests => 27 );
 
 my $unix_mode = 1;
diff --git a/t/CORE/op/delete.t b/t/CORE/op/delete.t
index 493717e..dec9003 100644
--- a/t/CORE/op/delete.t
+++ b/t/CORE/op/delete.t
@@ -1,8 +1,7 @@
 #!./perl
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = qw(. ../lib);
+    push @INC, qw{t/CORE/lib};
 }
 
 require "test.pl";
diff --git a/t/CORE/op/die.t b/t/CORE/op/die.t
index 8faef6a..6acdbbb 100644
--- a/t/CORE/op/die.t
+++ b/t/CORE/op/die.t
@@ -1,9 +1,8 @@
 #!./perl
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
+    push @INC, "t/CORE/lib";
+    require 't/CORE/test.pl';
 }
 
 plan tests => 19;
diff --git a/t/CORE/op/die_except.t b/t/CORE/op/die_except.t
index a65bf4a..22d046f 100644
--- a/t/CORE/op/die_except.t
+++ b/t/CORE/op/die_except.t
@@ -1,6 +1,6 @@
 #!./perl -w
 
-require './test.pl';
+require 't/CORE/test.pl';
 use strict;
 
 {
diff --git a/t/CORE/op/die_exit.t b/t/CORE/op/die_exit.t
index bd9ac28..89fa855 100644
--- a/t/CORE/op/die_exit.t
+++ b/t/CORE/op/die_exit.t
@@ -6,9 +6,8 @@
 #
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
+    push @INC, "t/CORE/lib";
+    require 't/CORE/test.pl';
 }
 
 use strict;
diff --git a/t/CORE/op/die_keeperr.t b/t/CORE/op/die_keeperr.t
index 083bd5d..bb7bd08 100644
--- a/t/CORE/op/die_keeperr.t
+++ b/t/CORE/op/die_keeperr.t
@@ -1,10 +1,9 @@
 #!perl -w
 
 BEGIN {
-    chdir 't' if -d 't';
-    require 'test.pl';
-    plan(24);
+    require 't/CORE/test.pl';
 }
+plan(24);
 
 sub End::DESTROY { $_[0]->() }
 
diff --git a/t/CORE/op/die_unwind.t b/t/CORE/op/die_unwind.t
index 29fa6e6..27d088f 100644
--- a/t/CORE/op/die_unwind.t
+++ b/t/CORE/op/die_unwind.t
@@ -1,6 +1,6 @@
 #!./perl -w
 
-require './test.pl';
+require 't/CORE/test.pl';
 use strict;
 
 #
diff --git a/t/CORE/op/do.t b/t/CORE/op/do.t
index 012166e..d44693c 100644
--- a/t/CORE/op/do.t
+++ b/t/CORE/op/do.t
@@ -1,9 +1,8 @@
 #!./perl -w
 
 BEGIN {
-    chdir 't';
-    @INC = '../lib';
-    require './test.pl';
+    push @INC, "t/CORE/lib";
+    require 't/CORE/test.pl';
 }
 use strict;
 no warnings 'void';
diff --git a/t/CORE/op/dor.t b/t/CORE/op/dor.t
index a0b98f1..d06e981 100644
--- a/t/CORE/op/dor.t
+++ b/t/CORE/op/dor.t
@@ -3,12 +3,11 @@
 # Test // and friends.
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
+    push @INC, "t/CORE/lib";
 }
 
 package main;
-require './test.pl';
+require 't/CORE/test.pl';
 
 plan( tests => 34 );
 
diff --git a/t/CORE/op/each.t b/t/CORE/op/each.t
index be8aa48..e79e5be 100644
--- a/t/CORE/op/each.t
+++ b/t/CORE/op/each.t
@@ -1,9 +1,8 @@
 #!./perl
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
+    push @INC, "t/CORE/lib";
+    require 't/CORE/test.pl';
 }
 
 plan tests => 59;
diff --git a/t/CORE/op/each_array.t b/t/CORE/op/each_array.t
index 1055d6c..5db1446 100644
--- a/t/CORE/op/each_array.t
+++ b/t/CORE/op/each_array.t
@@ -1,9 +1,8 @@
 #!./perl
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
+    push @INC, "t/CORE/lib";
+    require 't/CORE/test.pl';
 }
 use strict;
 use warnings;
diff --git a/t/CORE/op/eval.t b/t/CORE/op/eval.t
index e4c2f70..f4d4689 100644
--- a/t/CORE/op/eval.t
+++ b/t/CORE/op/eval.t
@@ -1,9 +1,7 @@
 #!./perl
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
+    require 't/CORE/test.pl';
 }
 
 plan(tests => 130);
diff --git a/t/CORE/op/evalbytes.t b/t/CORE/op/evalbytes.t
index 5a03e63..9b7f7f1 100644
--- a/t/CORE/op/evalbytes.t
+++ b/t/CORE/op/evalbytes.t
@@ -1,9 +1,8 @@
 #!./perl
 
 BEGIN {
-    chdir 't';
-    @INC = '../lib';
-    require './test.pl';
+    push @INC, "t/CORE/lib";
+    require 't/CORE/test.pl';
 }
 
 plan(tests => 8);
diff --git a/t/CORE/op/exec.t b/t/CORE/op/exec.t
index 6ec3646..12d2602 100644
--- a/t/CORE/op/exec.t
+++ b/t/CORE/op/exec.t
@@ -1,9 +1,8 @@
 #!./perl
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = ('../lib');
-    require './test.pl';
+    unshift @INC, 't/CORE/lib';
+    require 't/CORE/test.pl';
 }
 
 my $vms_exit_mode = 0;
diff --git a/t/CORE/op/exists_sub.t b/t/CORE/op/exists_sub.t
index a08e0f5..39d3dc9 100644
--- a/t/CORE/op/exists_sub.t
+++ b/t/CORE/op/exists_sub.t
@@ -1,9 +1,8 @@
 #!./perl
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
+    push @INC, "t/CORE/lib";
+    require 't/CORE/test.pl';
 }
 
 sub t1;
diff --git a/t/CORE/op/exp.t b/t/CORE/op/exp.t
index d132b1f..fb28c40 100644
--- a/t/CORE/op/exp.t
+++ b/t/CORE/op/exp.t
@@ -1,9 +1,8 @@
 #!./perl
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
+    push @INC, "t/CORE/lib";
+    require 't/CORE/test.pl';
 }
 
 plan tests => 16;
diff --git a/t/CORE/op/fh.t b/t/CORE/op/fh.t
index afca57b..bbdff7a 100644
--- a/t/CORE/op/fh.t
+++ b/t/CORE/op/fh.t
@@ -1,9 +1,8 @@
 #!./perl
 
 BEGIN {
-    chdir 't';
-    @INC = '../lib';
-    require './test.pl';
+    push @INC, "t/CORE/lib";
+    require 't/CORE/test.pl';
 }
 
 plan tests => 8;
diff --git a/t/CORE/op/filehandle.t b/t/CORE/op/filehandle.t
index a7621db..77def41 100644
--- a/t/CORE/op/filehandle.t
+++ b/t/CORE/op/filehandle.t
@@ -1,9 +1,8 @@
 #!./perl
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
+    push @INC, "t/CORE/lib";
+    require 't/CORE/test.pl';
     skip_all_if_miniperl("no dynamic loading on miniperl, no IO, hence no FileHandle");
 }
 
diff --git a/t/CORE/op/filetest.t b/t/CORE/op/filetest.t
index 7316442..bf81f7e 100644
--- a/t/CORE/op/filetest.t
+++ b/t/CORE/op/filetest.t
@@ -4,9 +4,7 @@
 # See pod/perlport.pod for details.
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
+    require 't/CORE/test.pl';
 }
 
 plan(tests => 53 + 27*14);
@@ -15,6 +13,7 @@ if ($^O =~ /MSWin32|cygwin|msys/ && !is_miniperl) {
   require Win32; # for IsAdminUser()
 }
 
+chdir 't/CORE';
 # Tests presume we are in t/op directory and that file 'TEST' is found
 # therein.
 is(-d 'op', 1, "-d: directory correctly identified");
diff --git a/t/CORE/op/filetest_stack_ok.t b/t/CORE/op/filetest_stack_ok.t
index 4128612..903f96a 100644
--- a/t/CORE/op/filetest_stack_ok.t
+++ b/t/CORE/op/filetest_stack_ok.t
@@ -5,9 +5,8 @@
 # argument on the stack.
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
+    push @INC, "t/CORE/lib";
+    require 't/CORE/test.pl';
 }
 
 my @ops = split //, 'rwxoRWXOezsfdlpSbctugkTMBAC';
diff --git a/t/CORE/op/filetest_t.t b/t/CORE/op/filetest_t.t
index eec67ec..fa28a4d 100644
--- a/t/CORE/op/filetest_t.t
+++ b/t/CORE/op/filetest_t.t
@@ -1,9 +1,8 @@
 #!./perl
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
+    push @INC, "t/CORE/lib";
+    require 't/CORE/test.pl';
 }
 
 use strict;
diff --git a/t/CORE/op/flip.t b/t/CORE/op/flip.t
index 8526db7..c1f873c 100644
--- a/t/CORE/op/flip.t
+++ b/t/CORE/op/flip.t
@@ -1,7 +1,7 @@
 #!./perl
 
 BEGIN {
-    require "test.pl";
+    require 't/CORE/test.pl';
 }
 
 plan(11);
@@ -23,7 +23,7 @@ is($y, '12E0123E0');
 {
 local $.;
 
-open(of,'harness') or die "Can't open harness: $!";
+open(of,'t/CORE/TEST') or die "Can't open harness: $!";
 while (<of>) {
     (3 .. 5) && ($foo .= $_);
 }
diff --git a/t/CORE/op/for.t b/t/CORE/op/for.t
index 2ac0fc8..4dc6421 100644
--- a/t/CORE/op/for.t
+++ b/t/CORE/op/for.t
@@ -1,7 +1,7 @@
 #!./perl
 
 BEGIN {
-    require "test.pl";
+    require "t/CORE/test.pl";
 }
 
 plan(106);
diff --git a/t/CORE/op/fork.t b/t/CORE/op/fork.t
index 60c991b..5db377f 100644
--- a/t/CORE/op/fork.t
+++ b/t/CORE/op/fork.t
@@ -3,9 +3,8 @@
 # tests for both real and emulated fork()
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
+    push @INC, "t/CORE/lib";
+    require 't/CORE/test.pl';
     require Config;
     skip_all('no fork')
 	unless ($Config::Config{d_fork} or $Config::Config{d_pseudofork});
diff --git a/t/CORE/op/fresh_perl_utf8.t b/t/CORE/op/fresh_perl_utf8.t
index fcf48e7..57f6811 100644
--- a/t/CORE/op/fresh_perl_utf8.t
+++ b/t/CORE/op/fresh_perl_utf8.t
@@ -3,9 +3,8 @@
 #This file is intentionally written in UTF-8
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
+    push @INC, "t/CORE/lib";
+    require 't/CORE/test.pl';
 }
 
 plan 1;
diff --git a/t/CORE/op/getppid.t b/t/CORE/op/getppid.t
index a8d0f2c..93e6dcc 100644
--- a/t/CORE/op/getppid.t
+++ b/t/CORE/op/getppid.t
@@ -8,18 +8,18 @@
 # the same. (and not ours)
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = qw(../lib);
+    unshift @INC, 't/CORE/lib';
 }
 
 use strict;
 
 BEGIN {
-    require './test.pl';
-    skip_all_without_config(qw(d_pipe d_fork d_waitpid d_getppid));
-    plan (8);
+    require 't/CORE/test.pl';
 }
 
+skip_all_without_config(qw(d_pipe d_fork d_waitpid d_getppid));
+plan (8);
+
 # No, we don't want any zombies. kill 0, $ppid spots zombies :-(
 $SIG{CHLD} = 'IGNORE';
 
diff --git a/t/CORE/op/glob.t b/t/CORE/op/glob.t
index e6f3680..e49a9f2 100644
--- a/t/CORE/op/glob.t
+++ b/t/CORE/op/glob.t
@@ -1,13 +1,12 @@
 #!./perl
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = qw(. ../lib);
-    require 'test.pl';
+    require 't/CORE/test.pl';
 }
 
 plan( tests => 18 );
 
+chdir 't/CORE';
 @oops = @ops = <op/*>;
 
 if ($^O eq 'MSWin32') {
diff --git a/t/CORE/op/gmagic.t b/t/CORE/op/gmagic.t
index bcf1322..e6f988c 100644
--- a/t/CORE/op/gmagic.t
+++ b/t/CORE/op/gmagic.t
@@ -1,9 +1,8 @@
 #!./perl -w
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
+    push @INC, "t/CORE/lib";
+    require 't/CORE/test.pl';
 }
 
 use strict;
diff --git a/t/CORE/op/goto.t b/t/CORE/op/goto.t
index 13e6b04..79b71f9 100644
--- a/t/CORE/op/goto.t
+++ b/t/CORE/op/goto.t
@@ -3,8 +3,7 @@
 # "This IS structured code.  It's just randomly structured."
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = qw(. ../lib);
+    push @INC, qw{t/CORE/lib};
     require "test.pl";
 }
 
diff --git a/t/CORE/op/grent.t b/t/CORE/op/grent.t
index 3b28619..14362a4 100644
--- a/t/CORE/op/grent.t
+++ b/t/CORE/op/grent.t
@@ -1,9 +1,8 @@
 #!./perl
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
+    push @INC, "t/CORE/lib";
+    require 't/CORE/test.pl';
 }
 
 eval {my @n = getgrgid 0};
diff --git a/t/CORE/op/grep.t b/t/CORE/op/grep.t
index d34686d..0c36e67 100644
--- a/t/CORE/op/grep.t
+++ b/t/CORE/op/grep.t
@@ -5,8 +5,7 @@
 #
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = qw(. ../lib);
+    push @INC, qw{t/CORE/lib};
     require "test.pl";
 }
 
diff --git a/t/CORE/op/groups.t b/t/CORE/op/groups.t
index dc2631e..fe87388 100644
--- a/t/CORE/op/groups.t
+++ b/t/CORE/op/groups.t
@@ -10,9 +10,8 @@ BEGIN {
     $ENV{LC_ALL} = "C"; # so that external utilities speak English
     $ENV{LANGUAGE} = 'C'; # GNU locale extension
 
-    chdir 't';
-    @INC = '../lib';
-    require './test.pl';
+    push @INC, "t/CORE/lib";
+    require 't/CORE/test.pl';
     skip_all_if_miniperl("no dynamic loading on miniperl, no POSIX");
 }
 use 5.010;
diff --git a/t/CORE/op/gv.t b/t/CORE/op/gv.t
index 6b90864..21634f0 100644
--- a/t/CORE/op/gv.t
+++ b/t/CORE/op/gv.t
@@ -5,11 +5,11 @@
 #
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
+    require 't/CORE/test.pl';
 }
 
+chdir 't/CORE';
+
 use warnings;
 
 plan( tests => 271 );
diff --git a/t/CORE/op/hash-rt85026.t b/t/CORE/op/hash-rt85026.t
index 91087b8..7222824 100644
--- a/t/CORE/op/hash-rt85026.t
+++ b/t/CORE/op/hash-rt85026.t
@@ -1,9 +1,8 @@
 #!/usr/bin/perl -w
 
 BEGIN {
-  chdir 't';
-  @INC = '../lib';
-  require './test.pl';
+  push @INC, "t/CORE/lib";
+  require 't/CORE/test.pl';
   skip_all_without_dynamic_extension("Devel::Peek");
 }
 
diff --git a/t/CORE/op/hash.t b/t/CORE/op/hash.t
index 5f4c143..f65c471 100644
--- a/t/CORE/op/hash.t
+++ b/t/CORE/op/hash.t
@@ -1,9 +1,8 @@
 #!./perl -w
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
+    push @INC, "t/CORE/lib";
+    require 't/CORE/test.pl';
 }
 
 use strict;
diff --git a/t/CORE/op/hashassign.t b/t/CORE/op/hashassign.t
index 57a625c..2eb103d 100644
--- a/t/CORE/op/hashassign.t
+++ b/t/CORE/op/hashassign.t
@@ -1,9 +1,8 @@
 #!./perl -w
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
+    push @INC, "t/CORE/lib";
+    require 't/CORE/test.pl';
 }
 
 # use strict;
diff --git a/t/CORE/op/hashwarn.t b/t/CORE/op/hashwarn.t
index b14e9c2..cec6ed4 100644
--- a/t/CORE/op/hashwarn.t
+++ b/t/CORE/op/hashwarn.t
@@ -1,11 +1,10 @@
 #!./perl
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = qw(. ../lib);
+    push @INC, qw{t/CORE/lib};
 }
 
-require 'test.pl';
+require 't/CORE/test.pl';
 plan( tests => 16 );
 
 use strict;
diff --git a/t/CORE/op/heredoc.t b/t/CORE/op/heredoc.t
index a239e92..8bfbe98 100644
--- a/t/CORE/op/heredoc.t
+++ b/t/CORE/op/heredoc.t
@@ -1,9 +1,8 @@
 # tests for heredocs besides what is tested in base/lex.t
 
 BEGIN {
-   chdir 't' if -d 't';
-   @INC = '../lib';
-   require './test.pl';
+   push @INC, "t/CORE/lib";
+   require 't/CORE/test.pl';
 }
 
 use strict;
diff --git a/t/CORE/op/inc.t b/t/CORE/op/inc.t
index 8db0660..d612e94 100644
--- a/t/CORE/op/inc.t
+++ b/t/CORE/op/inc.t
@@ -1,6 +1,6 @@
 #!./perl -w
 
-require './test.pl';
+require 't/CORE/test.pl';
 use strict;
 
 # Tests of post/pre - increment/decrement operators.
diff --git a/t/CORE/op/inccode-tie.t b/t/CORE/op/inccode-tie.t
index 5bbcc10..8adef3f 100644
--- a/t/CORE/op/inccode-tie.t
+++ b/t/CORE/op/inccode-tie.t
@@ -6,7 +6,7 @@ use Tie::Array;
 my @orig_INC = @INC;
 tie @INC, 'Tie::StdArray';
 @INC = @orig_INC;
-for my $file ('./op/inccode.t', './t/op/inccode.t', ':op:inccode.t') {
+for my $file ('./t/CORE/op/inccode.t', './t/op/inccode.t', ':op:inccode.t') {
     if (-r $file) {
 	do $file; die $@ if $@;
 	exit;
diff --git a/t/CORE/op/inccode.t b/t/CORE/op/inccode.t
index 1a0b919..e4b12e2 100644
--- a/t/CORE/op/inccode.t
+++ b/t/CORE/op/inccode.t
@@ -3,9 +3,8 @@
 # Tests for the coderef-in-@INC feature
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = qw(. ../lib);
-    require './test.pl';
+    unshift @INC, 't/CORE/lib';
+    require 't/CORE/test.pl';
 }
 
 use Config;
@@ -197,7 +196,7 @@ is( $ret, 'abc', 'do "abc.pl" sees return value' );
     my $got;
     #local @INC; # local fails on tied @INC
     my @old_INC = @INC; # because local doesn't work on tied arrays
-    @INC = ('lib', 'lib/Devel', sub { $got = $_[1]; return undef; });
+    @INC = ('t/CORE/lib', 'lib/Devel', sub { $got = $_[1]; return undef; });
     foreach my $filename ('/test_require.pm', './test_require.pm',
 			  '../test_require.pm') {
 	local %INC;
diff --git a/t/CORE/op/incfilter.t b/t/CORE/op/incfilter.t
index c344558..4f59a5c 100644
--- a/t/CORE/op/incfilter.t
+++ b/t/CORE/op/incfilter.t
@@ -3,16 +3,16 @@
 # Tests for the source filters in coderef-in-@INC
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = qw(. ../lib);
-    require 'test.pl';
-    skip_all_if_miniperl('no dynamic loading on miniperl, no Filter::Util::Call');
-    skip_all_without_perlio();
+    push @INC, qw{t/CORE/lib};
+    require 't/CORE/test.pl';
 }
 use strict;
 use Config;
 use Filter::Util::Call;
 
+skip_all_if_miniperl('no dynamic loading on miniperl, no Filter::Util::Call');
+skip_all_without_perlio();
+
 plan(tests => 153);
 
 unshift @INC, sub {
diff --git a/t/CORE/op/index.t b/t/CORE/op/index.t
index eaed4b3..634c07f 100644
--- a/t/CORE/op/index.t
+++ b/t/CORE/op/index.t
@@ -1,9 +1,8 @@
 #!./perl
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
+    push @INC, "t/CORE/lib";
+    require 't/CORE/test.pl';
 }
 
 use strict;
diff --git a/t/CORE/op/int.t b/t/CORE/op/int.t
index 9aad020..bcea5a1 100644
--- a/t/CORE/op/int.t
+++ b/t/CORE/op/int.t
@@ -1,9 +1,8 @@
 #!./perl
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
+    push @INC, "t/CORE/lib";
+    require 't/CORE/test.pl';
 }
 
 plan 15;
diff --git a/t/CORE/op/join.t b/t/CORE/op/join.t
index f98b5db..a01d106 100644
--- a/t/CORE/op/join.t
+++ b/t/CORE/op/join.t
@@ -1,9 +1,8 @@
 #!./perl
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
+    push @INC, "t/CORE/lib";
+    require 't/CORE/test.pl';
 }
 
 plan tests => 26;
diff --git a/t/CORE/op/kill0.t b/t/CORE/op/kill0.t
index 7f6e6ec..14a48bf 100644
--- a/t/CORE/op/kill0.t
+++ b/t/CORE/op/kill0.t
@@ -1,9 +1,8 @@
 #!./perl
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
+    push @INC, "t/CORE/lib";
+    require 't/CORE/test.pl';
 }
 
 BEGIN {
diff --git a/t/CORE/op/kvaslice.t b/t/CORE/op/kvaslice.t
index e8aa14e..2334c1f 100644
--- a/t/CORE/op/kvaslice.t
+++ b/t/CORE/op/kvaslice.t
@@ -1,9 +1,8 @@
 #!./perl -w
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
+    push @INC, "t/CORE/lib";
+    require 't/CORE/test.pl';
 }
 
 # use strict;
diff --git a/t/CORE/op/kvhslice.t b/t/CORE/op/kvhslice.t
index 321d1c4..5b51bd9 100644
--- a/t/CORE/op/kvhslice.t
+++ b/t/CORE/op/kvhslice.t
@@ -1,9 +1,8 @@
 #!./perl -w
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
+    push @INC, "t/CORE/lib";
+    require 't/CORE/test.pl';
 }
 
 # use strict;
diff --git a/t/CORE/op/lc.t b/t/CORE/op/lc.t
index 38d2b6b..0cd9f18 100644
--- a/t/CORE/op/lc.t
+++ b/t/CORE/op/lc.t
@@ -3,11 +3,10 @@
 # This file is intentionally encoded in latin-1.
 
 BEGIN {
-    chdir 't';
-    @INC = '../lib';
+    unshift @INC, 't/CORE/lib';
     require Config; import Config;
-    require './test.pl';
-    require './loc_tools.pl';   # Contains find_utf8_ctype_locale()
+    require 't/CORE/test.pl';
+    require 't/CORE/loc_tools.pl';
 }
 
 use feature qw( fc );
diff --git a/t/CORE/op/leaky-magic.t b/t/CORE/op/leaky-magic.t
index 371f3ac..7171a4b 100644
--- a/t/CORE/op/leaky-magic.t
+++ b/t/CORE/op/leaky-magic.t
@@ -5,9 +5,8 @@
 # in other packages (%Net::DNS::RR::SIG, ${"'Oh no'!"}, etc.).
 
 BEGIN {
-    chdir 't' if -d 't';
-    require './test.pl';
-    @INC = '../lib';
+    require 't/CORE/test.pl';
+    push @INC, "t/CORE/lib";
 }
 
 # Hack to allow test counts to be specified piecemeal
diff --git a/t/CORE/op/length.t b/t/CORE/op/length.t
index b144b09..5e84e51 100644
--- a/t/CORE/op/length.t
+++ b/t/CORE/op/length.t
@@ -1,9 +1,8 @@
 #!./perl
 
 BEGIN {
-    chdir 't' if -d 't';
-    require './test.pl';
-    @INC = '../lib';
+    require 't/CORE/test.pl';
+    push @INC, "t/CORE/lib";
 }
 
 plan (tests => 41);
diff --git a/t/CORE/op/lex.t b/t/CORE/op/lex.t
index b33f0ef..79dfe11 100644
--- a/t/CORE/op/lex.t
+++ b/t/CORE/op/lex.t
@@ -2,7 +2,7 @@
 use strict;
 use warnings;
 
-BEGIN { chdir 't'; require './test.pl'; }
+BEGIN { require 't/CORE/test.pl' }
 
 plan(tests => 8);
 
diff --git a/t/CORE/op/lex_assign.t b/t/CORE/op/lex_assign.t
index 290023c..dd7dd07 100644
--- a/t/CORE/op/lex_assign.t
+++ b/t/CORE/op/lex_assign.t
@@ -1,9 +1,8 @@
 #!./perl
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
+    push @INC, "t/CORE/lib";
+    require 't/CORE/test.pl';
 }
 
 $| = 1;
diff --git a/t/CORE/op/lexsub.t b/t/CORE/op/lexsub.t
index 8cfbab1..5ea1419 100644
--- a/t/CORE/op/lexsub.t
+++ b/t/CORE/op/lexsub.t
@@ -1,9 +1,8 @@
 #!perl
 
 BEGIN {
-    chdir 't';
-    @INC = '../lib';
-    require './test.pl';
+    push @INC, "t/CORE/lib";
+    require 't/CORE/test.pl';
     *bar::is = *is;
     *bar::like = *like;
 }
diff --git a/t/CORE/op/lfs.t b/t/CORE/op/lfs.t
index acf9fe8..8adb90a 100644
--- a/t/CORE/op/lfs.t
+++ b/t/CORE/op/lfs.t
@@ -3,9 +3,8 @@
 # If you modify/add tests here, remember to update also ext/Fcntl/t/syslfs.t.
 
 BEGIN {
-	chdir 't' if -d 't';
-	@INC = '../lib';
-	require './test.pl';
+	push @INC, "t/CORE/lib";
+	require 't/CORE/test.pl';
 	require Config;
 	# Don't bother if there are no quad offsets.
 	skip_all('no 64-bit file offsets')
diff --git a/t/CORE/op/list.t b/t/CORE/op/list.t
index 74f256b..58507a3 100644
--- a/t/CORE/op/list.t
+++ b/t/CORE/op/list.t
@@ -1,8 +1,7 @@
 #!./perl
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = qw(. ../lib);
+    push @INC, qw{t/CORE/lib};
 }
 
 require "test.pl";
diff --git a/t/CORE/op/local.t b/t/CORE/op/local.t
index 03a8310..524764c 100644
--- a/t/CORE/op/local.t
+++ b/t/CORE/op/local.t
@@ -1,9 +1,8 @@
 #!./perl
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = qw(. ../lib);
-    require './test.pl';
+    push @INC, qw{t/CORE/lib};
+    require 't/CORE/test.pl';
 }
 plan tests => 310;
 
diff --git a/t/CORE/op/localref.t b/t/CORE/op/localref.t
index 3f49344..bcc406a 100644
--- a/t/CORE/op/localref.t
+++ b/t/CORE/op/localref.t
@@ -1,7 +1,6 @@
 #!./perl
 
-chdir 't' if -d 't';
-@INC = qw(. ../lib);
+push @INC, qw{t/CORE/lib};
 require "test.pl";
 plan( tests => 64 );
 
diff --git a/t/CORE/op/lock.t b/t/CORE/op/lock.t
index c40ec4c..49ec809 100644
--- a/t/CORE/op/lock.t
+++ b/t/CORE/op/lock.t
@@ -1,9 +1,8 @@
 #!./perl
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = qw(. ../lib);
-    require './test.pl';
+    push @INC, qw{t/CORE/lib};
+    require 't/CORE/test.pl';
 }
 plan tests => 5;
 
diff --git a/t/CORE/op/loopctl.t b/t/CORE/op/loopctl.t
index d520a7f..d237b92 100644
--- a/t/CORE/op/loopctl.t
+++ b/t/CORE/op/loopctl.t
@@ -31,8 +31,7 @@
 #
 #  -- .robin. <robin@kitsite.com>  2001-03-13
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = qw(. ../lib);
+    push @INC, qw{t/CORE/lib};
     require "test.pl";
 }
 
diff --git a/t/CORE/op/lop.t b/t/CORE/op/lop.t
index bc4eb85..f60815f 100644
--- a/t/CORE/op/lop.t
+++ b/t/CORE/op/lop.t
@@ -5,9 +5,8 @@
 #
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
+    push @INC, "t/CORE/lib";
+    require 't/CORE/test.pl';
 }
 
 plan tests => 17;
diff --git a/t/CORE/op/magic-27839.t b/t/CORE/op/magic-27839.t
index 3e877a4..a6a7737 100644
--- a/t/CORE/op/magic-27839.t
+++ b/t/CORE/op/magic-27839.t
@@ -2,10 +2,10 @@
 
 BEGIN {
     $SIG{__WARN__} = sub { die "Dying on warning: ", @_ };
-    require './test.pl';
+    require 't/CORE/test.pl';
     skip_all_if_miniperl("no dynamic loading on miniperl, no Tie::Hash::NamedCapture");
-    plan(tests => 2);
 }
+plan(tests => 2);
 
 use strict;
 
diff --git a/t/CORE/op/magic.t b/t/CORE/op/magic.t
index e651ad5..a31ed41 100644
--- a/t/CORE/op/magic.t
+++ b/t/CORE/op/magic.t
@@ -2,18 +2,17 @@
 
 BEGIN {
     $| = 1;
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
-    plan (tests => 187);
+    require 't/CORE/test.pl';
 }
 
+plan (tests => 187);
+
 # Test that defined() returns true for magic variables created on the fly,
 # even before they have been created.
 # This must come first, even before turning on warnings or setting up
 # $SIG{__WARN__}, to avoid invalidating the tests.  warnings.pm currently
 # does not mention any special variables, but that could easily change.
-BEGIN {
+{
     # not available in miniperl
     my %non_mini = map { $_ => 1 } qw(+ - [);
     for (qw(
@@ -56,11 +55,7 @@ $Is_Dos      = $^O eq 'dos';
 $Is_os2      = $^O eq 'os2';
 $Is_Cygwin   = $^O eq 'cygwin';
 
-$PERL =
-   ($Is_NetWare ? 'perl'   :
-    $Is_VMS     ? $^X      :
-    $Is_MSWin32 ? '.\perl' :
-                  './perl');
+$PERL = $^X;
 
 sub env_is {
     my ($key, $val, $desc) = @_;
diff --git a/t/CORE/op/method.t b/t/CORE/op/method.t
index 059b44f..a0e1b9d 100644
--- a/t/CORE/op/method.t
+++ b/t/CORE/op/method.t
@@ -5,14 +5,15 @@
 #
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = qw(. ../lib lib);
-    require "test.pl";
+    unshift @INC, 'lib';
+    require "t/CORE/test.pl";
 }
 
 use strict;
 no warnings 'once';
 
+chdir 't/CORE';
+
 plan(tests => 147);
 
 @A::ISA = 'B';
diff --git a/t/CORE/op/mkdir.t b/t/CORE/op/mkdir.t
index d5c04b3..e772c7b 100644
--- a/t/CORE/op/mkdir.t
+++ b/t/CORE/op/mkdir.t
@@ -1,9 +1,8 @@
 #!./perl -w
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
+    push @INC, "t/CORE/lib";
+    require 't/CORE/test.pl';
 }
 
 plan tests => 22;
diff --git a/t/CORE/op/my.t b/t/CORE/op/my.t
index 2dca46f..640fd98 100644
--- a/t/CORE/op/my.t
+++ b/t/CORE/op/my.t
@@ -1,8 +1,7 @@
 #!./perl
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
+    push @INC, "t/CORE/lib";
+    require 't/CORE/test.pl';
 }
 
 sub foo {
diff --git a/t/CORE/op/my_stash.t b/t/CORE/op/my_stash.t
index 6ec7619..d126ad9 100644
--- a/t/CORE/op/my_stash.t
+++ b/t/CORE/op/my_stash.t
@@ -3,9 +3,8 @@
 package Foo;
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
+    push @INC, "t/CORE/lib";
+    require 't/CORE/test.pl';
 }
 
 plan 9;
diff --git a/t/CORE/op/mydef.t b/t/CORE/op/mydef.t
index b993f1b..dfdc4bf 100644
--- a/t/CORE/op/mydef.t
+++ b/t/CORE/op/mydef.t
@@ -1,11 +1,12 @@
 #!./perl -w
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
+    push @INC, "t/CORE/lib";
+    require 't/CORE/test.pl';
 }
 
+plan tests => 73;
+
 use strict;
 no warnings 'misc', 'experimental::lexical_topic';
 
@@ -153,7 +154,7 @@ $_ = "global";
     my $_ = "titi";
     my $r;
     {
-	local $::TODO = 'Marked as todo since test was added in 59f00321bbc2d046';
+    local $::TODO = 'Marked as todo since test was added in 59f00321bbc2d046';
 	$r = $s =~ /to(?{ is($_, 'toto', 'my $_ in code-match' ) })to/;
     }
     ok($r, "\$s=$s should match!");
@@ -179,7 +180,7 @@ my $file = tempfile();
     open my $_, '>', $file or die "Can't open $file: $!";
     print $_ "hello\n";
     close $_;
-    cmp_ok(-s $file, '>', 5, 'writing to filehandle $_ works');
+    ok( -s $file >  5, 'writing to filehandle $_ works');
 }
 {
     open my $_, $file or die "Can't open $file: $!";
@@ -215,4 +216,3 @@ my $file = tempfile();
     ::is($_, 4, '$_ is "special", and always forced to main');
 }
 
-done_testing();
diff --git a/t/CORE/op/negate.t b/t/CORE/op/negate.t
index 3b02e35..5cac846 100644
--- a/t/CORE/op/negate.t
+++ b/t/CORE/op/negate.t
@@ -1,9 +1,8 @@
 #!./perl -w
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
+    push @INC, "t/CORE/lib";
+    require 't/CORE/test.pl';
 }
 
 plan tests => 46;
diff --git a/t/CORE/op/not.t b/t/CORE/op/not.t
index 17f7a36..adad5f2 100644
--- a/t/CORE/op/not.t
+++ b/t/CORE/op/not.t
@@ -1,9 +1,8 @@
 #!./perl -w
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
+    push @INC, "t/CORE/lib";
+    require 't/CORE/test.pl';
 }
 
 plan tests => 24;
diff --git a/t/CORE/op/numconvert.t b/t/CORE/op/numconvert.t
index bfdb488..ff7eaf5 100644
--- a/t/CORE/op/numconvert.t
+++ b/t/CORE/op/numconvert.t
@@ -36,9 +36,8 @@
 # sub a5 { "$_[0]" }		# P
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
+    push @INC, "t/CORE/lib";
+    require 't/CORE/test.pl';
 }
 
 use strict;
diff --git a/t/CORE/op/oct.t b/t/CORE/op/oct.t
index d8caecd..c689363 100644
--- a/t/CORE/op/oct.t
+++ b/t/CORE/op/oct.t
@@ -2,7 +2,7 @@
 
 # Tests 51 onwards are intentionally not all-warnings-clean
 
-require './test.pl';
+require 't/CORE/test.pl';
 use strict;
 
 plan(tests => 77);
diff --git a/t/CORE/op/or.t b/t/CORE/op/or.t
index 9e7de4c..77dcf09 100644
--- a/t/CORE/op/or.t
+++ b/t/CORE/op/or.t
@@ -3,8 +3,7 @@
 # Test || in weird situations.
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
+    push @INC, "t/CORE/lib";
 }
 
 
@@ -23,7 +22,7 @@ sub FETCH {
 
 
 package main;
-require './test.pl';
+require 't/CORE/test.pl';
 
 plan( tests => 14 );
 
diff --git a/t/CORE/op/ord.t b/t/CORE/op/ord.t
index 1c82262..2c960eb 100644
--- a/t/CORE/op/ord.t
+++ b/t/CORE/op/ord.t
@@ -1,8 +1,7 @@
 #!./perl
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = qw(. ../lib); # ../lib needed for test.deparse
+    push @INC, qw{t/CORE/lib}; # ../lib needed for test.deparse
     require "test.pl";
 }
 
diff --git a/t/CORE/op/overload_integer.t b/t/CORE/op/overload_integer.t
index 2375ab9..8326700 100644
--- a/t/CORE/op/overload_integer.t
+++ b/t/CORE/op/overload_integer.t
@@ -1,9 +1,8 @@
 #!./perl
 
 BEGIN {
-    chdir 't' if -d 't';
-    push @INC, '../lib';
-    require './test.pl';
+    unshift @INC, 't/CORE/lib';
+    require 't/CORE/test.pl';
 }
 
 use strict;
diff --git a/t/CORE/op/override.t b/t/CORE/op/override.t
index ce740ea..c2d376d 100644
--- a/t/CORE/op/override.t
+++ b/t/CORE/op/override.t
@@ -1,14 +1,13 @@
 #!./perl
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
+    push @INC, "t/CORE/lib";
+    require 't/CORE/test.pl';
     require Config; # load these before we mess with *CORE::GLOBAL::require
     require 'Config_heavy.pl'; # since runperl will need them
 }
 
-plan tests => 35;
+plan tests => 6;
 
 #
 # This file tries to test builtin override using CORE::GLOBAL
@@ -24,98 +23,6 @@ BEGIN { *CORE::GLOBAL::time = sub () { $t; } }
 
 is( 45, time + 3 );
 
-#
-# require has special behaviour
-#
-my $r;
-BEGIN { *CORE::GLOBAL::require = sub { $r = shift; 1; } }
-
-require Foo;
-is( $r, "Foo.pm" );
-
-require Foo::Bar;
-is( $r, join($dirsep, "Foo", "Bar.pm") );
-
-require 'Foo';
-is( $r, "Foo" );
-
-require 5.006;
-is( $r, "5.006" );
-
-require v5.6;
-ok( abs($r - 5.006) < 0.001 && $r eq "\x05\x06" );
-
-eval "use Foo";
-is( $r, "Foo.pm" );
-
-eval "use Foo::Bar";
-is( $r, join($dirsep, "Foo", "Bar.pm") );
-
-{
-    my @r;
-    local *CORE::GLOBAL::require = sub { push @r, shift; 1; };
-    eval "use 5.006";
-    like( " @r ", qr " 5\.006 " );
-}
-
-{
-    local $_ = 'foo.pm';
-    require;
-    is( $r, 'foo.pm' );
-}
-
-{
-    BEGIN {
-        # Can’t do ‘no warnings’ with CORE::GLOBAL::require overridden. :-)
-        CORE::require warnings;
-        unimport warnings 'experimental::lexical_topic';
-    }
-    my $_ = 'bar.pm';
-    require;
-    is( $r, 'bar.pm' );
-}
-
-# localizing *CORE::GLOBAL::foo should revert to finding CORE::foo
-{
-    local(*CORE::GLOBAL::require);
-    $r = '';
-    eval "require NoNeXiSt;";
-    ok( ! ( $r or $@ !~ /^Can't locate NoNeXiSt/i ) );
-}
-
-#
-# readline() has special behaviour too
-#
-
-$r = 11;
-BEGIN { *CORE::GLOBAL::readline = sub (;*) { ++$r }; }
-is( <FH>	, 12 );
-is( <$fh>	, 13 );
-my $pad_fh;
-is( <$pad_fh>	, 14 );
-
-# Non-global readline() override
-BEGIN { *Rgs::readline = sub (;*) { --$r }; }
-{
-    package Rgs;
-    ::is( <FH>	, 13 );
-    ::is( <$fh>	, 12 );
-    ::is( <$pad_fh>	, 11 );
-}
-
-# Global readpipe() override
-BEGIN { *CORE::GLOBAL::readpipe = sub ($) { "$_[0] " . --$r }; }
-is( `rm`,	    "rm 10", '``' );
-is( qx/cp/,	    "cp 9", 'qx' );
-
-# Non-global readpipe() override
-BEGIN { *Rgs::readpipe = sub ($) { ++$r . " $_[0]" }; }
-{
-    package Rgs;
-    ::is( `rm`,		  "10 rm", '``' );
-    ::is( qx/cp/,	  "11 cp", 'qx' );
-}
-
 # Verify that the parsing of overridden keywords isn't messed up
 # by the indirect object notation
 {
@@ -136,49 +43,3 @@ BEGIN { *OverridenPop::pop = sub { ::is( $_[0][0], "ok" ) }; }
     pop OverridenPop->foo();
 }
 
-{
-    eval {
-        local *CORE::GLOBAL::require = sub {
-            CORE::require($_[0]);
-        };
-        require 5;
-        require Text::ParseWords;
-    };
-    is $@, '';
-}
-
-# Constant inlining should not countermand "use subs" overrides
-BEGIN { package other; *::caller = \&::caller }
-sub caller() { 42 }
-caller; # inline the constant
-is caller, 42, 'constant inlining does not undo "use subs" on keywords';
-
-is runperl(prog => 'sub CORE::GLOBAL::do; do file; print qq-ok\n-'),
-  "ok\n",
-  'no crash with CORE::GLOBAL::do stub';
-is runperl(prog => 'sub CORE::GLOBAL::glob; glob; print qq-ok\n-'),
-  "ok\n",
-  'no crash with CORE::GLOBAL::glob stub';
-is runperl(prog => 'sub CORE::GLOBAL::require; require re; print qq-o\n-'),
-  "o\n",
-  'no crash with CORE::GLOBAL::require stub';
-
-like runperl(prog => 'use constant foo=>1; '
-                    .'BEGIN { *{q|CORE::GLOBAL::readpipe|} = \&{q|foo|};1}'
-                    .'warn ``',
-             stderr => 1),
-     qr/Too many arguments/,
-    '`` does not ignore &CORE::GLOBAL::readpipe aliased to a constant';
-like runperl(prog => 'use constant foo=>1; '
-                    .'BEGIN { *{q|CORE::GLOBAL::readline|} = \&{q|foo|};1}'
-                    .'warn <a>',
-             stderr => 1),
-     qr/Too many arguments/,
-    '<> does not ignore &CORE::GLOBAL::readline aliased to a constant';
-
-is runperl(prog => 'use constant t=>42; '
-                  .'BEGIN { *{q|CORE::GLOBAL::time|} = \&{q|t|};1}'
-                  .'print time, chr 10',
-          stderr => 1),
-   "42\n",
-   'keywords respect global constant overrides';
diff --git a/t/CORE/op/pack.t b/t/CORE/op/pack.t
index 99cb533..8eeed09 100644
--- a/t/CORE/op/pack.t
+++ b/t/CORE/op/pack.t
@@ -1,9 +1,8 @@
 #!./perl -w
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
+    push @INC, "t/CORE/lib";
+    require 't/CORE/test.pl';
 }
 
 # This is truth in an if statement, and could be a skip message
diff --git a/t/CORE/op/packagev.t b/t/CORE/op/packagev.t
index f4e094c..d6fe815 100644
--- a/t/CORE/op/packagev.t
+++ b/t/CORE/op/packagev.t
@@ -1,9 +1,8 @@
 #!./perl
 
 BEGIN {
-    chdir 't';
-    @INC = '../lib';
-    require './test.pl';
+    push @INC, "t/CORE/lib";
+    require 't/CORE/test.pl';
 }
 
 # XXX remove this later -- dagolden, 2010-01-13
diff --git a/t/CORE/op/pos.t b/t/CORE/op/pos.t
index 04b5272..8de261e 100644
--- a/t/CORE/op/pos.t
+++ b/t/CORE/op/pos.t
@@ -1,9 +1,8 @@
 #!./perl
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
+    push @INC, "t/CORE/lib";
+    require 't/CORE/test.pl';
 }
 
 plan tests => 29;
diff --git a/t/CORE/op/postfixderef.t b/t/CORE/op/postfixderef.t
index e60b33b..cf7fdf5 100644
--- a/t/CORE/op/postfixderef.t
+++ b/t/CORE/op/postfixderef.t
@@ -9,9 +9,8 @@ this file contains all dereferencing tests from ref.t but using postfix instead
 
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = qw(. ../lib);
-    require 'test.pl';
+    push @INC, qw{t/CORE/lib};
+    require 't/CORE/test.pl';
 }
 
 use strict qw(refs subs);
diff --git a/t/CORE/op/pow.t b/t/CORE/op/pow.t
index 4cfeed1..277eb55 100644
--- a/t/CORE/op/pow.t
+++ b/t/CORE/op/pow.t
@@ -2,9 +2,8 @@
 # Now they'll be wanting biff! and zap! tests too.
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
+    push @INC, "t/CORE/lib";
+    require 't/CORE/test.pl';
 }
 
 # This calculation ought to be within 0.001 of the right answer.
diff --git a/t/CORE/op/print.t b/t/CORE/op/print.t
index a98b0bf..9bdd0d8 100644
--- a/t/CORE/op/print.t
+++ b/t/CORE/op/print.t
@@ -1,7 +1,7 @@
 #!./perl
 
 BEGIN {
-    require "test.pl";
+    require "t/CORE/test.pl";
 }
 
 plan(3);
diff --git a/t/CORE/op/protowarn.t b/t/CORE/op/protowarn.t
index 0cf946a..f60e3d3 100644
--- a/t/CORE/op/protowarn.t
+++ b/t/CORE/op/protowarn.t
@@ -1,15 +1,14 @@
 #!./perl
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = qw(. ../lib);
+    push @INC, qw{t/CORE/lib};
 }
 
 use strict;
 use warnings;
 
 BEGIN {
-    require 'test.pl';
+    require 't/CORE/test.pl';
     plan( tests => 12 );
 }
 
diff --git a/t/CORE/op/push.t b/t/CORE/op/push.t
index b473322..13e72c4 100644
--- a/t/CORE/op/push.t
+++ b/t/CORE/op/push.t
@@ -1,9 +1,8 @@
 #!./perl
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
+    push @INC, "t/CORE/lib";
+    require 't/CORE/test.pl';
 }
 
 @tests = split(/\n/, <<EOF);
diff --git a/t/CORE/op/pwent.t b/t/CORE/op/pwent.t
index 7562bc0..071984d 100644
--- a/t/CORE/op/pwent.t
+++ b/t/CORE/op/pwent.t
@@ -1,9 +1,8 @@
 #!./perl
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
+    push @INC, "t/CORE/lib";
+    require 't/CORE/test.pl';
 }
 
 use strict;
diff --git a/t/CORE/op/qr.t b/t/CORE/op/qr.t
index ac017eb..6469498 100644
--- a/t/CORE/op/qr.t
+++ b/t/CORE/op/qr.t
@@ -3,8 +3,7 @@
 use strict;
 
 BEGIN {
-    chdir 't';
-    require './test.pl';
+    require 't/CORE/test.pl';
 }
 
 plan(tests => 32);
diff --git a/t/CORE/op/quotemeta.t b/t/CORE/op/quotemeta.t
index 1b8613a..6dbb173 100644
--- a/t/CORE/op/quotemeta.t
+++ b/t/CORE/op/quotemeta.t
@@ -1,8 +1,7 @@
 #!./perl
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = qw(../lib .);
+    unshift @INC, 't/CORE/lib';
     require Config; import Config;
     require "test.pl";
 }
diff --git a/t/CORE/op/rand.t b/t/CORE/op/rand.t
index 90d1c37..c38e3fc 100644
--- a/t/CORE/op/rand.t
+++ b/t/CORE/op/rand.t
@@ -16,8 +16,7 @@
 # chapter 3. ISBN 0-201-03822-6 (v. 2)
 
 BEGIN {
-    chdir "t" if -d "t";
-    @INC = qw(. ../lib);
+    push @INC, qw{t/CORE/lib};
 }
 
 use strict;
diff --git a/t/CORE/op/range.t b/t/CORE/op/range.t
index 903cdee..bc90287 100644
--- a/t/CORE/op/range.t
+++ b/t/CORE/op/range.t
@@ -1,11 +1,10 @@
 #!./perl
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = ('../lib', '.');
+    unshift @INC, 't/CORE/lib';
 }   
 # Avoid using eq_array below as it uses .. internally.
-require 'test.pl';
+require 't/CORE/test.pl';
 
 use Config;
 
diff --git a/t/CORE/op/read.t b/t/CORE/op/read.t
index 23f1b51..1597f89 100644
--- a/t/CORE/op/read.t
+++ b/t/CORE/op/read.t
@@ -1,14 +1,14 @@
 #!./perl
 
 BEGIN {
-    chdir 't';
-    @INC = '../lib';
-    require './test.pl';
+    require 't/CORE/test.pl';
 }
 use strict;
+use Config ();
 
 plan tests => 2564;
 
+chdir 't/CORE';
 open(FOO,'op/read.t') || open(FOO,'t/op/read.t') || open(FOO,':op:read.t') || die "Can't open op.read";
 seek(FOO,4,0) or die "Seek failed: $!";
 my $buf;
@@ -23,13 +23,7 @@ $got = read(FOO,$buf,4);
 is ($got, 0);
 is ($buf, "");
 
-# This is true if Config is not built, or if PerlIO is enabled
-# ie assume that PerlIO is present, unless we know for sure otherwise.
-my $has_perlio = !eval {
-    no warnings;
-    require Config;
-    !$Config::Config{useperlio}
-};
+my $has_perlio = 1;
 
 my $tmpfile = tempfile();
 
diff --git a/t/CORE/op/readdir.t b/t/CORE/op/readdir.t
index 8515d1d..c71bafc 100644
--- a/t/CORE/op/readdir.t
+++ b/t/CORE/op/readdir.t
@@ -1,15 +1,15 @@
 #!./perl
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
+    require 't/CORE/test.pl';
 }
 
 use strict;
 use warnings;
 use vars qw($fh @fh %fh);
 
+chdir 't/CORE';
+
 eval 'opendir(NOSUCH, "no/such/directory");';
 skip_all($@) if $@;
 
@@ -23,16 +23,7 @@ is(opendir(OP, "op"), 1);
 my @D = grep(/^[^\.].*\.t$/i, readdir(OP));
 closedir(OP);
 
-my $expect;
-{
-    open my $man, '<', '../MANIFEST' or die "Can't open ../MANIFEST: $!";
-    while (<$man>) {
-	++$expect if m!^t/op/[^/]+\t!;
-    }
-}
-
-my ($min, $max) = ($expect - 10, $expect + 10);
-within(scalar @D, $expect, 10, 'counting op/*.t');
+within(scalar @D, 180, 200, 'counting op/*.t');
 
 my @R = sort @D;
 my @G = sort <op/*.t>;
diff --git a/t/CORE/op/readline.t b/t/CORE/op/readline.t
index 1cfd78c..5ab5564 100644
--- a/t/CORE/op/readline.t
+++ b/t/CORE/op/readline.t
@@ -1,9 +1,8 @@
 #!./perl
 
 BEGIN {
-    chdir 't';
-    @INC = '../lib';
-    require './test.pl';
+    push @INC, "t/CORE/lib";
+    require 't/CORE/test.pl';
 }
 
 plan tests => 30;
diff --git a/t/CORE/op/recurse.t b/t/CORE/op/recurse.t
index 2a0201a..9955302 100644
--- a/t/CORE/op/recurse.t
+++ b/t/CORE/op/recurse.t
@@ -5,12 +5,11 @@
 #
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = qw(. ../lib);
+    push @INC, qw{t/CORE/lib};
     require "test.pl";
-    plan(tests => 28);
 }
 
+plan(tests => 28);
 use strict;
 
 sub gcd {
diff --git a/t/CORE/op/ref.t b/t/CORE/op/ref.t
index a6564ce..8f053c3 100644
--- a/t/CORE/op/ref.t
+++ b/t/CORE/op/ref.t
@@ -1,9 +1,8 @@
 #!./perl
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = qw(. ../lib);
-    require 'test.pl';
+    push @INC, qw{t/CORE/lib};
+    require 't/CORE/test.pl';
 }
 
 use strict qw(refs subs);
diff --git a/t/CORE/op/repeat.t b/t/CORE/op/repeat.t
index bfd142f..8d27dd9 100644
--- a/t/CORE/op/repeat.t
+++ b/t/CORE/op/repeat.t
@@ -1,11 +1,10 @@
 #!./perl
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
+    push @INC, "t/CORE/lib";
 }
 
-require './test.pl';
+require 't/CORE/test.pl';
 plan(tests => 43);
 
 # compile time
diff --git a/t/CORE/op/require_37033.t b/t/CORE/op/require_37033.t
index dac8568..af83de9 100644
--- a/t/CORE/op/require_37033.t
+++ b/t/CORE/op/require_37033.t
@@ -4,8 +4,8 @@ use strict;
 # Check that require doesn't leave the handle it uses open, if it happens that
 # the handle it opens gets file descriptor 0. RT #37033.
 
-require './test.pl';
-@INC = 'lib';
+require 't/CORE/test.pl';
+unshift @INC, 't/CORE/lib';
 
 sub test_require {
     my ($state, $want) = @_;
diff --git a/t/CORE/op/require_errors.t b/t/CORE/op/require_errors.t
index ec7a122..cd87624 100644
--- a/t/CORE/op/require_errors.t
+++ b/t/CORE/op/require_errors.t
@@ -3,15 +3,15 @@ use strict;
 use warnings;
 
 BEGIN {
-    chdir 't';
-    require './test.pl';
+    require 't/CORE/test.pl';
 }
 
 plan(tests => 17);
 
 my $nonfile = tempfile();
 
-@INC = qw(Perl Rules);
+{
+	local @INC = qw(Perl Rules);
 
 # The tests for ' ' and '.h' never did fail, but previously the error reporting
 # code would read memory before the start of the SV's buffer
@@ -56,6 +56,7 @@ for my $file ("$nonfile.ph", ".ph") {
 
 eval 'require <foom>';
 like $@, qr/^<> should be quotes at /, 'require <> error';
+} # Local @INC
 
 my $module   = tempfile();
 my $mod_file = "$module.pm";
diff --git a/t/CORE/op/reset.t b/t/CORE/op/reset.t
index e592430..a967b51 100644
--- a/t/CORE/op/reset.t
+++ b/t/CORE/op/reset.t
@@ -1,9 +1,8 @@
 #!./perl -w
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
+    push @INC, "t/CORE/lib";
+    require 't/CORE/test.pl';
 }
 use strict;
 
diff --git a/t/CORE/op/reverse.t b/t/CORE/op/reverse.t
index 0796614..ac03961 100644
--- a/t/CORE/op/reverse.t
+++ b/t/CORE/op/reverse.t
@@ -1,9 +1,8 @@
 #!./perl
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
+    push @INC, "t/CORE/lib";
+    require 't/CORE/test.pl';
 }
 
 plan tests => 26;
diff --git a/t/CORE/op/rt119311.t b/t/CORE/op/rt119311.t
index 2ad7a9c..7356ef2 100644
--- a/t/CORE/op/rt119311.t
+++ b/t/CORE/op/rt119311.t
@@ -1,5 +1,9 @@
 #!perl
 
+BEGIN {
+    require 't/CORE/test.pl';
+}
+
 # Complicated enough to get its own test file.
 
 # When a subroutine is called recursively, it gets a new pad indexed by its
@@ -22,7 +26,6 @@
 # outer sub.  Then we test a lexical directly inside the sub that DESTROY
 # calls.  Then we repeat with formats.
 
-BEGIN { chdir 't'; require './test.pl' }
 plan 22;
 
 sub foo {
diff --git a/t/CORE/op/runlevel.t b/t/CORE/op/runlevel.t
index 3e68a23..3157140 100644
--- a/t/CORE/op/runlevel.t
+++ b/t/CORE/op/runlevel.t
@@ -6,9 +6,8 @@
 ## Adapted and expanded by Gurusamy Sarathy <gsar@activestate.com>
 ##
 
-chdir 't' if -d 't';
-@INC = '../lib';
-require './test.pl';
+push @INC, "t/CORE/lib";
+require 't/CORE/test.pl';
 
 $|=1;
 
diff --git a/t/CORE/op/select.t b/t/CORE/op/select.t
index 1994dd2..1595036 100644
--- a/t/CORE/op/select.t
+++ b/t/CORE/op/select.t
@@ -1,14 +1,14 @@
 #!./perl
 
 BEGIN {
-    chdir 't';
-    require './test.pl';
+    require 't/CORE/test.pl';
 }
 
 plan reverse 9;
 
+my $test_pl = 't/CORE/test.pl';
 
-open my $fh, "test.pl" or die "$0 unfortunately cannot open test.pl: $!";
+open my $fh, $test_pl or die "$0 unfortunately cannot open $test_pl: $!";
 
 is select, 'main::STDOUT', 'select retval';
 is select($fh), 'main::STDOUT', 'select retval when called with argument';
@@ -18,7 +18,7 @@ is select(STDOUT), $fh, 'select previous ref when setting to bareword';
 is select, 'main::STDOUT', 'switching back to STDOUT';
 is ref\select, 'SCALAR', 'and STDOUT is a plain string';
 
-open foo::bar, "test.pl" or die "$0 sadly cannot open test.pl: $!";
+open foo::bar, "$test_pl" or die "$0 sadly cannot open $test_pl: $!";
 select foo::bar;
 $handle = \*foo::bar;
 $stash = \%foo::;
@@ -26,7 +26,7 @@ $stash = \%foo::;
 is select, $handle,
     'select returns ref for glob whose stash has been detached';
 
-open thwat::snin, "test.pl" or die "$0 is unable to open test.pl: $!";
+open thwat::snin, "$test_pl" or die "$0 is unable to open $test_pl: $!";
 select thwat::snin;
 $handle = \*thwat::snin;
 *thwat:: = *snin::; # gv is now *__ANON__::snin
diff --git a/t/CORE/op/setpgrpstack.t b/t/CORE/op/setpgrpstack.t
index b384138..66985ba 100644
--- a/t/CORE/op/setpgrpstack.t
+++ b/t/CORE/op/setpgrpstack.t
@@ -1,9 +1,8 @@
 #!./perl -w
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
+    push @INC, "t/CORE/lib";
+    require 't/CORE/test.pl';
     skip_all_without_config('d_setpgrp');
 }
 
diff --git a/t/CORE/op/sigdispatch.t b/t/CORE/op/sigdispatch.t
index 12b2d5e..e99a978 100644
--- a/t/CORE/op/sigdispatch.t
+++ b/t/CORE/op/sigdispatch.t
@@ -3,7 +3,7 @@
 # We assume that TestInit has been used.
 
 BEGIN {
-      require './test.pl';
+      require 't/CORE/test.pl';
 }
 
 use strict;
diff --git a/t/CORE/op/signatures.t b/t/CORE/op/signatures.t
index 99f075f..a82a068 100644
--- a/t/CORE/op/signatures.t
+++ b/t/CORE/op/signatures.t
@@ -1,9 +1,8 @@
 #!perl
 
 BEGIN {
-    chdir 't';
-    @INC = '../lib';
-    require './test.pl';
+    push @INC, "t/CORE/lib";
+    require 't/CORE/test.pl';
 }
 plan 912;
 
diff --git a/t/CORE/op/sigsystem.t b/t/CORE/op/sigsystem.t
index ddfebf9..1c612ee 100644
--- a/t/CORE/op/sigsystem.t
+++ b/t/CORE/op/sigsystem.t
@@ -1,7 +1,7 @@
 #!perl -w
 
 BEGIN {
-      require './test.pl';
+      require 't/CORE/test.pl';
       skip_all_if_miniperl();
       skip_all_without_config(qw(d_fork));
 }
diff --git a/t/CORE/op/sleep.t b/t/CORE/op/sleep.t
index 3f5bbe0..b3ff5ba 100644
--- a/t/CORE/op/sleep.t
+++ b/t/CORE/op/sleep.t
@@ -1,8 +1,7 @@
 #!./perl
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = qw(. ../lib);
+    push @INC, qw{t/CORE/lib};
 }
 
 require "test.pl";
diff --git a/t/CORE/op/smartkve.t b/t/CORE/op/smartkve.t
index 85eb9e8..a7c0010 100644
--- a/t/CORE/op/smartkve.t
+++ b/t/CORE/op/smartkve.t
@@ -1,9 +1,8 @@
 #!./perl
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
+    push @INC, "t/CORE/lib";
+    require 't/CORE/test.pl';
 }
 use strict;
 use warnings;
diff --git a/t/CORE/op/smartmatch.t b/t/CORE/op/smartmatch.t
index ed4b3ec..e8bbbb5 100644
--- a/t/CORE/op/smartmatch.t
+++ b/t/CORE/op/smartmatch.t
@@ -1,9 +1,8 @@
 #!./perl
 
 BEGIN {
-    chdir 't';
-    @INC = '../lib';
-    require './test.pl';
+    push @INC, "t/CORE/lib";
+    require 't/CORE/test.pl';
 }
 use strict;
 use warnings;
diff --git a/t/CORE/op/sort.t b/t/CORE/op/sort.t
index 151e3ea..4164fe7 100644
--- a/t/CORE/op/sort.t
+++ b/t/CORE/op/sort.t
@@ -1,9 +1,8 @@
 #!./perl
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = qw(. ../lib);
-    require 'test.pl';
+    push @INC, qw{t/CORE/lib};
+    require 't/CORE/test.pl';
 }
 use warnings;
 plan( tests => 183 );
diff --git a/t/CORE/op/splice.t b/t/CORE/op/splice.t
index dde11f5..bb6b2df 100644
--- a/t/CORE/op/splice.t
+++ b/t/CORE/op/splice.t
@@ -1,9 +1,8 @@
 #!./perl
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
+    push @INC, "t/CORE/lib";
+    require 't/CORE/test.pl';
 }
 
 $|  = 1;
diff --git a/t/CORE/op/split.t b/t/CORE/op/split.t
index 7e0008e..3d1455a 100644
--- a/t/CORE/op/split.t
+++ b/t/CORE/op/split.t
@@ -1,9 +1,8 @@
 #!./perl
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
+    push @INC, "t/CORE/lib";
+    require 't/CORE/test.pl';
 }
 
 plan tests => 119;
diff --git a/t/CORE/op/split_unicode.t b/t/CORE/op/split_unicode.t
index bb50620..21c5fff 100644
--- a/t/CORE/op/split_unicode.t
+++ b/t/CORE/op/split_unicode.t
@@ -1,11 +1,12 @@
 #!./perl
 
 BEGIN {
-    require './test.pl';
-    skip_all_if_miniperl("no dynamic loading on miniperl, no File::Spec (used by charnames)");
-    plan(tests => 145);
+    require 't/CORE/test.pl';
 }
 
+skip_all_if_miniperl("no dynamic loading on miniperl, no File::Spec (used by charnames)");
+plan(tests => 145);
+
 {
     # check the special casing of split /\s/ and unicode
     use charnames qw(:full);
diff --git a/t/CORE/op/sprintf.t b/t/CORE/op/sprintf.t
index 17e269a..cef4148 100644
--- a/t/CORE/op/sprintf.t
+++ b/t/CORE/op/sprintf.t
@@ -9,14 +9,13 @@
 # For tests that do not fit this format, use sprintf2.t.
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
+    push @INC, "t/CORE/lib";
 }
 use warnings;
 use version;
 use Config;
 use strict;
-require './test.pl';
+require 't/CORE/test.pl';
 
 my @tests = ();
 my ($template, $data, $result, $comment, $w, $x, $evalData, $n, $p);
diff --git a/t/CORE/op/sprintf2.t b/t/CORE/op/sprintf2.t
index d914de0..3a7e546 100644
--- a/t/CORE/op/sprintf2.t
+++ b/t/CORE/op/sprintf2.t
@@ -3,9 +3,8 @@
 # Tests for sprintf that do not fit the format of sprintf.t.
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
+    push @INC, "t/CORE/lib";
+    require 't/CORE/test.pl';
 }   
 
 plan tests => 1370;
diff --git a/t/CORE/op/srand.t b/t/CORE/op/srand.t
index 5321cde..13b36ac 100644
--- a/t/CORE/op/srand.t
+++ b/t/CORE/op/srand.t
@@ -1,8 +1,7 @@
 #!./perl -w
 
 BEGIN {
-    chdir "t" if -d "t";
-    @INC = qw(. ../lib);
+    push @INC, qw{t/CORE/lib};
 }
 
 # Test srand.
diff --git a/t/CORE/op/sselect.t b/t/CORE/op/sselect.t
index 879c9d5..76c6823 100644
--- a/t/CORE/op/sselect.t
+++ b/t/CORE/op/sselect.t
@@ -2,12 +2,11 @@
 
 my $hires;
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = ('.', '../lib');
+    unshift @INC, 't/CORE/lib';
     $hires = eval 'use Time::HiResx "time"; 1';
 }
 
-require 'test.pl';
+require 't/CORE/test.pl';
 
 plan (15);
 
diff --git a/t/CORE/op/stash.t b/t/CORE/op/stash.t
index f2e5523..00a4a0f 100644
--- a/t/CORE/op/stash.t
+++ b/t/CORE/op/stash.t
@@ -1,11 +1,10 @@
 #!./perl
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = qw(../lib);
+    unshift @INC, 't/CORE/lib';
 }
 
-BEGIN { require "./test.pl"; }
+BEGIN { require 't/CORE/test.pl'; }
 
 plan( tests => 58 );
 
diff --git a/t/CORE/op/stat.t b/t/CORE/op/stat.t
index 2f34f6e..0f010f7 100644
--- a/t/CORE/op/stat.t
+++ b/t/CORE/op/stat.t
@@ -1,24 +1,15 @@
 #!./perl
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';	# for which_perl() etc
+    require 't/CORE/test.pl';	# for which_perl() etc
 }
 
 use Config;
-
+use File::Spec ();
 my ($Null, $Curdir);
-if(eval {require File::Spec; 1}) {
-    $Null = File::Spec->devnull;
-    $Curdir = File::Spec->curdir;
-} else {
-    die $@ unless is_miniperl();
-    $Curdir = '.';
-    diag("miniperl failed to load File::Spec, error is:\n$@");
-    diag("\ncontinuing, assuming '.' for current directory. Some tests will be skipped.");
-}
 
+$Null = File::Spec->devnull;
+$Curdir = File::Spec->curdir;
 
 plan tests => 113;
 
@@ -382,7 +373,7 @@ SKIP: {
 
 
 # These aren't strictly "stat" calls, but so what?
-my $statfile = './op/stat.t';
+my $statfile = 't/CORE/op/stat.t';
 ok(  -T $statfile,    '-T');
 ok(! -B $statfile,    '!-B');
 ok(-B $Perl,      '-B');
@@ -557,12 +548,12 @@ SKIP: {
     # And now for the ambiguous bareword case
     {
 	no warnings 'deprecated';
-	ok(open(DIR, "TEST"), 'Can open "TEST" dir')
+	ok(open(DIR, "t/CORE/TEST"), 'Can open "TEST" dir')
 	    || diag "Can't open 'TEST':  $!";
     }
     my $size = (stat(DIR))[7];
     ok(defined $size, "stat() on bareword works");
-    is($size, -s "TEST", "size returned by stat of bareword is for the file");
+    is($size, -s "t/CORE/TEST", "size returned by stat of bareword is for the file");
     ok(-f _, "ambiguous bareword uses file handle, not dir handle");
     ok(-f DIR);
     closedir DIR or die $!;
@@ -590,12 +581,12 @@ SKIP: {
 	# And now for the ambiguous bareword case
 	{
 	    no warnings 'deprecated';
-	    ok(open(DIR, "TEST"), 'Can open "TEST" dir')
+	    ok(open(DIR, "t/CORE/TEST"), 'Can open "TEST" dir')
 		|| diag "Can't open 'TEST':  $!";
 	}
 	my $size = (stat(*DIR{IO}))[7];
 	ok(defined $size, "stat() on *THINGY{IO} works");
-	is($size, -s "TEST",
+	is($size, -s "t/CORE/TEST",
 	   "size returned by stat of *THINGY{IO} is for the file");
 	ok(-f _, "ambiguous *THINGY{IO} uses file handle, not dir handle");
 	ok(-f *DIR{IO});
diff --git a/t/CORE/op/state.t b/t/CORE/op/state.t
index 81e5486..67e8721 100644
--- a/t/CORE/op/state.t
+++ b/t/CORE/op/state.t
@@ -2,9 +2,8 @@
 # tests state variables
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
+    push @INC, "t/CORE/lib";
+    require 't/CORE/test.pl';
 }
 
 use strict;
diff --git a/t/CORE/op/study.t b/t/CORE/op/study.t
index 906aba9..c055315 100644
--- a/t/CORE/op/study.t
+++ b/t/CORE/op/study.t
@@ -1,9 +1,8 @@
 #!./perl -w
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
+    push @INC, "t/CORE/lib";
+    require 't/CORE/test.pl';
 }
 
 watchdog(10);
diff --git a/t/CORE/op/studytied.t b/t/CORE/op/studytied.t
index 62f1ac9..e4c9216 100644
--- a/t/CORE/op/studytied.t
+++ b/t/CORE/op/studytied.t
@@ -1,9 +1,8 @@
 #!./perl
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
+    push @INC, "t/CORE/lib";
+    require 't/CORE/test.pl';
 }
 
 use strict;
diff --git a/t/CORE/op/sub.t b/t/CORE/op/sub.t
index 7df8f49..d54e7c3 100644
--- a/t/CORE/op/sub.t
+++ b/t/CORE/op/sub.t
@@ -1,9 +1,8 @@
 #!./perl -w
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
+    push @INC, "t/CORE/lib";
+    require 't/CORE/test.pl';
 }
 
 plan( tests => 33 );
diff --git a/t/CORE/op/sub_lval.t b/t/CORE/op/sub_lval.t
index 4bd96ee..72c1f26 100644
--- a/t/CORE/op/sub_lval.t
+++ b/t/CORE/op/sub_lval.t
@@ -1,7 +1,6 @@
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
+    push @INC, "t/CORE/lib";
+    require 't/CORE/test.pl';
 }
 plan tests=>205;
 
diff --git a/t/CORE/op/substr.t b/t/CORE/op/substr.t
index 8946759..3a16308 100644
--- a/t/CORE/op/substr.t
+++ b/t/CORE/op/substr.t
@@ -3,8 +3,7 @@
 #P = start of string  Q = start of substr  R = end of substr  S = end of string
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
+    push @INC, "t/CORE/lib";
 }
 use warnings ;
 
@@ -21,7 +20,7 @@ $SIG{__WARN__} = sub {
      }
 };
 
-BEGIN { require './test.pl'; }
+BEGIN { require 't/CORE/test.pl'; }
 
 plan(387);
 
diff --git a/t/CORE/op/svleak.t b/t/CORE/op/svleak.t
index 74a8338..690709c 100644
--- a/t/CORE/op/svleak.t
+++ b/t/CORE/op/svleak.t
@@ -5,9 +5,8 @@
 # see if the count increases.
 
 BEGIN {
-    chdir 't';
-    @INC = '../lib';
-    require './test.pl';
+    push @INC, "t/CORE/lib";
+    require 't/CORE/test.pl';
 
     eval { require XS::APItest; XS::APItest->import('sv_count'); 1 }
 	or skip_all("XS::APItest not available");
diff --git a/t/CORE/op/switch.t b/t/CORE/op/switch.t
index 204a57a..0e9ea6c 100644
--- a/t/CORE/op/switch.t
+++ b/t/CORE/op/switch.t
@@ -1,9 +1,7 @@
 #!./perl
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
+    require 't/CORE/test.pl';
 }
 
 use strict;
@@ -440,7 +438,7 @@ sub check_outside1 { is($_, "inside", "\$_ is not lexically scoped") }
 
 {
     my ($ok_d, $ok_f, $ok_r);
-    given("op") {
+    given("t/CORE/op") {
 	when(-d)  {$ok_d = 1; continue}
 	when(!-f) {$ok_f = 1; continue}
 	when(-r)  {$ok_r = 1; continue}
diff --git a/t/CORE/op/symbolcache.t b/t/CORE/op/symbolcache.t
index b3e567b..0a4320c 100644
--- a/t/CORE/op/symbolcache.t
+++ b/t/CORE/op/symbolcache.t
@@ -1,14 +1,15 @@
 #!./perl -w
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
-    plan( tests => 8 );
+    push @INC, "t/CORE/lib";
+    require 't/CORE/test.pl';
 }
 
+plan( tests => 8 );
+
 use strict;
 
+eval q|
 # first, with delete
 # simple removal
 sub removed { 23 }
@@ -40,3 +41,5 @@ is( replaced2(), 'meth', 'original function not bound, was replaced' );
 ok( main->replaced2 eq 'meth', 'method is replaced function' );
 BEGIN { undef $main::{replaced2} }
 sub replaced2 { 'meth' }
+
+|;
\ No newline at end of file
diff --git a/t/CORE/op/sysio.t b/t/CORE/op/sysio.t
index 25d7197..fcf03e9 100644
--- a/t/CORE/op/sysio.t
+++ b/t/CORE/op/sysio.t
@@ -1,13 +1,13 @@
 #!./perl
 
 BEGIN {
-  chdir 't' if -d 't';
-  @INC = '../lib';
-  require './test.pl';
+  push @INC, "t/CORE/lib";
+  require 't/CORE/test.pl';
 }
 
 plan tests => 48;
 
+chdir 't/CORE';
 open(I, 'op/sysio.t') || die "sysio.t: cannot find myself: $!";
 
 $reopen = ($^O eq 'VMS' ||
diff --git a/t/CORE/op/tie.t b/t/CORE/op/tie.t
index e0b2499..148ab6d 100644
--- a/t/CORE/op/tie.t
+++ b/t/CORE/op/tie.t
@@ -9,9 +9,8 @@
 # Warn or die msgs (if any) at - line 1234
 #
 
-chdir 't' if -d 't';
-@INC = '../lib';
-require './test.pl';
+push @INC, "t/CORE/lib";
+require 't/CORE/test.pl';
 
 $|=1;
 
diff --git a/t/CORE/op/tie_fetch_count.t b/t/CORE/op/tie_fetch_count.t
index 9f60bb4..e6aa66a 100644
--- a/t/CORE/op/tie_fetch_count.t
+++ b/t/CORE/op/tie_fetch_count.t
@@ -4,12 +4,11 @@
 # See Bugs #76814 and #87708.
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
-    plan (tests => 312);
+    require 't/CORE/test.pl';
 }
 
+plan (tests => 312);
+
 use strict;
 use warnings;
 
@@ -144,7 +143,7 @@ for (split //, 'rwxoRWXOezsfdpSbctugkTBMAC') {
     check_count "-$_ \\\$tied_glob";
 }
 $dummy  = -l $var       ; check_count '-l';
-$var = "test.pl";
+$var = "t/CORE/test.pl";
 $dummy  = -e -e -e $var ; check_count '-e -e';
 
 # Matching
diff --git a/t/CORE/op/tiearray.t b/t/CORE/op/tiearray.t
index 99b7938..aba8d1c 100644
--- a/t/CORE/op/tiearray.t
+++ b/t/CORE/op/tiearray.t
@@ -1,9 +1,8 @@
 #!./perl
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
+    push @INC, "t/CORE/lib";
+    require 't/CORE/test.pl';
 }
 
 my %seen;
diff --git a/t/CORE/op/tiehandle.t b/t/CORE/op/tiehandle.t
index 08a20eb..020182e 100644
--- a/t/CORE/op/tiehandle.t
+++ b/t/CORE/op/tiehandle.t
@@ -1,15 +1,14 @@
 #!./perl -w
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
+    push @INC, "t/CORE/lib";
 }
 
 my @expect;
 my $data = "";
 my @data = ();
 
-require './test.pl';
+require 't/CORE/test.pl';
 plan(tests => 67);
 
 sub compare {
diff --git a/t/CORE/op/time.t b/t/CORE/op/time.t
index 5cb9191..49a20ab 100644
--- a/t/CORE/op/time.t
+++ b/t/CORE/op/time.t
@@ -1,9 +1,8 @@
 #!./perl -w
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
+    push @INC, "t/CORE/lib";
+    require 't/CORE/test.pl';
 }
 
 plan tests => 72;
diff --git a/t/CORE/op/time_loop.t b/t/CORE/op/time_loop.t
index 6f4acdc..aa8e44a 100644
--- a/t/CORE/op/time_loop.t
+++ b/t/CORE/op/time_loop.t
@@ -6,7 +6,7 @@
 
 use strict;
 
-BEGIN { require './test.pl'; }
+BEGIN { require 't/CORE/test.pl'; }
 
 plan tests => 2;
 watchdog(2);
diff --git a/t/CORE/op/tr.t b/t/CORE/op/tr.t
index 55a3438..6ba54ce 100644
--- a/t/CORE/op/tr.t
+++ b/t/CORE/op/tr.t
@@ -3,9 +3,8 @@
 use utf8;
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
+    push @INC, "t/CORE/lib";
+    require 't/CORE/test.pl';
 }
 
 plan tests => 134;
diff --git a/t/CORE/op/undef.t b/t/CORE/op/undef.t
index d7d78c0..ba07b83 100644
--- a/t/CORE/op/undef.t
+++ b/t/CORE/op/undef.t
@@ -1,9 +1,8 @@
 #!./perl
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
+    push @INC, "t/CORE/lib";
+    require 't/CORE/test.pl';
 }
 
 use strict;
diff --git a/t/CORE/op/universal.t b/t/CORE/op/universal.t
index 50d1782..e8f9fcf 100644
--- a/t/CORE/op/universal.t
+++ b/t/CORE/op/universal.t
@@ -4,10 +4,9 @@
 #
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
+    push @INC, "t/CORE/lib";
     $| = 1;
-    require "./test.pl";
+    require 't/CORE/test.pl';
 }
 
 plan tests => 144;
diff --git a/t/CORE/op/unlink.t b/t/CORE/op/unlink.t
index 7602149..0e9c4e4 100644
--- a/t/CORE/op/unlink.t
+++ b/t/CORE/op/unlink.t
@@ -1,9 +1,8 @@
 #!./perl
 
 BEGIN {
-    chdir 't';
-    @INC = '../lib';
-    require './test.pl';
+    push @INC, "t/CORE/lib";
+    require 't/CORE/test.pl';
 }
 
 plan 6;
diff --git a/t/CORE/op/unshift.t b/t/CORE/op/unshift.t
index a6cd692..4434439 100644
--- a/t/CORE/op/unshift.t
+++ b/t/CORE/op/unshift.t
@@ -1,7 +1,7 @@
 #!./perl
 
 BEGIN {
-    require "test.pl";
+    require "t/CORE/test.pl";
 }
 
 plan(36);
diff --git a/t/CORE/op/upgrade.t b/t/CORE/op/upgrade.t
index 5f2ffa6..df0237c 100644
--- a/t/CORE/op/upgrade.t
+++ b/t/CORE/op/upgrade.t
@@ -5,9 +5,8 @@
 # build or testsuite that upgraded an NV to an RV
 
 BEGIN {
-    chdir 't';
-    @INC = '../lib';
-    require './test.pl';
+    push @INC, "t/CORE/lib";
+    require 't/CORE/test.pl';
 }
 
 use strict;
diff --git a/t/CORE/op/utf8cache.t b/t/CORE/op/utf8cache.t
index 65254b1..b360c1b 100644
--- a/t/CORE/op/utf8cache.t
+++ b/t/CORE/op/utf8cache.t
@@ -2,9 +2,8 @@
 # Test for malfunctions of utf8 cache
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
+    push @INC, "t/CORE/lib";
+    require 't/CORE/test.pl';
 }
 
 use strict;
diff --git a/t/CORE/op/utf8decode.t b/t/CORE/op/utf8decode.t
index 92de821..b7920b9 100644
--- a/t/CORE/op/utf8decode.t
+++ b/t/CORE/op/utf8decode.t
@@ -1,9 +1,8 @@
 #!./perl
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
+    push @INC, "t/CORE/lib";
+    require 't/CORE/test.pl';
 }
 
 {
diff --git a/t/CORE/op/utf8magic.t b/t/CORE/op/utf8magic.t
index 55e921d..986c15c 100644
--- a/t/CORE/op/utf8magic.t
+++ b/t/CORE/op/utf8magic.t
@@ -1,9 +1,8 @@
 #!perl
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
+    push @INC, "t/CORE/lib";
+    require 't/CORE/test.pl';
 }
 
 plan tests => 6;
diff --git a/t/CORE/op/utfhash.t b/t/CORE/op/utfhash.t
index ebb2934..ac18627 100644
--- a/t/CORE/op/utfhash.t
+++ b/t/CORE/op/utfhash.t
@@ -1,13 +1,11 @@
 #!./perl -w
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
-
-    plan(tests => 99);
+    push @INC, "t/CORE/lib";
+    require 't/CORE/test.pl';    
 }
 
+plan(tests => 99);
 use strict;
 
 # Two hashes one will all keys 8-bit possible (initially), other
diff --git a/t/CORE/op/utftaint.t b/t/CORE/op/utftaint.t
index d734927..a078341 100644
--- a/t/CORE/op/utftaint.t
+++ b/t/CORE/op/utftaint.t
@@ -2,8 +2,8 @@
 # tests whether tainting works with UTF-8
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = qw(../lib);
+	unshift @INC, 't/CORE';
+	require 'test.pl';
 }
 
 use strict;
@@ -17,7 +17,6 @@ sub tainted ($) {
     any_tainted @_;
 }
 
-require './test.pl';
 plan(tests => 3*10 + 3*8 + 2*16 + 3);
 
 my $arg = $ENV{PATH}; # a tainted value
diff --git a/t/CORE/op/vec.t b/t/CORE/op/vec.t
index 30badb0..e1400a3 100644
--- a/t/CORE/op/vec.t
+++ b/t/CORE/op/vec.t
@@ -1,8 +1,7 @@
 #!./perl
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = qw(. ../lib);
+    push @INC, qw{t/CORE/lib};
 }
 
 require "test.pl";
diff --git a/t/CORE/op/ver.t b/t/CORE/op/ver.t
index 3969d11..16958c9 100644
--- a/t/CORE/op/ver.t
+++ b/t/CORE/op/ver.t
@@ -1,8 +1,7 @@
 #!./perl
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = qw(. ../lib);
+    push @INC, qw{t/CORE/lib};
     $SIG{'__WARN__'} = sub { warn $_[0] if $DOWARN };
     require "test.pl";
 }
diff --git a/t/CORE/op/waitpid.t b/t/CORE/op/waitpid.t
index aff2b99..c4c2c5c 100644
--- a/t/CORE/op/waitpid.t
+++ b/t/CORE/op/waitpid.t
@@ -3,9 +3,8 @@
 # tests for (possibly emulated) waitpid
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
+    push @INC, "t/CORE/lib";
+    require 't/CORE/test.pl';
     require Config;
     skip_all('no Errno')
 	unless eval 'use Errno qw(EINVAL); 1';
diff --git a/t/CORE/op/wantarray.t b/t/CORE/op/wantarray.t
index 2ee4243..df79821 100644
--- a/t/CORE/op/wantarray.t
+++ b/t/CORE/op/wantarray.t
@@ -1,9 +1,8 @@
 #!./perl
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
+    push @INC, "t/CORE/lib";
+    require 't/CORE/test.pl';
 }
 
 use strict;
diff --git a/t/CORE/op/warn.t b/t/CORE/op/warn.t
index 741c2c7..f5b4266 100644
--- a/t/CORE/op/warn.t
+++ b/t/CORE/op/warn.t
@@ -2,9 +2,9 @@
 #line 3 warn.t
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
+    require 't/CORE/test.pl';
+# Keep file len the same
+# so warning messages come out right.
 }
 
 plan 32;
diff --git a/t/CORE/op/while.t b/t/CORE/op/while.t
index 1e8eb44..5968503 100644
--- a/t/CORE/op/while.t
+++ b/t/CORE/op/while.t
@@ -1,10 +1,6 @@
 #!./perl
 
-BEGIN {
-    chdir 't';
-    @INC = "../lib";
-    require "./test.pl";
-}
+require 't/CORE/test.pl';
 
 plan(26);
 
@@ -215,9 +211,9 @@ sub save_context { $_[0] = wantarray; $_[1] }
     ok($a[0] ne $a[1]);
 }
 
-fresh_perl_is <<'72406', "foobar\n", {},
+fresh_perl_is(<<'72406', "foobar\n", {}, "[perl #72406] segv with do{}until CONST where const is not folded");
 { package o; use overload bool => sub { die unless $::ok++; return 1 } }
 use constant OK => bless [], o::;
 do{print("foobar\n");}until OK;
 72406
-    "[perl #72406] segv with do{}until CONST where const is not folded";
+    
diff --git a/t/CORE/op/write.t b/t/CORE/op/write.t
index 7f0e881..74381ae 100644
--- a/t/CORE/op/write.t
+++ b/t/CORE/op/write.t
@@ -1,9 +1,8 @@
 #!./perl
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
+    push @INC, "t/CORE/lib";
+    require 't/CORE/test.pl';
 }
 
 use strict;	# Amazed that this hackery can be made strict ...
diff --git a/t/CORE/op/yadayada.t b/t/CORE/op/yadayada.t
index a213bec..92984e8 100644
--- a/t/CORE/op/yadayada.t
+++ b/t/CORE/op/yadayada.t
@@ -1,9 +1,8 @@
 #!./perl
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
+    push @INC, "t/CORE/lib";
+    require 't/CORE/test.pl';
 }
 
 use strict;
diff --git a/t/CORE/re/charset.t b/t/CORE/re/charset.t
index ad2e952..302887c 100644
--- a/t/CORE/re/charset.t
+++ b/t/CORE/re/charset.t
@@ -1,10 +1,8 @@
 # Test the /a, /d, etc regex modifiers
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
-    require './loc_tools.pl';
+    require 't/CORE/test.pl';
+    require 't/CORE/loc_tools.pl';
 }
 
 use strict;
diff --git a/t/CORE/re/fold_grind.t b/t/CORE/re/fold_grind.t
index 7437295..824a614 100644
--- a/t/CORE/re/fold_grind.t
+++ b/t/CORE/re/fold_grind.t
@@ -3,15 +3,15 @@
 binmode STDOUT, ":utf8";
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
+    
+    push @INC, "t/CORE/lib";
+    require 't/CORE/test.pl';
     require Config; import Config;
     skip_all_if_miniperl("no dynamic loading on miniperl, no Encode nor POSIX");
     if ($^O eq 'dec_osf') {
       skip_all("$^O cannot handle this test");
     }
-    require './loc_tools.pl';
+    require 't/CORE/loc_tools.pl';
 }
 
 use charnames ":full";
diff --git a/t/CORE/re/no_utf8_pm.t b/t/CORE/re/no_utf8_pm.t
index 6595a24..a443643 100644
--- a/t/CORE/re/no_utf8_pm.t
+++ b/t/CORE/re/no_utf8_pm.t
@@ -1,9 +1,9 @@
 #!./perl
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
+    
+    push @INC, "t/CORE/lib";
+    require 't/CORE/test.pl';
 }
 
 plan tests => 1;
diff --git a/t/CORE/re/overload.t b/t/CORE/re/overload.t
index dba0357..951cf1a 100644
--- a/t/CORE/re/overload.t
+++ b/t/CORE/re/overload.t
@@ -1,9 +1,9 @@
 #!./perl -w
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
+    
+    push @INC, "t/CORE/lib";
+    require 't/CORE/test.pl';
 }
 
 use strict;
diff --git a/t/CORE/re/pat.t b/t/CORE/re/pat.t
index 7965f4e..4694772 100644
--- a/t/CORE/re/pat.t
+++ b/t/CORE/re/pat.t
@@ -14,10 +14,10 @@ $| = 1;
 
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = ('../lib','.');
+    
+    unshift @INC, 't/CORE/lib';
     require Config; import Config;
-    require './test.pl';
+    require 't/CORE/test.pl';
 }
 
 plan tests => 726;  # Update this when adding/deleting tests.
diff --git a/t/CORE/re/pat_advanced.t b/t/CORE/re/pat_advanced.t
index 4fd9f91..cb613f5 100644
--- a/t/CORE/re/pat_advanced.t
+++ b/t/CORE/re/pat_advanced.t
@@ -15,9 +15,9 @@ $| = 1;
 
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = ('../lib','.');
-    require './test.pl';
+    
+    unshift @INC, 't/CORE/lib';
+    require 't/CORE/test.pl';
     skip_all_if_miniperl("miniperl can't load Tie::Hash::NamedCapture, need for %+ and %-");
 }
 
diff --git a/t/CORE/re/pat_psycho.t b/t/CORE/re/pat_psycho.t
index fada302..8f58405 100644
--- a/t/CORE/re/pat_psycho.t
+++ b/t/CORE/re/pat_psycho.t
@@ -18,9 +18,9 @@ $| = 1;
 
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = ('../lib','.');
-    require './test.pl';
+    
+    unshift @INC, 't/CORE/lib';
+    require 't/CORE/test.pl';
     if ($^O eq 'dec_osf') {
         skip_all("$^O cannot handle this test");
     }
diff --git a/t/CORE/re/pat_re_eval.t b/t/CORE/re/pat_re_eval.t
index d64cb28..1f59d9f 100644
--- a/t/CORE/re/pat_re_eval.t
+++ b/t/CORE/re/pat_re_eval.t
@@ -16,9 +16,9 @@ $| = 1;
 
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = ('../lib','.');
-    require './test.pl';
+    
+    unshift @INC, 't/CORE/lib';
+    require 't/CORE/test.pl';
 }
 
 
diff --git a/t/CORE/re/pat_rt_report.t b/t/CORE/re/pat_rt_report.t
index 94100d1..9ea1e09 100644
--- a/t/CORE/re/pat_rt_report.t
+++ b/t/CORE/re/pat_rt_report.t
@@ -15,9 +15,9 @@ $| = 1;
 
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = ('../lib','.');
-    require './test.pl';
+    
+    unshift @INC, 't/CORE/lib';
+    require 't/CORE/test.pl';
     skip_all_if_miniperl("miniperl can't load Tie::Hash::NamedCapture, need for %+ and %-");
 }
 
diff --git a/t/CORE/re/pat_special_cc.t b/t/CORE/re/pat_special_cc.t
index 9f20449..102b607 100644
--- a/t/CORE/re/pat_special_cc.t
+++ b/t/CORE/re/pat_special_cc.t
@@ -15,9 +15,9 @@ $| = 1;
 
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = ('../lib','.');
-    require './test.pl';
+    
+    unshift @INC, 't/CORE/lib';
+    require 't/CORE/test.pl';
 }
 
 
diff --git a/t/CORE/re/pos.t b/t/CORE/re/pos.t
index 14cc1fa..9440fe9 100644
--- a/t/CORE/re/pos.t
+++ b/t/CORE/re/pos.t
@@ -6,9 +6,7 @@ use strict;
 use warnings;
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
+    require 't/CORE/test.pl';
 }
 
 plan tests => 8;
diff --git a/t/CORE/re/qr-72922.t b/t/CORE/re/qr-72922.t
index 5daaff0..ee2aa19 100644
--- a/t/CORE/re/qr-72922.t
+++ b/t/CORE/re/qr-72922.t
@@ -2,11 +2,12 @@
 use strict;
 
 BEGIN {
-    require './test.pl';
+    require 't/CORE/test.pl';
     skip_all_if_miniperl("no dynamic loading on miniperl, no Scalar::Util");
-    plan(tests => 14);
 }
 
+plan(tests => 14);
+
 # [perl 72922]: A 'copy' of a Regex object which has magic should not crash
 # When a Regex object was copied and the copy weaken then the original regex object
 # could no longer be 'copied' with qr//
diff --git a/t/CORE/re/qr.t b/t/CORE/re/qr.t
index 811f5c5..c476faa 100644
--- a/t/CORE/re/qr.t
+++ b/t/CORE/re/qr.t
@@ -1,9 +1,9 @@
 #!./perl -w
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
+    
+    push @INC, "t/CORE/lib";
+    require 't/CORE/test.pl';
 }
 
 plan tests => 5;
diff --git a/t/CORE/re/qr_gc.t b/t/CORE/re/qr_gc.t
index ca82f42..6e6aeab 100644
--- a/t/CORE/re/qr_gc.t
+++ b/t/CORE/re/qr_gc.t
@@ -1,9 +1,9 @@
 #!./perl -w
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
+    
+    push @INC, "t/CORE/lib";
+    require 't/CORE/test.pl';
     undef &Regexp::DESTROY;
 }
 
diff --git a/t/CORE/re/qrstack.t b/t/CORE/re/qrstack.t
index 47d190d..06afb74 100644
--- a/t/CORE/re/qrstack.t
+++ b/t/CORE/re/qrstack.t
@@ -1,9 +1,9 @@
 #!./perl -w
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
+    
+    push @INC, "t/CORE/lib";
+    require 't/CORE/test.pl';
 }
 
 plan tests => 1;
diff --git a/t/CORE/re/recompile.t b/t/CORE/re/recompile.t
index 2ae310d..dea27c7 100644
--- a/t/CORE/re/recompile.t
+++ b/t/CORE/re/recompile.t
@@ -15,9 +15,9 @@ $| = 1;
 
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = ('../lib','.');
-    require './test.pl';
+    
+    unshift @INC, 't/CORE/lib';
+    require 't/CORE/test.pl';
     skip_all_if_miniperl("no dynamic loading on miniperl, no re");
 }
 
diff --git a/t/CORE/re/reg_60508.t b/t/CORE/re/reg_60508.t
index e370ca0..2e57786 100644
--- a/t/CORE/re/reg_60508.t
+++ b/t/CORE/re/reg_60508.t
@@ -5,9 +5,9 @@
 # --Schwern
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
+    
+    push @INC, "t/CORE/lib";
+    require 't/CORE/test.pl';
 }
 
 use utf8;
diff --git a/t/CORE/re/reg_email.t b/t/CORE/re/reg_email.t
index a498585..9520464 100644
--- a/t/CORE/re/reg_email.t
+++ b/t/CORE/re/reg_email.t
@@ -4,9 +4,9 @@
 #
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
+    
+    push @INC, "t/CORE/lib";
+    require 't/CORE/test.pl';
 }
 
 use strict;
diff --git a/t/CORE/re/reg_eval.t b/t/CORE/re/reg_eval.t
index 56a55a8..01114ce 100644
--- a/t/CORE/re/reg_eval.t
+++ b/t/CORE/re/reg_eval.t
@@ -5,7 +5,7 @@
 # --rafl
 
 BEGIN {
-    require './test.pl';
+    require 't/CORE/test.pl';
 }
 
 fresh_perl_is(<<'CODE', 'ok', {});
diff --git a/t/CORE/re/reg_eval_scope.t b/t/CORE/re/reg_eval_scope.t
index 0e35e29..67612b2 100644
--- a/t/CORE/re/reg_eval_scope.t
+++ b/t/CORE/re/reg_eval_scope.t
@@ -3,9 +3,9 @@
 # Test scoping issues with embedded code in regexps.
 
 BEGIN {
-    chdir 't';
-    @INC = qw(lib ../lib);
-    require './test.pl';
+    
+    unshift @INC, 't/CORE/lib';
+    require 't/CORE/test.pl';
 }
 
 plan 48;
diff --git a/t/CORE/re/reg_fold.t b/t/CORE/re/reg_fold.t
index 9e97ddd..176d567 100644
--- a/t/CORE/re/reg_fold.t
+++ b/t/CORE/re/reg_fold.t
@@ -1,9 +1,9 @@
 #!perl
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
+    
+    push @INC, "t/CORE/lib";
+    require 't/CORE/test.pl';
     skip_all_if_miniperl("no dynamic loading on miniperl, no File::Spec");
 }
 
diff --git a/t/CORE/re/reg_mesg.t b/t/CORE/re/reg_mesg.t
index 55eda18..f246bd5 100644
--- a/t/CORE/re/reg_mesg.t
+++ b/t/CORE/re/reg_mesg.t
@@ -1,9 +1,9 @@
 #!./perl -w
 
 BEGIN {
-	chdir 't' if -d 't';
-	@INC = '../lib';
-	require './test.pl';
+	
+	push @INC, "t/CORE/lib";
+	require 't/CORE/test.pl';
 	eval 'require Config'; # assume defaults if this fails
 }
 
diff --git a/t/CORE/re/reg_namedcapture.t b/t/CORE/re/reg_namedcapture.t
index 03034b0..fc02c62 100644
--- a/t/CORE/re/reg_namedcapture.t
+++ b/t/CORE/re/reg_namedcapture.t
@@ -1,8 +1,8 @@
 #!./perl
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
+    
+    push @INC, "t/CORE/lib";
     unless (defined &DynaLoader::boot_DynaLoader) {
       print "1..0 # Skip: no dynamic loading on miniperl, no Tie::Hash::NamedCapture\n";
       exit 0;
diff --git a/t/CORE/re/reg_nc_tie.t b/t/CORE/re/reg_nc_tie.t
index 3380b25..1a9c105 100644
--- a/t/CORE/re/reg_nc_tie.t
+++ b/t/CORE/re/reg_nc_tie.t
@@ -1,9 +1,9 @@
 #!./perl
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
+    
+    push @INC, "t/CORE/lib";
+    require 't/CORE/test.pl';
     skip_all_if_miniperl("no dynamic loading on miniperl, no Tie::Hash::NamedCapture");
 }
 
diff --git a/t/CORE/re/reg_pmod.t b/t/CORE/re/reg_pmod.t
index 1db0bed..f9ac5d9 100644
--- a/t/CORE/re/reg_pmod.t
+++ b/t/CORE/re/reg_pmod.t
@@ -1,9 +1,7 @@
 #!./perl
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
+    require 't/CORE/test.pl';
 }
 
 use strict;
diff --git a/t/CORE/re/reg_posixcc.t b/t/CORE/re/reg_posixcc.t
index 7473eea..f12d97d 100644
--- a/t/CORE/re/reg_posixcc.t
+++ b/t/CORE/re/reg_posixcc.t
@@ -1,9 +1,7 @@
 #!perl
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
+    require 't/CORE/test.pl';
 }
 
 use strict;
diff --git a/t/CORE/re/regex_sets.t b/t/CORE/re/regex_sets.t
index 9ddceae..b41bfba 100644
--- a/t/CORE/re/regex_sets.t
+++ b/t/CORE/re/regex_sets.t
@@ -11,9 +11,9 @@ use warnings;
 $| = 1;
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = ('../lib','.');
-    require './test.pl';
+    
+    unshift @INC, 't/CORE/lib';
+    require 't/CORE/test.pl';
 }
 
 use utf8;
diff --git a/t/CORE/re/regex_sets_compat.t b/t/CORE/re/regex_sets_compat.t
index 27eb309..fafb97f 100644
--- a/t/CORE/re/regex_sets_compat.t
+++ b/t/CORE/re/regex_sets_compat.t
@@ -6,7 +6,7 @@
 # tests to use (?[...]) instead wherever the test uses [].
 
 BEGIN { $regex_sets = 1; }
-for $file ('./re/regexp.t', './t/re/regexp.t', ':re:regexp.t') {
+for $file ('t/CORE/re/regexp.t', './re/regexp.t', './t/re/regexp.t', ':re:regexp.t') {
     if (-r $file) {
 	do $file or die $@;
 	exit;
diff --git a/t/CORE/re/regexp.t b/t/CORE/re/regexp.t
index ac211ca..8bd79e9 100644
--- a/t/CORE/re/regexp.t
+++ b/t/CORE/re/regexp.t
@@ -58,8 +58,8 @@ BEGIN {
 	open TESTS, $file or die "Can't open $file";
     }
 
-    chdir 't' if -d 't';
-    @INC = '../lib';
+    
+    push @INC, "t/CORE/lib";
 
 }
 
@@ -76,7 +76,7 @@ use vars qw($qr $skip_amp $qr_embed $qr_embed_thr $regex_sets); # set by our cal
 
 
 if (!defined $file) {
-    open TESTS, 're/re_tests' or die "Can't open re/re_tests: $!";
+    open TESTS, 't/CORE/re/re_tests' or die "Can't open re/re_tests: $!";
 }
 
 my @tests = <TESTS>;
diff --git a/t/CORE/re/regexp_noamp.t b/t/CORE/re/regexp_noamp.t
index 20dbc25..a9e255e 100644
--- a/t/CORE/re/regexp_noamp.t
+++ b/t/CORE/re/regexp_noamp.t
@@ -3,7 +3,7 @@
 # Doesn't look at the expect field if it contains $&.
 
 $skip_amp = 1;
-for $file ('./re/regexp.t', './t/re/regexp.t', ':re:regexp.t') {
+for $file ('t/CORE/re/regexp.t', './re/regexp.t', './t/re/regexp.t', ':re:regexp.t') {
   if (-r $file) {
     do $file or die $@;
     exit;
diff --git a/t/CORE/re/regexp_notrie.t b/t/CORE/re/regexp_notrie.t
index 9ace6ed..d1a80cc 100644
--- a/t/CORE/re/regexp_notrie.t
+++ b/t/CORE/re/regexp_notrie.t
@@ -6,7 +6,7 @@ BEGIN {
 }
 
 $qr = 1;
-for $file ('./re/regexp.t', './t/re/regexp.t', ':re:regexp.t') {
+for $file ('t/CORE/re/regexp.t', './re/regexp.t', './t/re/regexp.t', ':re:regexp.t') {
     if (-r $file) {
 	do $file or die $@;
 	exit;
diff --git a/t/CORE/re/regexp_qr.t b/t/CORE/re/regexp_qr.t
index 18b1cf8..a2863eb 100644
--- a/t/CORE/re/regexp_qr.t
+++ b/t/CORE/re/regexp_qr.t
@@ -1,7 +1,7 @@
 #!./perl
 
 $qr = 1;
-for $file ('./re/regexp.t', './t/re/regexp.t', ':re:regexp.t') {
+for $file ('t/CORE/re/regexp.t', './re/regexp.t', './t/re/regexp.t', ':re:regexp.t') {
     if (-r $file) {
 	do $file or die $@;
 	exit;
diff --git a/t/CORE/re/regexp_qr_embed.t b/t/CORE/re/regexp_qr_embed.t
index f0366ca..d641baa 100644
--- a/t/CORE/re/regexp_qr_embed.t
+++ b/t/CORE/re/regexp_qr_embed.t
@@ -2,7 +2,7 @@
 
 $qr = 1;
 $qr_embed = 1;
-for $file ('./re/regexp.t', './t/re/regexp.t', ':re:regexp.t') {
+for $file ('t/CORE/re/regexp.t', './re/regexp.t', './t/re/regexp.t', ':re:regexp.t') {
     if (-r $file) {
 	do $file or die $@;
 	exit;
diff --git a/t/CORE/re/regexp_trielist.t b/t/CORE/re/regexp_trielist.t
index 55379e8..bbdeb1b 100644
--- a/t/CORE/re/regexp_trielist.t
+++ b/t/CORE/re/regexp_trielist.t
@@ -6,7 +6,7 @@ BEGIN {
       }
 
 $qr = 1;
-for $file ('./re/regexp.t', './t/re/regexp.t', ':re:regexp.t') {
+for $file ('t/CORE/re/regexp.t', './re/regexp.t', './t/re/regexp.t', ':re:regexp.t') {
     if (-r $file) {
 	do $file or die $@;
 	exit;
diff --git a/t/CORE/re/regexp_unicode_prop.t b/t/CORE/re/regexp_unicode_prop.t
index fb1b154..8bc4d7d 100644
--- a/t/CORE/re/regexp_unicode_prop.t
+++ b/t/CORE/re/regexp_unicode_prop.t
@@ -9,7 +9,7 @@ use warnings;
 use 5.010;
 
 BEGIN {
-    require './test.pl';
+    require 't/CORE/test.pl';
     skip_all_if_miniperl("no dynamic loading on miniperl, no File::Spec (used by charnames)");
 }
 
diff --git a/t/CORE/re/rt122747.t b/t/CORE/re/rt122747.t
index b839edd..958fa2c 100644
--- a/t/CORE/re/rt122747.t
+++ b/t/CORE/re/rt122747.t
@@ -6,9 +6,8 @@ $| = 1;
 
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = ('../lib','.','../ext/re');
-    require './test.pl';
+    unshift @INC, 't/CORE/lib', 't/CORE/ext/re';
+    require 't/CORE/test.pl';
 }
 
 plan tests => 3;
diff --git a/t/CORE/re/rxcode.t b/t/CORE/re/rxcode.t
index 42cece5..c129801 100644
--- a/t/CORE/re/rxcode.t
+++ b/t/CORE/re/rxcode.t
@@ -1,9 +1,9 @@
 #!./perl
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
+    
+    push @INC, "t/CORE/lib";
+    require 't/CORE/test.pl';
 }
 
 plan tests => 42;
diff --git a/t/CORE/re/subst.t b/t/CORE/re/subst.t
index 244bcad..f534922 100644
--- a/t/CORE/re/subst.t
+++ b/t/CORE/re/subst.t
@@ -1,10 +1,8 @@
 #!./perl -w
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
     require Config; import Config;
-    require './test.pl';
+    eval q{ require 't/CORE/test.pl' };
 }
 
 plan( tests => 236 );
diff --git a/t/CORE/re/substT.t b/t/CORE/re/substT.t
index 22c3c50..c5f25ec 100644
--- a/t/CORE/re/substT.t
+++ b/t/CORE/re/substT.t
@@ -1,8 +1,11 @@
 #!perl -wT
 
-for $file ('re/subst.t', 't/re/subst.t', ':re:subst.t') {
+require './t/CORE/test.pl';
+
+for $file ( 't/CORE/re/subst.t', 're/subst.t', 't/re/subst.t', ':re:subst.t') {
   if (-r $file) {
-    do "./$file";
+    my ($tf) = $file =~ qr{(.*)};
+    require "./$tf";
     exit;
   }
 }
diff --git a/t/CORE/re/subst_amp.t b/t/CORE/re/subst_amp.t
index f05d95d..3911918 100644
--- a/t/CORE/re/subst_amp.t
+++ b/t/CORE/re/subst_amp.t
@@ -1,9 +1,9 @@
 #!./perl -w
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
+    
+    push @INC, "t/CORE/lib";
+    require 't/CORE/test.pl';
 }
 
 use strict;
diff --git a/t/CORE/re/subst_wamp.t b/t/CORE/re/subst_wamp.t
index 286141c..03c8401 100644
--- a/t/CORE/re/subst_wamp.t
+++ b/t/CORE/re/subst_wamp.t
@@ -1,7 +1,7 @@
 #!./perl
 
 $dummy = defined $&;		# Now we have it...
-for $file ('re/subst.t', 't/re/subst.t', ':re:subst.t') {
+for $file ( 't/CORE/re/subst.t', 're/subst.t', 't/re/subst.t', ':re:subst.t') {
   if (-r $file) {
     do "./$file";
     exit;
diff --git a/t/CORE/re/uniprops.t b/t/CORE/re/uniprops.t
index 2f1cb44..0eeda0f 100644
--- a/t/CORE/re/uniprops.t
+++ b/t/CORE/re/uniprops.t
@@ -2,7 +2,8 @@ use strict;
 use warnings;
 no warnings 'once';
 
-if ($^O eq 'dec_osf') {
+# disabled by cPanel
+if (1 || $^O eq 'dec_osf') {
    print "1..0 # $^O cannot handle this test\n";
    exit(0);
 }
diff --git a/t/CORE/uni/attrs.t b/t/CORE/uni/attrs.t
index 3ea2f68..2263063 100644
--- a/t/CORE/uni/attrs.t
+++ b/t/CORE/uni/attrs.t
@@ -3,9 +3,9 @@
 # Regression tests for attributes.pm and the C< : attrs> syntax.
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
+    
+    push @INC, "t/CORE/lib";
+    require 't/CORE/test.pl';
     skip_all_if_miniperl("miniperl can't load attributes");
 }
 
diff --git a/t/CORE/uni/bless.t b/t/CORE/uni/bless.t
index 5475f3e..9a96375 100644
--- a/t/CORE/uni/bless.t
+++ b/t/CORE/uni/bless.t
@@ -1,9 +1,9 @@
 #!./perl
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
+    
+    push @INC, "t/CORE/lib";
+    require 't/CORE/test.pl';
 }
 
 use utf8;
diff --git a/t/CORE/uni/cache.t b/t/CORE/uni/cache.t
index 7b6e31e..7788aa9 100644
--- a/t/CORE/uni/cache.t
+++ b/t/CORE/uni/cache.t
@@ -1,6 +1,6 @@
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = qw(../lib .);
+    
+    unshift @INC, 't/CORE/lib';
     require "test.pl";
 }
 
diff --git a/t/CORE/uni/caller.t b/t/CORE/uni/caller.t
index b98ae07..a0aac41 100644
--- a/t/CORE/uni/caller.t
+++ b/t/CORE/uni/caller.t
@@ -2,9 +2,9 @@
 # Tests for caller()
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
+    
+    push @INC, "t/CORE/lib";
+    require 't/CORE/test.pl';
     plan( tests => 18 );
 }
 
diff --git a/t/CORE/uni/case.pl b/t/CORE/uni/case.pl
index 08df670..afe1493 100644
--- a/t/CORE/uni/case.pl
+++ b/t/CORE/uni/case.pl
@@ -1,4 +1,4 @@
-require "test.pl";
+require "t/CORE/test.pl";
 use strict;
 use warnings;
 
diff --git a/t/CORE/uni/chomp.t b/t/CORE/uni/chomp.t
index 0dca91a..6c550c7 100644
--- a/t/CORE/uni/chomp.t
+++ b/t/CORE/uni/chomp.t
@@ -1,7 +1,7 @@
 #!./perl -w
 
 BEGIN {
-    require './test.pl';
+    require 't/CORE/test.pl';
     skip_all_without_dynamic_extension('Encode');
     skip_all("EBCDIC") if $::IS_EBCDIC;
     skip_all_without_perlio();
diff --git a/t/CORE/uni/chr.t b/t/CORE/uni/chr.t
index 9445d32..d79b18a 100644
--- a/t/CORE/uni/chr.t
+++ b/t/CORE/uni/chr.t
@@ -1,7 +1,7 @@
 #!./perl -w
 
 BEGIN {
-    require './test.pl';
+    require 't/CORE/test.pl';
     skip_all_without_dynamic_extension('Encode');
     skip_all("EBCDIC") if $::IS_EBCDIC;
     skip_all_without_perlio();
diff --git a/t/CORE/uni/class.t b/t/CORE/uni/class.t
index 144ae43..d6f3573 100644
--- a/t/CORE/uni/class.t
+++ b/t/CORE/uni/class.t
@@ -1,6 +1,6 @@
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = qw(../lib .);
+    
+    unshift @INC, 't/CORE/lib';
     require "test.pl";
 }
 
diff --git a/t/CORE/uni/eval.t b/t/CORE/uni/eval.t
index f08c706..4962663 100644
--- a/t/CORE/uni/eval.t
+++ b/t/CORE/uni/eval.t
@@ -3,7 +3,7 @@
 # Check if eval correctly ignores the UTF-8 hint.
 
 BEGIN {
-    require './test.pl';
+    require 't/CORE/test.pl';
 }
 
 plan (tests => 5);
diff --git a/t/CORE/uni/fold.t b/t/CORE/uni/fold.t
index 94090e9..634f481 100644
--- a/t/CORE/uni/fold.t
+++ b/t/CORE/uni/fold.t
@@ -5,11 +5,11 @@ use warnings;
 # This file also tests the fc() keyword.
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
+    
+    push @INC, "t/CORE/lib";
     require Config; import Config;
-    require './test.pl';
-    require './loc_tools.pl';   # Contains find_utf8_ctype_locale()
+    require 't/CORE/test.pl';
+    require 't/CORE/loc_tools.pl';   # Contains find_utf8_ctype_locale()
 }
 
 use feature 'unicode_strings';
diff --git a/t/CORE/uni/goto.t b/t/CORE/uni/goto.t
index 922ddc1..f11a809 100644
--- a/t/CORE/uni/goto.t
+++ b/t/CORE/uni/goto.t
@@ -1,7 +1,7 @@
 #!./perl -w
 
 BEGIN {
-    require './test.pl';
+    require 't/CORE/test.pl';
 }
 
 plan tests => 4;
diff --git a/t/CORE/uni/greek.t b/t/CORE/uni/greek.t
index 5326ab9..cb6906c 100644
--- a/t/CORE/uni/greek.t
+++ b/t/CORE/uni/greek.t
@@ -1,7 +1,7 @@
 #!./perl -w
 
 BEGIN {
-    require './test.pl';
+    require 't/CORE/test.pl';
     skip_all_without_dynamic_extension('Encode');
     skip_all("EBCDIC") if $::IS_EBCDIC;
     skip_all_without_perlio();
diff --git a/t/CORE/uni/gv.t b/t/CORE/uni/gv.t
index 90a6332..b3f8de8 100644
--- a/t/CORE/uni/gv.t
+++ b/t/CORE/uni/gv.t
@@ -5,9 +5,9 @@
 #
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
+    
+    push @INC, "t/CORE/lib";
+    require 't/CORE/test.pl';
 }
 
 use utf8;
diff --git a/t/CORE/uni/labels.t b/t/CORE/uni/labels.t
index 3fa9d38..5d3d427 100644
--- a/t/CORE/uni/labels.t
+++ b/t/CORE/uni/labels.t
@@ -3,9 +3,9 @@
 # Tests for labels in UTF-8
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
+    
+    push @INC, "t/CORE/lib";
+    require 't/CORE/test.pl';
 }
 
 use utf8;
diff --git a/t/CORE/uni/latin2.t b/t/CORE/uni/latin2.t
index 6e7d980..63c2c2c 100644
--- a/t/CORE/uni/latin2.t
+++ b/t/CORE/uni/latin2.t
@@ -1,7 +1,7 @@
 #!./perl -w
 
 BEGIN {
-    require './test.pl';
+    require 't/CORE/test.pl';
     skip_all_without_dynamic_extension('Encode');
     skip_all("EBCDIC") if $::IS_EBCDIC;
     skip_all_without_perlio();
diff --git a/t/CORE/uni/lex_utf8.t b/t/CORE/uni/lex_utf8.t
index d6c6261..711132d 100644
--- a/t/CORE/uni/lex_utf8.t
+++ b/t/CORE/uni/lex_utf8.t
@@ -5,9 +5,7 @@
 BEGIN {
     $| = 1;
 
-    chdir 't';
-    @INC = '../lib';
-    require './test.pl';
+    require 't/CORE/test.pl';
     skip_all_if_miniperl("no dynamic loading on miniperl, no re");
     skip_all('EBCDIC') if $::IS_EBCDIC;
 }
diff --git a/t/CORE/uni/lower.t b/t/CORE/uni/lower.t
index 5b706af..2f0c236 100644
--- a/t/CORE/uni/lower.t
+++ b/t/CORE/uni/lower.t
@@ -1,7 +1,6 @@
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = qw(../lib uni .);
-    require "case.pl";
+    
+    require 't/CORE/uni/case.pl';
 }
 
 casetest(0, # No extra tests run here,
diff --git a/t/CORE/uni/method.t b/t/CORE/uni/method.t
index 4f9d72d..3882918 100644
--- a/t/CORE/uni/method.t
+++ b/t/CORE/uni/method.t
@@ -5,8 +5,8 @@
 #
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = qw(. ../lib);
+    
+    push @INC, qw{t/CORE/lib};
     require "test.pl";
 }
 
diff --git a/t/CORE/uni/opcroak.t b/t/CORE/uni/opcroak.t
index 29909d7..c9ba6b6 100644
--- a/t/CORE/uni/opcroak.t
+++ b/t/CORE/uni/opcroak.t
@@ -5,9 +5,9 @@
 #
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
+    
+    push @INC, "t/CORE/lib";
+    require 't/CORE/test.pl';
 }
 
 use utf8;
diff --git a/t/CORE/uni/overload.t b/t/CORE/uni/overload.t
index bd87b66..449f35f 100644
--- a/t/CORE/uni/overload.t
+++ b/t/CORE/uni/overload.t
@@ -1,10 +1,8 @@
 #!perl -w
 
 BEGIN {
-    chdir 't';
-    @INC = '../lib';
     require Config; import Config;
-    require './test.pl';
+    require 't/CORE/test.pl';
 }
 
 plan(tests => 215);
diff --git a/t/CORE/uni/package.t b/t/CORE/uni/package.t
index bb9092b..721fe80 100644
--- a/t/CORE/uni/package.t
+++ b/t/CORE/uni/package.t
@@ -3,7 +3,7 @@
 # Checks if 'package' work as intended.
 
 BEGIN {
-    require './test.pl';
+    require 't/CORE/test.pl';
 }
 
 plan (tests => 18);
diff --git a/t/CORE/uni/parser.t b/t/CORE/uni/parser.t
index b71ca88..9640156 100644
--- a/t/CORE/uni/parser.t
+++ b/t/CORE/uni/parser.t
@@ -4,7 +4,7 @@
 # (including weird syntax errors)
 
 BEGIN {
-    require './test.pl';
+    require 't/CORE/test.pl';
 }
 
 plan (tests => 52);
diff --git a/t/CORE/uni/readline.t b/t/CORE/uni/readline.t
index a83558e..6d8b437 100644
--- a/t/CORE/uni/readline.t
+++ b/t/CORE/uni/readline.t
@@ -1,9 +1,7 @@
 #!./perl
 
 BEGIN {
-    chdir 't';
-    @INC = '../lib';
-    require './test.pl';
+    require 't/CORE/test.pl';
 }
 
 plan tests => 7;
diff --git a/t/CORE/uni/select.t b/t/CORE/uni/select.t
index 0e00105..993fda7 100644
--- a/t/CORE/uni/select.t
+++ b/t/CORE/uni/select.t
@@ -5,9 +5,9 @@
 #
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
+    
+    push @INC, "t/CORE/lib";
+    require 't/CORE/test.pl';
 }
 
 use utf8;
diff --git a/t/CORE/uni/sprintf.t b/t/CORE/uni/sprintf.t
index 0862649..290c563 100644
--- a/t/CORE/uni/sprintf.t
+++ b/t/CORE/uni/sprintf.t
@@ -1,8 +1,8 @@
 #!./perl -w
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = qw(../lib .);
+    
+    unshift @INC, 't/CORE/lib';
     require "test.pl";
 }
 
diff --git a/t/CORE/uni/stash.t b/t/CORE/uni/stash.t
index 7d24e51..006e6a8 100644
--- a/t/CORE/uni/stash.t
+++ b/t/CORE/uni/stash.t
@@ -5,9 +5,7 @@
 #
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
-    require './test.pl';
+    require 't/CORE/test.pl';
 }
 
 use utf8;
diff --git a/t/CORE/uni/tie.t b/t/CORE/uni/tie.t
index b9da823..7fd35c9 100644
--- a/t/CORE/uni/tie.t
+++ b/t/CORE/uni/tie.t
@@ -1,7 +1,7 @@
 #!perl -w
 
 BEGIN {
-    require './test.pl';
+    require 't/CORE/test.pl';
 }
 
 plan (tests => 10);
diff --git a/t/CORE/uni/title.t b/t/CORE/uni/title.t
index 2d6dcb7..717ec30 100644
--- a/t/CORE/uni/title.t
+++ b/t/CORE/uni/title.t
@@ -1,7 +1,7 @@
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = qw(../lib uni .);
-    require "case.pl";
+    
+    push @INC, qw{t/CORE/lib t/CORE/uni};
+    require 't/CORE/uni/case.pl';
 }
 
 casetest(0, # No extra tests run here,
diff --git a/t/CORE/uni/tr_7jis.t b/t/CORE/uni/tr_7jis.t
index 2108319..46444da 100644
--- a/t/CORE/uni/tr_7jis.t
+++ b/t/CORE/uni/tr_7jis.t
@@ -5,7 +5,7 @@
 # -- dankogai
 
 BEGIN {
-    require './test.pl';
+    require 't/CORE/test.pl';
     skip_all_without_dynamic_extension('Encode');
     skip_all("EBCDIC") if $::IS_EBCDIC;
     skip_all_without_perlio();
diff --git a/t/CORE/uni/tr_eucjp.t b/t/CORE/uni/tr_eucjp.t
index a317bb1..75d55e3 100644
--- a/t/CORE/uni/tr_eucjp.t
+++ b/t/CORE/uni/tr_eucjp.t
@@ -4,7 +4,7 @@
 # -- dankogai
 
 BEGIN {
-    require './test.pl';
+    require 't/CORE/test.pl';
     skip_all_without_dynamic_extension('Encode');
     skip_all("EBCDIC") if $::IS_EBCDIC;
     skip_all_without_perlio();
diff --git a/t/CORE/uni/tr_sjis.t b/t/CORE/uni/tr_sjis.t
index a82b35c..518c825 100644
--- a/t/CORE/uni/tr_sjis.t
+++ b/t/CORE/uni/tr_sjis.t
@@ -4,7 +4,7 @@
 # -- dankogai
 
 BEGIN {
-    require './test.pl';
+    require 't/CORE/test.pl';
     skip_all_without_dynamic_extension('Encode');
     skip_all("EBCDIC") if $::IS_EBCDIC;
     skip_all_without_perlio();
diff --git a/t/CORE/uni/tr_utf8.t b/t/CORE/uni/tr_utf8.t
index 2a566d9..8c15467 100644
--- a/t/CORE/uni/tr_utf8.t
+++ b/t/CORE/uni/tr_utf8.t
@@ -5,7 +5,7 @@
 # -- dankogai
 
 BEGIN {
-    require './test.pl';
+    require 't/CORE/test.pl';
     skip_all_without_dynamic_extension('Encode');
     skip_all("EBCDIC") if $::IS_EBCDIC;
     skip_all_without_perlio();
diff --git a/t/CORE/uni/universal.t b/t/CORE/uni/universal.t
index 626c30f..f326b09 100644
--- a/t/CORE/uni/universal.t
+++ b/t/CORE/uni/universal.t
@@ -4,10 +4,10 @@
 #
 
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = '../lib';
+    
+    push @INC, "t/CORE/lib";
     $| = 1;
-    require "./test.pl";
+    require 't/CORE/test.pl';
 }
 
 use utf8;
diff --git a/t/CORE/uni/upper.t b/t/CORE/uni/upper.t
index 315680c..31e2470 100644
--- a/t/CORE/uni/upper.t
+++ b/t/CORE/uni/upper.t
@@ -1,7 +1,5 @@
 BEGIN {
-    chdir 't' if -d 't';
-    @INC = qw(../lib uni .);
-    require "case.pl";
+    require 't/CORE/uni/case.pl';
 }
 
 is(uc("\x{3B1}\x{345}\x{301}"), "\x{391}\x{301}\x{399}", 'Verify moves YPOGEGRAMMENI');
diff --git a/t/CORE/uni/variables.t b/t/CORE/uni/variables.t
index d802a0a..c865a06 100644
--- a/t/CORE/uni/variables.t
+++ b/t/CORE/uni/variables.t
@@ -4,7 +4,7 @@
 # (including weird syntax errors)
 
 BEGIN {
-    require './test.pl';
+    require 't/CORE/test.pl';
 }
 
 use 5.016;
diff --git a/t/CORE/uni/write.t b/t/CORE/uni/write.t
index bfc1ddb..851a834 100644
--- a/t/CORE/uni/write.t
+++ b/t/CORE/uni/write.t
@@ -2,7 +2,7 @@
 use strict;
 
 BEGIN {
-    require './test.pl';
+    require 't/CORE/test.pl';
     skip_all("EBCDIC porting needed") if $::IS_EBCDIC;
     skip_all_without_perlio();
 }
-- 
2.5.0

