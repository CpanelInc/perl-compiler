From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Nicolas Rochelemagne <rochelemagne@cpanel.net>
Date: Thu, 25 May 2017 12:24:00 -0600
Subject: [PATCH 42/43] MGf_IMMORTAL flag for magic

---
 SOURCES/perl/mg.c | 30 +++++++++++++++++++-----------
 SOURCES/perl/mg.h |  6 ++++--
 SOURCES/perl/op.c |  2 +-
 SOURCES/perl/sv.c | 43 +++++++++++++++++++++++--------------------
 4 files changed, 47 insertions(+), 34 deletions(-)

diff --git a/SOURCES/perl/mg.c b/SOURCES/perl/mg.c
index 4321a40..e1894fa 100644
--- a/SOURCES/perl/mg.c
+++ b/SOURCES/perl/mg.c
@@ -537,17 +537,23 @@ static void
 S_mg_free_struct(pTHX_ SV *sv, MAGIC *mg)
 {
     const MGVTBL* const vtbl = mg->mg_virtual;
+    
+    int is_immortal = mg->mg_flags & MGf_IMMORTAL;
+
     if (vtbl && vtbl->svt_free)
-	vtbl->svt_free(aTHX_ sv, mg);
+		vtbl->svt_free(aTHX_ sv, mg);
     if (mg->mg_ptr && mg->mg_type != PERL_MAGIC_regex_global) {
-	if (mg->mg_len > 0 || mg->mg_type == PERL_MAGIC_utf8)
-	    Safefree(mg->mg_ptr);
-	else if (mg->mg_len == HEf_SVKEY)
-	    SvREFCNT_dec(MUTABLE_SV(mg->mg_ptr));
+		if (mg->mg_len > 0 || mg->mg_type == PERL_MAGIC_utf8)
+		    if (!is_immortal) 
+		    	Safefree(mg->mg_ptr);
+		else if (mg->mg_len == HEf_SVKEY)
+		    SvREFCNT_dec(MUTABLE_SV(mg->mg_ptr));
     }
     if (mg->mg_flags & MGf_REFCOUNTED)
-	SvREFCNT_dec(mg->mg_obj);
-    Safefree(mg);
+		SvREFCNT_dec(mg->mg_obj);
+    if (!is_immortal)
+    	Safefree(mg);
+
 }
 
 /*
@@ -2490,9 +2496,10 @@ Perl_magic_setcollxfrm(pTHX_ SV *sv, MAGIC *mg)
     PERL_UNUSED_CONTEXT;
     PERL_UNUSED_ARG(sv);
     if (mg->mg_ptr) {
-	Safefree(mg->mg_ptr);
-	mg->mg_ptr = NULL;
-	mg->mg_len = -1;
+		if ( !(mg->mg_flags & MGf_IMMORTAL) )
+			Safefree(mg->mg_ptr);
+		mg->mg_ptr = NULL;
+		mg->mg_len = -1;
     }
     return 0;
 }
@@ -2505,7 +2512,8 @@ Perl_magic_setutf8(pTHX_ SV *sv, MAGIC *mg)
     PERL_ARGS_ASSERT_MAGIC_SETUTF8;
     PERL_UNUSED_CONTEXT;
     PERL_UNUSED_ARG(sv);
-    Safefree(mg->mg_ptr);	/* The mg_ptr holds the pos cache. */
+    if ( !(mg->mg_flags & MGf_IMMORTAL) ) /* no more needed with a better bcSafefree protection */ 
+    	Safefree(mg->mg_ptr);	/* The mg_ptr holds the pos cache. */
     mg->mg_ptr = NULL;
     mg->mg_len = -1;		/* The mg_len holds the len cache. */
     return 0;
diff --git a/SOURCES/perl/mg.h b/SOURCES/perl/mg.h
index 034fd7e..3bc2698 100644
--- a/SOURCES/perl/mg.h
+++ b/SOURCES/perl/mg.h
@@ -25,9 +25,9 @@ struct magic {
     MGVTBL*	mg_virtual;	/* pointer to magic functions */
     U16		mg_private;
     char	mg_type;
-    U8		mg_flags;
+    U16		mg_flags;
     SSize_t	mg_len;
-    SV*		mg_obj;
+    SV*		mg_obj;    
     char*	mg_ptr;
 };
 
@@ -41,6 +41,8 @@ struct magic {
 #define MGf_LOCAL   0x20	/* has an svt_local MGVTBL entry */
 #define MGf_BYTES   0x40        /* PERL_MAGIC_regex_global only */
 #define MGf_PERSIST    0x80     /* PERL_MAGIC_lvref only */
+#define MGf_IMMORTAL  0x100     /* PERL_MAGIC is static (B::C) do not free it */
+#define MGf_MASK      255 /* lower value that covers: ~MGf_IMMORTAL we do not want to have IMMORTAL as part of this mask */
 
 #define MgTAINTEDDIR(mg)	(mg->mg_flags & MGf_TAINTEDDIR)
 #define MgTAINTEDDIR_on(mg)	(mg->mg_flags |= MGf_TAINTEDDIR)
diff --git a/SOURCES/perl/op.c b/SOURCES/perl/op.c
index 4b6b227..f8257e4 100644
--- a/SOURCES/perl/op.c
+++ b/SOURCES/perl/op.c
@@ -11639,7 +11639,7 @@ S_cv_get_call_checker(CV *cv, Perl_call_checker *ckfun_p, SV **ckobj_p,
     if (callmg) {
 	*ckfun_p = DPTR2FPTR(Perl_call_checker, callmg->mg_ptr);
 	*ckobj_p = callmg->mg_obj;
-	if (flagsp) *flagsp = callmg->mg_flags;
+	if (flagsp) *flagsp = callmg->mg_flags & MGf_MASK;
     } else {
 	*ckfun_p = Perl_ck_entersub_args_proto_or_list;
 	*ckobj_p = (SV*)cv;
diff --git a/SOURCES/perl/sv.c b/SOURCES/perl/sv.c
index 03c9116..4fd97c9 100644
--- a/SOURCES/perl/sv.c
+++ b/SOURCES/perl/sv.c
@@ -5774,33 +5774,36 @@ S_sv_unmagicext_flags(pTHX_ SV *const sv, const int type, MGVTBL *vtbl, const U3
     if (SvTYPE(sv) < SVt_PVMG || !SvMAGIC(sv))
 	return 0;
     mgp = &(((XPVMG*) SvANY(sv))->xmg_u.xmg_magic);
-    for (mg = *mgp; mg; mg = *mgp) {
-	const MGVTBL* const virt = mg->mg_virtual;
-	if (mg->mg_type == type && (!flags || virt == vtbl)) {
-	    *mgp = mg->mg_moremagic;
-	    if (virt && virt->svt_free)
-		virt->svt_free(aTHX_ sv, mg);
-	    if (mg->mg_ptr && mg->mg_type != PERL_MAGIC_regex_global) {
-		if (mg->mg_len > 0)
-		    Safefree(mg->mg_ptr);
-		else if (mg->mg_len == HEf_SVKEY)
-		    SvREFCNT_dec(MUTABLE_SV(mg->mg_ptr));
-		else if (mg->mg_type == PERL_MAGIC_utf8)
-		    Safefree(mg->mg_ptr);
-            }
-	    if (mg->mg_flags & MGf_REFCOUNTED)
-		SvREFCNT_dec(mg->mg_obj);
-	    Safefree(mg);
+    for (mg = *mgp; mg; mg = *mgp) {	    
+		const MGVTBL* const virt = mg->mg_virtual;
+		if (mg->mg_type == type && (!flags || virt == vtbl)) {
+		    int is_immortal = mg->mg_flags & MGf_IMMORTAL;
+		    
+		    *mgp = mg->mg_moremagic;
+		    
+		    if (virt && virt->svt_free)
+				virt->svt_free(aTHX_ sv, mg);
+		    if (mg->mg_ptr && mg->mg_type != PERL_MAGIC_regex_global) {
+				if (mg->mg_len > 0) {
+				    if (!is_immortal) Safefree(mg->mg_ptr);
+				} else if (mg->mg_len == HEf_SVKEY)
+				    SvREFCNT_dec(MUTABLE_SV(mg->mg_ptr));
+				else if (mg->mg_type == PERL_MAGIC_utf8)
+				    if (!is_immortal) Safefree(mg->mg_ptr);
+	        }
+		    if (mg->mg_flags & MGf_REFCOUNTED)
+				SvREFCNT_dec(mg->mg_obj);
+		    if (!is_immortal) Safefree(mg);
 	}
 	else
 	    mgp = &mg->mg_moremagic;
     }
     if (SvMAGIC(sv)) {
-	if (SvMAGICAL(sv))	/* if we're under save_magic, wait for restore_magic; */
-	    mg_magical(sv);	/*    else fix the flags now */
+		if (SvMAGICAL(sv))	/* if we're under save_magic, wait for restore_magic; */
+		    mg_magical(sv);	/*    else fix the flags now */
     }
     else
-	SvMAGICAL_off(sv);
+		SvMAGICAL_off(sv);
 
     return 0;
 }
